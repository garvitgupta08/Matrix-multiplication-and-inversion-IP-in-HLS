// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixmult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> matrixmult::ap_ST_fsm_state1 = "1";
const sc_lv<4> matrixmult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> matrixmult::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> matrixmult::ap_ST_fsm_state28 = "1000";
const sc_lv<32> matrixmult::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool matrixmult::ap_const_boolean_1 = true;
const sc_lv<32> matrixmult::ap_const_lv32_1 = "1";
const bool matrixmult::ap_const_boolean_0 = false;
const sc_lv<1> matrixmult::ap_const_lv1_0 = "0";
const sc_lv<32> matrixmult::ap_const_lv32_2 = "10";
const sc_lv<1> matrixmult::ap_const_lv1_1 = "1";
const sc_lv<5> matrixmult::ap_const_lv5_0 = "00000";
const sc_lv<3> matrixmult::ap_const_lv3_0 = "000";
const sc_lv<5> matrixmult::ap_const_lv5_10 = "10000";
const sc_lv<5> matrixmult::ap_const_lv5_1 = "1";
const sc_lv<3> matrixmult::ap_const_lv3_1 = "1";
const sc_lv<3> matrixmult::ap_const_lv3_4 = "100";
const sc_lv<2> matrixmult::ap_const_lv2_0 = "00";
const sc_lv<59> matrixmult::ap_const_lv59_0 = "00000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> matrixmult::ap_const_lv4_4 = "100";
const sc_lv<5> matrixmult::ap_const_lv5_2 = "10";
const sc_lv<5> matrixmult::ap_const_lv5_3 = "11";
const sc_lv<61> matrixmult::ap_const_lv61_1 = "1";
const sc_lv<5> matrixmult::ap_const_lv5_C = "1100";
const sc_lv<32> matrixmult::ap_const_lv32_3 = "11";

matrixmult::matrixmult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrixmult_fadd_3bkb_U1 = new matrixmult_fadd_3bkb<1,5,32,32,32>("matrixmult_fadd_3bkb_U1");
    matrixmult_fadd_3bkb_U1->clk(ap_clk);
    matrixmult_fadd_3bkb_U1->reset(ap_rst);
    matrixmult_fadd_3bkb_U1->din0(grp_fu_196_p0);
    matrixmult_fadd_3bkb_U1->din1(grp_fu_196_p1);
    matrixmult_fadd_3bkb_U1->ce(ap_var_for_const0);
    matrixmult_fadd_3bkb_U1->dout(grp_fu_196_p2);
    matrixmult_fadd_3bkb_U2 = new matrixmult_fadd_3bkb<1,5,32,32,32>("matrixmult_fadd_3bkb_U2");
    matrixmult_fadd_3bkb_U2->clk(ap_clk);
    matrixmult_fadd_3bkb_U2->reset(ap_rst);
    matrixmult_fadd_3bkb_U2->din0(grp_fu_201_p0);
    matrixmult_fadd_3bkb_U2->din1(grp_fu_201_p1);
    matrixmult_fadd_3bkb_U2->ce(ap_var_for_const0);
    matrixmult_fadd_3bkb_U2->dout(grp_fu_201_p2);
    matrixmult_fmul_3cud_U3 = new matrixmult_fmul_3cud<1,4,32,32,32>("matrixmult_fmul_3cud_U3");
    matrixmult_fmul_3cud_U3->clk(ap_clk);
    matrixmult_fmul_3cud_U3->reset(ap_rst);
    matrixmult_fmul_3cud_U3->din0(A_q0);
    matrixmult_fmul_3cud_U3->din1(B_q0);
    matrixmult_fmul_3cud_U3->ce(ap_var_for_const0);
    matrixmult_fmul_3cud_U3->dout(grp_fu_205_p2);
    matrixmult_fmul_3cud_U4 = new matrixmult_fmul_3cud<1,4,32,32,32>("matrixmult_fmul_3cud_U4");
    matrixmult_fmul_3cud_U4->clk(ap_clk);
    matrixmult_fmul_3cud_U4->reset(ap_rst);
    matrixmult_fmul_3cud_U4->din0(A_q1);
    matrixmult_fmul_3cud_U4->din1(B_q1);
    matrixmult_fmul_3cud_U4->ce(ap_var_for_const0);
    matrixmult_fmul_3cud_U4->dout(grp_fu_211_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln12_fu_265_p1 );
    sensitive << ( tmp_6_fu_310_p3 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_fu_276_p3 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_7_fu_324_p3 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln12_1_fu_285_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_8_fu_336_p3 );

    SC_METHOD(thread_B_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln12_6_fu_300_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln12_7_fu_350_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_B_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_add_ln12_1_fu_344_p2);
    sensitive << ( zext_ln12_4_fu_333_p1 );

    SC_METHOD(thread_add_ln12_fu_294_p2);
    sensitive << ( zext_ln12_5_fu_290_p1 );

    SC_METHOD(thread_add_ln14_fu_366_p2);
    sensitive << ( zext_ln12_3_fu_363_p1 );
    sensitive << ( zext_ln12_2_fu_360_p1 );

    SC_METHOD(thread_add_ln5_fu_223_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_167_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state13_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state17_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter8);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state21_pp0_stage1_iter9);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state23_pp0_stage1_iter10);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state25_pp0_stage1_iter11);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state27_pp0_stage1_iter12);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter3);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln5_fu_217_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_178_p4);
    sensitive << ( i_0_reg_174 );
    sensitive << ( icmp_ln5_reg_377 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln12_1_reg_394 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_167_p4);
    sensitive << ( indvar_flatten_reg_163 );
    sensitive << ( icmp_ln5_reg_377 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln5_reg_381 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_189_p4);
    sensitive << ( j_0_reg_185 );
    sensitive << ( icmp_ln5_reg_377 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_466 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_grp_fu_196_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp1_reg_491 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( sum_s_reg_511 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_196_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_1_reg_496_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_201_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( sum_1_reg_516 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( sum_2_reg_521 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_201_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_2_reg_501_pp0_iter6_reg );
    sensitive << ( tmp_3_reg_506_pp0_iter9_reg );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_i_fu_229_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_178_p4 );

    SC_METHOD(thread_icmp_ln5_fu_217_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_167_p4 );

    SC_METHOD(thread_icmp_ln7_fu_235_p2);
    sensitive << ( icmp_ln5_fu_217_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_189_p4 );

    SC_METHOD(thread_j_fu_355_p2);
    sensitive << ( select_ln12_reg_386 );

    SC_METHOD(thread_or_ln12_1_fu_305_p2);
    sensitive << ( tmp_4_reg_399 );

    SC_METHOD(thread_or_ln12_2_fu_319_p2);
    sensitive << ( tmp_4_reg_399 );

    SC_METHOD(thread_or_ln12_fu_270_p2);
    sensitive << ( tmp_4_fu_257_p3 );

    SC_METHOD(thread_res_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_fu_372_p1 );

    SC_METHOD(thread_res_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter12 );

    SC_METHOD(thread_res_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( sum_3_reg_526 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_res_we0);
    sensitive << ( icmp_ln5_reg_377_pp0_iter12_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter12 );

    SC_METHOD(thread_select_ln12_1_fu_249_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_178_p4 );
    sensitive << ( icmp_ln7_fu_235_p2 );
    sensitive << ( i_fu_229_p2 );

    SC_METHOD(thread_select_ln12_fu_241_p3);
    sensitive << ( ap_phi_mux_j_0_phi_fu_189_p4 );
    sensitive << ( icmp_ln7_fu_235_p2 );

    SC_METHOD(thread_tmp_4_fu_257_p3);
    sensitive << ( select_ln12_1_fu_249_p3 );

    SC_METHOD(thread_tmp_5_fu_276_p3);
    sensitive << ( or_ln12_fu_270_p2 );

    SC_METHOD(thread_tmp_6_fu_310_p3);
    sensitive << ( or_ln12_1_fu_305_p2 );

    SC_METHOD(thread_tmp_7_fu_324_p3);
    sensitive << ( or_ln12_2_fu_319_p2 );

    SC_METHOD(thread_tmp_8_fu_336_p3);
    sensitive << ( select_ln12_reg_386 );

    SC_METHOD(thread_zext_ln12_1_fu_285_p1);
    sensitive << ( select_ln12_fu_241_p3 );

    SC_METHOD(thread_zext_ln12_2_fu_360_p1);
    sensitive << ( tmp_4_reg_399_pp0_iter12_reg );

    SC_METHOD(thread_zext_ln12_3_fu_363_p1);
    sensitive << ( select_ln12_reg_386_pp0_iter12_reg );

    SC_METHOD(thread_zext_ln12_4_fu_333_p1);
    sensitive << ( select_ln12_reg_386 );

    SC_METHOD(thread_zext_ln12_5_fu_290_p1);
    sensitive << ( select_ln12_fu_241_p3 );

    SC_METHOD(thread_zext_ln12_6_fu_300_p1);
    sensitive << ( add_ln12_fu_294_p2 );

    SC_METHOD(thread_zext_ln12_7_fu_350_p1);
    sensitive << ( add_ln12_1_fu_344_p2 );

    SC_METHOD(thread_zext_ln12_fu_265_p1);
    sensitive << ( tmp_4_fu_257_p3 );

    SC_METHOD(thread_zext_ln14_fu_372_p1);
    sensitive << ( add_ln14_fu_366_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln5_fu_217_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_enable_reg_pp0_iter11 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, B_address1, "(port)B_address1");
    sc_trace(mVcdFile, B_ce1, "(port)B_ce1");
    sc_trace(mVcdFile, B_q1, "(port)B_q1");
    sc_trace(mVcdFile, res_address0, "(port)res_address0");
    sc_trace(mVcdFile, res_ce0, "(port)res_ce0");
    sc_trace(mVcdFile, res_we0, "(port)res_we0");
    sc_trace(mVcdFile, res_d0, "(port)res_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_163, "indvar_flatten_reg_163");
    sc_trace(mVcdFile, i_0_reg_174, "i_0_reg_174");
    sc_trace(mVcdFile, j_0_reg_185, "j_0_reg_185");
    sc_trace(mVcdFile, icmp_ln5_fu_217_p2, "icmp_ln5_fu_217_p2");
    sc_trace(mVcdFile, icmp_ln5_reg_377, "icmp_ln5_reg_377");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter3, "ap_block_state8_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter4, "ap_block_state10_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter5, "ap_block_state12_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter6, "ap_block_state14_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter7, "ap_block_state16_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter8, "ap_block_state18_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter9, "ap_block_state20_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter10, "ap_block_state22_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter11, "ap_block_state24_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter12, "ap_block_state26_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter1_reg, "icmp_ln5_reg_377_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter2_reg, "icmp_ln5_reg_377_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter3_reg, "icmp_ln5_reg_377_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter4_reg, "icmp_ln5_reg_377_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter5_reg, "icmp_ln5_reg_377_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter6_reg, "icmp_ln5_reg_377_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter7_reg, "icmp_ln5_reg_377_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter8_reg, "icmp_ln5_reg_377_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter9_reg, "icmp_ln5_reg_377_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter10_reg, "icmp_ln5_reg_377_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter11_reg, "icmp_ln5_reg_377_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln5_reg_377_pp0_iter12_reg, "icmp_ln5_reg_377_pp0_iter12_reg");
    sc_trace(mVcdFile, add_ln5_fu_223_p2, "add_ln5_fu_223_p2");
    sc_trace(mVcdFile, add_ln5_reg_381, "add_ln5_reg_381");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln12_fu_241_p3, "select_ln12_fu_241_p3");
    sc_trace(mVcdFile, select_ln12_reg_386, "select_ln12_reg_386");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter1_reg, "select_ln12_reg_386_pp0_iter1_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter2_reg, "select_ln12_reg_386_pp0_iter2_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter3_reg, "select_ln12_reg_386_pp0_iter3_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter4_reg, "select_ln12_reg_386_pp0_iter4_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter5_reg, "select_ln12_reg_386_pp0_iter5_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter6_reg, "select_ln12_reg_386_pp0_iter6_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter7_reg, "select_ln12_reg_386_pp0_iter7_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter8_reg, "select_ln12_reg_386_pp0_iter8_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter9_reg, "select_ln12_reg_386_pp0_iter9_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter10_reg, "select_ln12_reg_386_pp0_iter10_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter11_reg, "select_ln12_reg_386_pp0_iter11_reg");
    sc_trace(mVcdFile, select_ln12_reg_386_pp0_iter12_reg, "select_ln12_reg_386_pp0_iter12_reg");
    sc_trace(mVcdFile, select_ln12_1_fu_249_p3, "select_ln12_1_fu_249_p3");
    sc_trace(mVcdFile, select_ln12_1_reg_394, "select_ln12_1_reg_394");
    sc_trace(mVcdFile, tmp_4_fu_257_p3, "tmp_4_fu_257_p3");
    sc_trace(mVcdFile, tmp_4_reg_399, "tmp_4_reg_399");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter1_reg, "tmp_4_reg_399_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter2_reg, "tmp_4_reg_399_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter3_reg, "tmp_4_reg_399_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter4_reg, "tmp_4_reg_399_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter5_reg, "tmp_4_reg_399_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter6_reg, "tmp_4_reg_399_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter7_reg, "tmp_4_reg_399_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter8_reg, "tmp_4_reg_399_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter9_reg, "tmp_4_reg_399_pp0_iter9_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter10_reg, "tmp_4_reg_399_pp0_iter10_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter11_reg, "tmp_4_reg_399_pp0_iter11_reg");
    sc_trace(mVcdFile, tmp_4_reg_399_pp0_iter12_reg, "tmp_4_reg_399_pp0_iter12_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter2, "ap_block_state7_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter3, "ap_block_state9_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter4, "ap_block_state11_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage1_iter5, "ap_block_state13_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter6, "ap_block_state15_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage1_iter7, "ap_block_state17_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter8, "ap_block_state19_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage1_iter9, "ap_block_state21_pp0_stage1_iter9");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage1_iter10, "ap_block_state23_pp0_stage1_iter10");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage1_iter11, "ap_block_state25_pp0_stage1_iter11");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage1_iter12, "ap_block_state27_pp0_stage1_iter12");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, j_fu_355_p2, "j_fu_355_p2");
    sc_trace(mVcdFile, j_reg_466, "j_reg_466");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, grp_fu_205_p2, "grp_fu_205_p2");
    sc_trace(mVcdFile, tmp1_reg_491, "tmp1_reg_491");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_211_p2, "grp_fu_211_p2");
    sc_trace(mVcdFile, tmp_1_reg_496, "tmp_1_reg_496");
    sc_trace(mVcdFile, tmp_1_reg_496_pp0_iter3_reg, "tmp_1_reg_496_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_1_reg_496_pp0_iter4_reg, "tmp_1_reg_496_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_reg_501, "tmp_2_reg_501");
    sc_trace(mVcdFile, tmp_2_reg_501_pp0_iter3_reg, "tmp_2_reg_501_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_2_reg_501_pp0_iter4_reg, "tmp_2_reg_501_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_2_reg_501_pp0_iter5_reg, "tmp_2_reg_501_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_2_reg_501_pp0_iter6_reg, "tmp_2_reg_501_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_reg_506, "tmp_3_reg_506");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter3_reg, "tmp_3_reg_506_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter4_reg, "tmp_3_reg_506_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter5_reg, "tmp_3_reg_506_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter6_reg, "tmp_3_reg_506_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter7_reg, "tmp_3_reg_506_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter8_reg, "tmp_3_reg_506_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_3_reg_506_pp0_iter9_reg, "tmp_3_reg_506_pp0_iter9_reg");
    sc_trace(mVcdFile, grp_fu_196_p2, "grp_fu_196_p2");
    sc_trace(mVcdFile, sum_s_reg_511, "sum_s_reg_511");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, sum_1_reg_516, "sum_1_reg_516");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, grp_fu_201_p2, "grp_fu_201_p2");
    sc_trace(mVcdFile, sum_2_reg_521, "sum_2_reg_521");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, sum_3_reg_526, "sum_3_reg_526");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_167_p4, "ap_phi_mux_indvar_flatten_phi_fu_167_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_178_p4, "ap_phi_mux_i_0_phi_fu_178_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_189_p4, "ap_phi_mux_j_0_phi_fu_189_p4");
    sc_trace(mVcdFile, zext_ln12_fu_265_p1, "zext_ln12_fu_265_p1");
    sc_trace(mVcdFile, tmp_5_fu_276_p3, "tmp_5_fu_276_p3");
    sc_trace(mVcdFile, zext_ln12_1_fu_285_p1, "zext_ln12_1_fu_285_p1");
    sc_trace(mVcdFile, zext_ln12_6_fu_300_p1, "zext_ln12_6_fu_300_p1");
    sc_trace(mVcdFile, tmp_6_fu_310_p3, "tmp_6_fu_310_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_7_fu_324_p3, "tmp_7_fu_324_p3");
    sc_trace(mVcdFile, tmp_8_fu_336_p3, "tmp_8_fu_336_p3");
    sc_trace(mVcdFile, zext_ln12_7_fu_350_p1, "zext_ln12_7_fu_350_p1");
    sc_trace(mVcdFile, zext_ln14_fu_372_p1, "zext_ln14_fu_372_p1");
    sc_trace(mVcdFile, grp_fu_196_p0, "grp_fu_196_p0");
    sc_trace(mVcdFile, grp_fu_196_p1, "grp_fu_196_p1");
    sc_trace(mVcdFile, grp_fu_201_p0, "grp_fu_201_p0");
    sc_trace(mVcdFile, grp_fu_201_p1, "grp_fu_201_p1");
    sc_trace(mVcdFile, icmp_ln7_fu_235_p2, "icmp_ln7_fu_235_p2");
    sc_trace(mVcdFile, i_fu_229_p2, "i_fu_229_p2");
    sc_trace(mVcdFile, or_ln12_fu_270_p2, "or_ln12_fu_270_p2");
    sc_trace(mVcdFile, zext_ln12_5_fu_290_p1, "zext_ln12_5_fu_290_p1");
    sc_trace(mVcdFile, add_ln12_fu_294_p2, "add_ln12_fu_294_p2");
    sc_trace(mVcdFile, or_ln12_1_fu_305_p2, "or_ln12_1_fu_305_p2");
    sc_trace(mVcdFile, or_ln12_2_fu_319_p2, "or_ln12_2_fu_319_p2");
    sc_trace(mVcdFile, zext_ln12_4_fu_333_p1, "zext_ln12_4_fu_333_p1");
    sc_trace(mVcdFile, add_ln12_1_fu_344_p2, "add_ln12_1_fu_344_p2");
    sc_trace(mVcdFile, zext_ln12_3_fu_363_p1, "zext_ln12_3_fu_363_p1");
    sc_trace(mVcdFile, zext_ln12_2_fu_360_p1, "zext_ln12_2_fu_360_p1");
    sc_trace(mVcdFile, add_ln14_fu_366_p2, "add_ln14_fu_366_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("matrixmult.hdltvin.dat");
    mHdltvoutHandle.open("matrixmult.hdltvout.dat");
}

matrixmult::~matrixmult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrixmult_fadd_3bkb_U1;
    delete matrixmult_fadd_3bkb_U2;
    delete matrixmult_fmul_3cud_U3;
    delete matrixmult_fmul_3cud_U4;
}

void matrixmult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matrixmult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter12 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_174 = select_ln12_1_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_174 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_163 = add_ln5_reg_381.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_163 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_0_reg_185 = j_reg_466.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_185 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln5_reg_381 = add_ln5_fu_223_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln5_reg_377 = icmp_ln5_fu_217_p2.read();
        icmp_ln5_reg_377_pp0_iter10_reg = icmp_ln5_reg_377_pp0_iter9_reg.read();
        icmp_ln5_reg_377_pp0_iter11_reg = icmp_ln5_reg_377_pp0_iter10_reg.read();
        icmp_ln5_reg_377_pp0_iter12_reg = icmp_ln5_reg_377_pp0_iter11_reg.read();
        icmp_ln5_reg_377_pp0_iter1_reg = icmp_ln5_reg_377.read();
        icmp_ln5_reg_377_pp0_iter2_reg = icmp_ln5_reg_377_pp0_iter1_reg.read();
        icmp_ln5_reg_377_pp0_iter3_reg = icmp_ln5_reg_377_pp0_iter2_reg.read();
        icmp_ln5_reg_377_pp0_iter4_reg = icmp_ln5_reg_377_pp0_iter3_reg.read();
        icmp_ln5_reg_377_pp0_iter5_reg = icmp_ln5_reg_377_pp0_iter4_reg.read();
        icmp_ln5_reg_377_pp0_iter6_reg = icmp_ln5_reg_377_pp0_iter5_reg.read();
        icmp_ln5_reg_377_pp0_iter7_reg = icmp_ln5_reg_377_pp0_iter6_reg.read();
        icmp_ln5_reg_377_pp0_iter8_reg = icmp_ln5_reg_377_pp0_iter7_reg.read();
        icmp_ln5_reg_377_pp0_iter9_reg = icmp_ln5_reg_377_pp0_iter8_reg.read();
        select_ln12_reg_386_pp0_iter10_reg = select_ln12_reg_386_pp0_iter9_reg.read();
        select_ln12_reg_386_pp0_iter11_reg = select_ln12_reg_386_pp0_iter10_reg.read();
        select_ln12_reg_386_pp0_iter12_reg = select_ln12_reg_386_pp0_iter11_reg.read();
        select_ln12_reg_386_pp0_iter1_reg = select_ln12_reg_386.read();
        select_ln12_reg_386_pp0_iter2_reg = select_ln12_reg_386_pp0_iter1_reg.read();
        select_ln12_reg_386_pp0_iter3_reg = select_ln12_reg_386_pp0_iter2_reg.read();
        select_ln12_reg_386_pp0_iter4_reg = select_ln12_reg_386_pp0_iter3_reg.read();
        select_ln12_reg_386_pp0_iter5_reg = select_ln12_reg_386_pp0_iter4_reg.read();
        select_ln12_reg_386_pp0_iter6_reg = select_ln12_reg_386_pp0_iter5_reg.read();
        select_ln12_reg_386_pp0_iter7_reg = select_ln12_reg_386_pp0_iter6_reg.read();
        select_ln12_reg_386_pp0_iter8_reg = select_ln12_reg_386_pp0_iter7_reg.read();
        select_ln12_reg_386_pp0_iter9_reg = select_ln12_reg_386_pp0_iter8_reg.read();
        tmp_1_reg_496_pp0_iter3_reg = tmp_1_reg_496.read();
        tmp_1_reg_496_pp0_iter4_reg = tmp_1_reg_496_pp0_iter3_reg.read();
        tmp_4_reg_399_pp0_iter10_reg = tmp_4_reg_399_pp0_iter9_reg.read();
        tmp_4_reg_399_pp0_iter11_reg = tmp_4_reg_399_pp0_iter10_reg.read();
        tmp_4_reg_399_pp0_iter12_reg = tmp_4_reg_399_pp0_iter11_reg.read();
        tmp_4_reg_399_pp0_iter1_reg = tmp_4_reg_399.read();
        tmp_4_reg_399_pp0_iter2_reg = tmp_4_reg_399_pp0_iter1_reg.read();
        tmp_4_reg_399_pp0_iter3_reg = tmp_4_reg_399_pp0_iter2_reg.read();
        tmp_4_reg_399_pp0_iter4_reg = tmp_4_reg_399_pp0_iter3_reg.read();
        tmp_4_reg_399_pp0_iter5_reg = tmp_4_reg_399_pp0_iter4_reg.read();
        tmp_4_reg_399_pp0_iter6_reg = tmp_4_reg_399_pp0_iter5_reg.read();
        tmp_4_reg_399_pp0_iter7_reg = tmp_4_reg_399_pp0_iter6_reg.read();
        tmp_4_reg_399_pp0_iter8_reg = tmp_4_reg_399_pp0_iter7_reg.read();
        tmp_4_reg_399_pp0_iter9_reg = tmp_4_reg_399_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0))) {
        j_reg_466 = j_fu_355_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln5_fu_217_p2.read(), ap_const_lv1_0))) {
        select_ln12_1_reg_394 = select_ln12_1_fu_249_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln5_fu_217_p2.read(), ap_const_lv1_0))) {
        select_ln12_reg_386 = select_ln12_fu_241_p3.read();
        tmp_4_reg_399 = tmp_4_fu_257_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter6_reg.read(), ap_const_lv1_0))) {
        sum_1_reg_516 = grp_fu_196_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter9_reg.read(), ap_const_lv1_0))) {
        sum_2_reg_521 = grp_fu_201_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter12.read()) && esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter11_reg.read(), ap_const_lv1_0))) {
        sum_3_reg_526 = grp_fu_201_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter4_reg.read(), ap_const_lv1_0))) {
        sum_s_reg_511 = grp_fu_196_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        tmp1_reg_491 = grp_fu_205_p2.read();
        tmp_1_reg_496 = grp_fu_211_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        tmp_2_reg_501 = grp_fu_205_p2.read();
        tmp_3_reg_506 = grp_fu_211_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_2_reg_501_pp0_iter3_reg = tmp_2_reg_501.read();
        tmp_2_reg_501_pp0_iter4_reg = tmp_2_reg_501_pp0_iter3_reg.read();
        tmp_2_reg_501_pp0_iter5_reg = tmp_2_reg_501_pp0_iter4_reg.read();
        tmp_2_reg_501_pp0_iter6_reg = tmp_2_reg_501_pp0_iter5_reg.read();
        tmp_3_reg_506_pp0_iter3_reg = tmp_3_reg_506.read();
        tmp_3_reg_506_pp0_iter4_reg = tmp_3_reg_506_pp0_iter3_reg.read();
        tmp_3_reg_506_pp0_iter5_reg = tmp_3_reg_506_pp0_iter4_reg.read();
        tmp_3_reg_506_pp0_iter6_reg = tmp_3_reg_506_pp0_iter5_reg.read();
        tmp_3_reg_506_pp0_iter7_reg = tmp_3_reg_506_pp0_iter6_reg.read();
        tmp_3_reg_506_pp0_iter8_reg = tmp_3_reg_506_pp0_iter7_reg.read();
        tmp_3_reg_506_pp0_iter9_reg = tmp_3_reg_506_pp0_iter8_reg.read();
    }
}

void matrixmult::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            A_address0 =  (sc_lv<4>) (tmp_6_fu_310_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            A_address0 =  (sc_lv<4>) (zext_ln12_fu_265_p1.read());
        } else {
            A_address0 = "XXXX";
        }
    } else {
        A_address0 = "XXXX";
    }
}

void matrixmult::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            A_address1 =  (sc_lv<4>) (tmp_7_fu_324_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            A_address1 =  (sc_lv<4>) (tmp_5_fu_276_p3.read());
        } else {
            A_address1 = "XXXX";
        }
    } else {
        A_address1 = "XXXX";
    }
}

void matrixmult::thread_A_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void matrixmult::thread_A_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void matrixmult::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            B_address0 =  (sc_lv<4>) (tmp_8_fu_336_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            B_address0 =  (sc_lv<4>) (zext_ln12_1_fu_285_p1.read());
        } else {
            B_address0 = "XXXX";
        }
    } else {
        B_address0 = "XXXX";
    }
}

void matrixmult::thread_B_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            B_address1 =  (sc_lv<4>) (zext_ln12_7_fu_350_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            B_address1 =  (sc_lv<4>) (zext_ln12_6_fu_300_p1.read());
        } else {
            B_address1 = "XXXX";
        }
    } else {
        B_address1 = "XXXX";
    }
}

void matrixmult::thread_B_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void matrixmult::thread_B_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        B_ce1 = ap_const_logic_1;
    } else {
        B_ce1 = ap_const_logic_0;
    }
}

void matrixmult::thread_add_ln12_1_fu_344_p2() {
    add_ln12_1_fu_344_p2 = (!zext_ln12_4_fu_333_p1.read().is_01() || !ap_const_lv5_C.is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln12_4_fu_333_p1.read()) + sc_biguint<5>(ap_const_lv5_C));
}

void matrixmult::thread_add_ln12_fu_294_p2() {
    add_ln12_fu_294_p2 = (!zext_ln12_5_fu_290_p1.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln12_5_fu_290_p1.read()) + sc_biguint<4>(ap_const_lv4_4));
}

void matrixmult::thread_add_ln14_fu_366_p2() {
    add_ln14_fu_366_p2 = (!zext_ln12_3_fu_363_p1.read().is_01() || !zext_ln12_2_fu_360_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln12_3_fu_363_p1.read()) + sc_biguint<6>(zext_ln12_2_fu_360_p1.read()));
}

void matrixmult::thread_add_ln5_fu_223_p2() {
    add_ln5_fu_223_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_167_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_indvar_flatten_phi_fu_167_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matrixmult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrixmult::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void matrixmult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixmult::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[3];
}

void matrixmult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state10_pp0_stage0_iter4() {
    ap_block_state10_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state11_pp0_stage1_iter4() {
    ap_block_state11_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state12_pp0_stage0_iter5() {
    ap_block_state12_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state13_pp0_stage1_iter5() {
    ap_block_state13_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state14_pp0_stage0_iter6() {
    ap_block_state14_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state15_pp0_stage1_iter6() {
    ap_block_state15_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state16_pp0_stage0_iter7() {
    ap_block_state16_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state17_pp0_stage1_iter7() {
    ap_block_state17_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state18_pp0_stage0_iter8() {
    ap_block_state18_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state19_pp0_stage1_iter8() {
    ap_block_state19_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state20_pp0_stage0_iter9() {
    ap_block_state20_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state21_pp0_stage1_iter9() {
    ap_block_state21_pp0_stage1_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state22_pp0_stage0_iter10() {
    ap_block_state22_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state23_pp0_stage1_iter10() {
    ap_block_state23_pp0_stage1_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state24_pp0_stage0_iter11() {
    ap_block_state24_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state25_pp0_stage1_iter11() {
    ap_block_state25_pp0_stage1_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state26_pp0_stage0_iter12() {
    ap_block_state26_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state27_pp0_stage1_iter12() {
    ap_block_state27_pp0_stage1_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state7_pp0_stage1_iter2() {
    ap_block_state7_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state8_pp0_stage0_iter3() {
    ap_block_state8_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_block_state9_pp0_stage1_iter3() {
    ap_block_state9_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln5_fu_217_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrixmult::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrixmult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrixmult::thread_ap_phi_mux_i_0_phi_fu_178_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_178_p4 = select_ln12_1_reg_394.read();
    } else {
        ap_phi_mux_i_0_phi_fu_178_p4 = i_0_reg_174.read();
    }
}

void matrixmult::thread_ap_phi_mux_indvar_flatten_phi_fu_167_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_167_p4 = add_ln5_reg_381.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_167_p4 = indvar_flatten_reg_163.read();
    }
}

void matrixmult::thread_ap_phi_mux_j_0_phi_fu_189_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_189_p4 = j_reg_466.read();
    } else {
        ap_phi_mux_j_0_phi_fu_189_p4 = j_0_reg_185.read();
    }
}

void matrixmult::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmult::thread_grp_fu_196_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        grp_fu_196_p0 = sum_s_reg_511.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_196_p0 = tmp1_reg_491.read();
    } else {
        grp_fu_196_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void matrixmult::thread_grp_fu_196_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        grp_fu_196_p1 = tmp_1_reg_496_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_196_p1 = ap_const_lv32_0;
    } else {
        grp_fu_196_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void matrixmult::thread_grp_fu_201_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        grp_fu_201_p0 = sum_2_reg_521.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_201_p0 = sum_1_reg_516.read();
    } else {
        grp_fu_201_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void matrixmult::thread_grp_fu_201_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        grp_fu_201_p1 = tmp_3_reg_506_pp0_iter9_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_201_p1 = tmp_2_reg_501_pp0_iter6_reg.read();
    } else {
        grp_fu_201_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void matrixmult::thread_i_fu_229_p2() {
    i_fu_229_p2 = (!ap_phi_mux_i_0_phi_fu_178_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_i_0_phi_fu_178_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmult::thread_icmp_ln5_fu_217_p2() {
    icmp_ln5_fu_217_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_167_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_167_p4.read() == ap_const_lv5_10);
}

void matrixmult::thread_icmp_ln7_fu_235_p2() {
    icmp_ln7_fu_235_p2 = (!ap_phi_mux_j_0_phi_fu_189_p4.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_0_phi_fu_189_p4.read() == ap_const_lv3_4);
}

void matrixmult::thread_j_fu_355_p2() {
    j_fu_355_p2 = (!select_ln12_reg_386.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln12_reg_386.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmult::thread_or_ln12_1_fu_305_p2() {
    or_ln12_1_fu_305_p2 = (tmp_4_reg_399.read() | ap_const_lv5_2);
}

void matrixmult::thread_or_ln12_2_fu_319_p2() {
    or_ln12_2_fu_319_p2 = (tmp_4_reg_399.read() | ap_const_lv5_3);
}

void matrixmult::thread_or_ln12_fu_270_p2() {
    or_ln12_fu_270_p2 = (tmp_4_fu_257_p3.read() | ap_const_lv5_1);
}

void matrixmult::thread_res_address0() {
    res_address0 =  (sc_lv<4>) (zext_ln14_fu_372_p1.read());
}

void matrixmult::thread_res_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter12.read()))) {
        res_ce0 = ap_const_logic_1;
    } else {
        res_ce0 = ap_const_logic_0;
    }
}

void matrixmult::thread_res_d0() {
    res_d0 = sum_3_reg_526.read();
}

void matrixmult::thread_res_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_reg_377_pp0_iter12_reg.read(), ap_const_lv1_0))) {
        res_we0 = ap_const_logic_1;
    } else {
        res_we0 = ap_const_logic_0;
    }
}

void matrixmult::thread_select_ln12_1_fu_249_p3() {
    select_ln12_1_fu_249_p3 = (!icmp_ln7_fu_235_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln7_fu_235_p2.read()[0].to_bool())? i_fu_229_p2.read(): ap_phi_mux_i_0_phi_fu_178_p4.read());
}

void matrixmult::thread_select_ln12_fu_241_p3() {
    select_ln12_fu_241_p3 = (!icmp_ln7_fu_235_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln7_fu_235_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_j_0_phi_fu_189_p4.read());
}

void matrixmult::thread_tmp_4_fu_257_p3() {
    tmp_4_fu_257_p3 = esl_concat<3,2>(select_ln12_1_fu_249_p3.read(), ap_const_lv2_0);
}

void matrixmult::thread_tmp_5_fu_276_p3() {
    tmp_5_fu_276_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln12_fu_270_p2.read());
}

void matrixmult::thread_tmp_6_fu_310_p3() {
    tmp_6_fu_310_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln12_1_fu_305_p2.read());
}

void matrixmult::thread_tmp_7_fu_324_p3() {
    tmp_7_fu_324_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln12_2_fu_319_p2.read());
}

void matrixmult::thread_tmp_8_fu_336_p3() {
    tmp_8_fu_336_p3 = esl_concat<61,3>(ap_const_lv61_1, select_ln12_reg_386.read());
}

void matrixmult::thread_zext_ln12_1_fu_285_p1() {
    zext_ln12_1_fu_285_p1 = esl_zext<64,3>(select_ln12_fu_241_p3.read());
}

void matrixmult::thread_zext_ln12_2_fu_360_p1() {
    zext_ln12_2_fu_360_p1 = esl_zext<6,5>(tmp_4_reg_399_pp0_iter12_reg.read());
}

void matrixmult::thread_zext_ln12_3_fu_363_p1() {
    zext_ln12_3_fu_363_p1 = esl_zext<6,3>(select_ln12_reg_386_pp0_iter12_reg.read());
}

void matrixmult::thread_zext_ln12_4_fu_333_p1() {
    zext_ln12_4_fu_333_p1 = esl_zext<5,3>(select_ln12_reg_386.read());
}

void matrixmult::thread_zext_ln12_5_fu_290_p1() {
    zext_ln12_5_fu_290_p1 = esl_zext<4,3>(select_ln12_fu_241_p3.read());
}

void matrixmult::thread_zext_ln12_6_fu_300_p1() {
    zext_ln12_6_fu_300_p1 = esl_zext<64,4>(add_ln12_fu_294_p2.read());
}

void matrixmult::thread_zext_ln12_7_fu_350_p1() {
    zext_ln12_7_fu_350_p1 = esl_zext<64,5>(add_ln12_1_fu_344_p2.read());
}

void matrixmult::thread_zext_ln12_fu_265_p1() {
    zext_ln12_fu_265_p1 = esl_zext<64,5>(tmp_4_fu_257_p3.read());
}

void matrixmult::thread_zext_ln14_fu_372_p1() {
    zext_ln14_fu_372_p1 = esl_zext<64,6>(add_ln14_fu_366_p2.read());
}

void matrixmult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln5_fu_217_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln5_fu_217_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter12.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter12.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter11.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void matrixmult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address1\" :  \"" << B_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce1\" :  \"" << B_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q1\" :  \"" << B_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_address0\" :  \"" << res_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_ce0\" :  \"" << res_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_we0\" :  \"" << res_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_d0\" :  \"" << res_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

