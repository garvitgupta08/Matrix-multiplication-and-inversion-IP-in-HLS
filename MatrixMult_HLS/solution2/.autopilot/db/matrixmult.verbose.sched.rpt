

================================================================
== Vivado HLS Report for 'matrixmult'
================================================================
* Date:           Fri Aug 14 23:51:28 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        MatrixMult_HLS
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.024|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   57|   57|   57|   57|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   55|   55|        26|          2|          1|    16|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 28
* Pipeline : 1
  Pipeline-0 : II = 2, D = 26, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 28 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 2 
28 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %A) nounwind, !map !7"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %B) nounwind, !map !13"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %res) nounwind, !map !17"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @matrixmult_str) nounwind"   --->   Operation 32 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.76ns)   --->   "br label %.preheader" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 33 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.16>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i5 [ 0, %0 ], [ %add_ln5, %hls_label_0 ]" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 34 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %select_ln12_1, %hls_label_0 ]" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 35 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %0 ], [ %j, %hls_label_0 ]"   --->   Operation 36 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.36ns)   --->   "%icmp_ln5 = icmp eq i5 %indvar_flatten, -16" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 37 'icmp' 'icmp_ln5' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.78ns)   --->   "%add_ln5 = add i5 %indvar_flatten, 1" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 38 'add' 'add_ln5' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln5, label %1, label %hls_label_0" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.65ns)   --->   "%i = add i3 %i_0, 1" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 40 'add' 'i' <Predicate = (!icmp_ln5)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.13ns)   --->   "%icmp_ln7 = icmp eq i3 %j_0, -4" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 41 'icmp' 'icmp_ln7' <Predicate = (!icmp_ln5)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.98ns)   --->   "%select_ln12 = select i1 %icmp_ln7, i3 0, i3 %j_0" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 42 'select' 'select_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.98ns)   --->   "%select_ln12_1 = select i1 %icmp_ln7, i3 %i, i3 %i_0" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 43 'select' 'select_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_4 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln12_1, i2 0)" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 44 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i5 %tmp_4 to i64" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 45 'zext' 'zext_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [16 x float]* %A, i64 0, i64 %zext_ln12" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 46 'getelementptr' 'A_addr' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%or_ln12 = or i5 %tmp_4, 1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 47 'or' 'or_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_5 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln12)" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 48 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [16 x float]* %A, i64 0, i64 %tmp_5" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 49 'getelementptr' 'A_addr_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln12_1 = zext i3 %select_ln12 to i64" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 50 'zext' 'zext_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln12_5 = zext i3 %select_ln12 to i4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 51 'zext' 'zext_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [16 x float]* %B, i64 0, i64 %zext_ln12_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 52 'getelementptr' 'B_addr' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.73ns)   --->   "%add_ln12 = add i4 %zext_ln12_5, 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 53 'add' 'add_ln12' <Predicate = (!icmp_ln5)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln12_6 = zext i4 %add_ln12 to i64" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 54 'zext' 'zext_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [16 x float]* %B, i64 0, i64 %zext_ln12_6" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 55 'getelementptr' 'B_addr_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (2.32ns)   --->   "%A_load = load float* %A_addr, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 56 'load' 'A_load' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 57 [2/2] (2.32ns)   --->   "%B_load = load float* %B_addr, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 57 'load' 'B_load' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 58 [2/2] (2.32ns)   --->   "%A_load_1 = load float* %A_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 58 'load' 'A_load_1' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 59 [2/2] (2.32ns)   --->   "%B_load_1 = load float* %B_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 59 'load' 'B_load_1' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 3 <SV = 2> <Delay = 8.02>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%or_ln12_1 = or i5 %tmp_4, 2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 60 'or' 'or_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_6 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln12_1)" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 61 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [16 x float]* %A, i64 0, i64 %tmp_6" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 62 'getelementptr' 'A_addr_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%or_ln12_2 = or i5 %tmp_4, 3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 63 'or' 'or_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_7 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln12_2)" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 64 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [16 x float]* %A, i64 0, i64 %tmp_7" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 65 'getelementptr' 'A_addr_3' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln12_4 = zext i3 %select_ln12 to i5" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 66 'zext' 'zext_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_8 = call i64 @_ssdm_op_BitConcatenate.i64.i61.i3(i61 1, i3 %select_ln12)" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 67 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%B_addr_2 = getelementptr [16 x float]* %B, i64 0, i64 %tmp_8" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 68 'getelementptr' 'B_addr_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.78ns)   --->   "%add_ln12_1 = add i5 %zext_ln12_4, 12" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 69 'add' 'add_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln12_7 = zext i5 %add_ln12_1 to i64" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 70 'zext' 'zext_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%B_addr_3 = getelementptr [16 x float]* %B, i64 0, i64 %zext_ln12_7" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 71 'getelementptr' 'B_addr_3' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_3 : Operation 72 [1/2] (2.32ns)   --->   "%A_load = load float* %A_addr, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 72 'load' 'A_load' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 73 [1/2] (2.32ns)   --->   "%B_load = load float* %B_addr, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 73 'load' 'B_load' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 74 [4/4] (5.70ns)   --->   "%tmp1 = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 74 'fmul' 'tmp1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/2] (2.32ns)   --->   "%A_load_1 = load float* %A_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 75 'load' 'A_load_1' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 76 [1/2] (2.32ns)   --->   "%B_load_1 = load float* %B_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 76 'load' 'B_load_1' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 77 [4/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_load_1, %B_load_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 77 'fmul' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [2/2] (2.32ns)   --->   "%A_load_2 = load float* %A_addr_2, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 78 'load' 'A_load_2' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 79 [2/2] (2.32ns)   --->   "%B_load_2 = load float* %B_addr_2, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 79 'load' 'B_load_2' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 80 [2/2] (2.32ns)   --->   "%A_load_3 = load float* %A_addr_3, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 80 'load' 'A_load_3' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 81 [2/2] (2.32ns)   --->   "%B_load_3 = load float* %B_addr_3, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 81 'load' 'B_load_3' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 82 [1/1] (1.65ns)   --->   "%j = add i3 %select_ln12, 1" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 82 'add' 'j' <Predicate = (!icmp_ln5)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.02>
ST_4 : Operation 83 [3/4] (5.70ns)   --->   "%tmp1 = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 83 'fmul' 'tmp1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [3/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_load_1, %B_load_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 84 'fmul' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/2] (2.32ns)   --->   "%A_load_2 = load float* %A_addr_2, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 85 'load' 'A_load_2' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 86 [1/2] (2.32ns)   --->   "%B_load_2 = load float* %B_addr_2, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 86 'load' 'B_load_2' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 87 [4/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_load_2, %B_load_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 87 'fmul' 'tmp_2' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/2] (2.32ns)   --->   "%A_load_3 = load float* %A_addr_3, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 88 'load' 'A_load_3' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 89 [1/2] (2.32ns)   --->   "%B_load_3 = load float* %B_addr_3, align 4" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 89 'load' 'B_load_3' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 90 [4/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_load_3, %B_load_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 90 'fmul' 'tmp_3' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 91 [2/4] (5.70ns)   --->   "%tmp1 = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 91 'fmul' 'tmp1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [2/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_load_1, %B_load_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 92 'fmul' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [3/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_load_2, %B_load_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 93 'fmul' 'tmp_2' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 94 [3/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_load_3, %B_load_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 94 'fmul' 'tmp_3' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 95 [1/4] (5.70ns)   --->   "%tmp1 = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 95 'fmul' 'tmp1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 96 [1/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_load_1, %B_load_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 96 'fmul' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 97 [2/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_load_2, %B_load_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 97 'fmul' 'tmp_2' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 98 [2/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_load_3, %B_load_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 98 'fmul' 'tmp_3' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.25>
ST_7 : Operation 99 [5/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 99 'fadd' 'sum_s' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 100 [1/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_load_2, %B_load_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 100 'fmul' 'tmp_2' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_load_3, %B_load_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 101 'fmul' 'tmp_3' <Predicate = (!icmp_ln5)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.25>
ST_8 : Operation 102 [4/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 102 'fadd' 'sum_s' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 103 [3/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 103 'fadd' 'sum_s' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 104 [2/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 104 'fadd' 'sum_s' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 105 [1/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 105 'fadd' 'sum_s' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 106 [5/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 106 'fadd' 'sum_1' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.25>
ST_13 : Operation 107 [4/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 107 'fadd' 'sum_1' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.25>
ST_14 : Operation 108 [3/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 108 'fadd' 'sum_1' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 109 [2/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 109 'fadd' 'sum_1' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.25>
ST_16 : Operation 110 [1/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 110 'fadd' 'sum_1' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.25>
ST_17 : Operation 111 [5/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 111 'fadd' 'sum_2' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.25>
ST_18 : Operation 112 [4/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 112 'fadd' 'sum_2' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.25>
ST_19 : Operation 113 [3/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 113 'fadd' 'sum_2' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.25>
ST_20 : Operation 114 [2/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 114 'fadd' 'sum_2' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.25>
ST_21 : Operation 115 [1/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 115 'fadd' 'sum_2' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.25>
ST_22 : Operation 116 [5/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 116 'fadd' 'sum_3' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.25>
ST_23 : Operation 117 [4/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 117 'fadd' 'sum_3' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.25>
ST_24 : Operation 118 [3/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 118 'fadd' 'sum_3' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.25>
ST_25 : Operation 119 [2/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 119 'fadd' 'sum_3' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.25>
ST_26 : Operation 120 [1/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 120 'fadd' 'sum_3' <Predicate = (!icmp_ln5)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.10>
ST_27 : Operation 121 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 121 'speclooptripcount' 'empty' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln12_2 = zext i5 %tmp_4 to i6" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 122 'zext' 'zext_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 123 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str) nounwind" [MatrixMult_HLS/mmult.cpp:8]   --->   Operation 123 'specregionbegin' 'tmp' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [MatrixMult_HLS/mmult.cpp:9]   --->   Operation 124 'specpipeline' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln12_3 = zext i3 %select_ln12 to i6" [MatrixMult_HLS/mmult.cpp:12]   --->   Operation 125 'zext' 'zext_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 126 [1/1] (1.78ns)   --->   "%add_ln14 = add i6 %zext_ln12_3, %zext_ln12_2" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 126 'add' 'add_ln14' <Predicate = (!icmp_ln5)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i6 %add_ln14 to i64" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 127 'zext' 'zext_ln14' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 128 [1/1] (0.00ns)   --->   "%res_addr = getelementptr [16 x float]* %res, i64 0, i64 %zext_ln14" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 128 'getelementptr' 'res_addr' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 129 [1/1] (2.32ns)   --->   "store float %sum_3, float* %res_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 129 'store' <Predicate = (!icmp_ln5)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_27 : Operation 130 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp) nounwind" [MatrixMult_HLS/mmult.cpp:15]   --->   Operation 130 'specregionend' 'empty_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_27 : Operation 131 [1/1] (0.00ns)   --->   "br label %.preheader" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 131 'br' <Predicate = (!icmp_ln5)> <Delay = 0.00>

State 28 <SV = 2> <Delay = 0.00>
ST_28 : Operation 132 [1/1] (0.00ns)   --->   "ret void" [MatrixMult_HLS/mmult.cpp:17]   --->   Operation 132 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', MatrixMult_HLS/mmult.cpp:5) with incoming values : ('add_ln5', MatrixMult_HLS/mmult.cpp:5) [10]  (1.77 ns)

 <State 2>: 6.17ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', MatrixMult_HLS/mmult.cpp:7) [12]  (0 ns)
	'icmp' operation ('icmp_ln7', MatrixMult_HLS/mmult.cpp:7) [19]  (1.13 ns)
	'select' operation ('select_ln12', MatrixMult_HLS/mmult.cpp:12) [20]  (0.98 ns)
	'add' operation ('add_ln12', MatrixMult_HLS/mmult.cpp:12) [42]  (1.74 ns)
	'getelementptr' operation ('B_addr_1', MatrixMult_HLS/mmult.cpp:12) [44]  (0 ns)
	'load' operation ('B_load_1', MatrixMult_HLS/mmult.cpp:12) on array 'B' [58]  (2.32 ns)

 <State 3>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_load', MatrixMult_HLS/mmult.cpp:12) on array 'A' [53]  (2.32 ns)
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:12) [55]  (5.7 ns)

 <State 4>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_load_2', MatrixMult_HLS/mmult.cpp:12) on array 'A' [61]  (2.32 ns)
	'fmul' operation ('tmp_2', MatrixMult_HLS/mmult.cpp:12) [63]  (5.7 ns)

 <State 5>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:12) [55]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:12) [55]  (5.7 ns)

 <State 7>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:12) [56]  (7.26 ns)

 <State 8>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:12) [56]  (7.26 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:12) [56]  (7.26 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:12) [56]  (7.26 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:12) [56]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:12) [60]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:12) [60]  (7.26 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:12) [60]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:12) [60]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:12) [60]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:12) [64]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:12) [64]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:12) [64]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:12) [64]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:12) [64]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:12) [68]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:12) [68]  (7.26 ns)

 <State 24>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:12) [68]  (7.26 ns)

 <State 25>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:12) [68]  (7.26 ns)

 <State 26>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:12) [68]  (7.26 ns)

 <State 27>: 4.1ns
The critical path consists of the following:
	'add' operation ('add_ln14', MatrixMult_HLS/mmult.cpp:14) [50]  (1.78 ns)
	'getelementptr' operation ('res_addr', MatrixMult_HLS/mmult.cpp:14) [52]  (0 ns)
	'store' operation ('store_ln14', MatrixMult_HLS/mmult.cpp:14) of variable 'sum_3', MatrixMult_HLS/mmult.cpp:12 on array 'res' [69]  (2.32 ns)

 <State 28>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
