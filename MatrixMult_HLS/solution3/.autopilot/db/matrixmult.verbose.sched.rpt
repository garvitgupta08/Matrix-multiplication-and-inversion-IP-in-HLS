

================================================================
== Vivado HLS Report for 'matrixmult'
================================================================
* Date:           Sat Aug 15 00:14:19 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        MatrixMult_HLS
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.024|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   42|   42|   42|   42|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   40|   40|        26|          1|          1|    16|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 28
* Pipeline : 1
  Pipeline-0 : II = 1, D = 26, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 28 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 2 
28 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %B_1), !map !7"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %B_0), !map !14"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %A_1), !map !20"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %A_0), !map !25"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %res), !map !30"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @matrixmult_str) nounwind"   --->   Operation 34 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.76ns)   --->   "br label %.preheader" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 35 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 4.95>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i5 [ 0, %0 ], [ %add_ln7, %hls_label_0 ]" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 36 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %select_ln14_1, %hls_label_0 ]" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 37 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %0 ], [ %j, %hls_label_0 ]"   --->   Operation 38 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.36ns)   --->   "%icmp_ln7 = icmp eq i5 %indvar_flatten, -16" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 39 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.78ns)   --->   "%add_ln7 = add i5 %indvar_flatten, 1" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 40 'add' 'add_ln7' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %1, label %hls_label_0" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.65ns)   --->   "%i = add i3 %i_0, 1" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 42 'add' 'i' <Predicate = (!icmp_ln7)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.13ns)   --->   "%icmp_ln9 = icmp eq i3 %j_0, -4" [MatrixMult_HLS/mmult.cpp:9]   --->   Operation 43 'icmp' 'icmp_ln9' <Predicate = (!icmp_ln7)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.98ns)   --->   "%select_ln14 = select i1 %icmp_ln9, i3 0, i3 %j_0" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 44 'select' 'select_ln14' <Predicate = (!icmp_ln7)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.98ns)   --->   "%select_ln14_1 = select i1 %icmp_ln9, i3 %i, i3 %i_0" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 45 'select' 'select_ln14_1' <Predicate = (!icmp_ln7)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_4 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %select_ln14_1, i1 false)" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 46 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i4 %tmp_4 to i64" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 47 'zext' 'zext_ln14' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%A_0_addr = getelementptr [8 x float]* %A_0, i64 0, i64 %zext_ln14" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 48 'getelementptr' 'A_0_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i3 %select_ln14 to i64" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 49 'zext' 'zext_ln14_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%B_0_addr = getelementptr [8 x float]* %B_0, i64 0, i64 %zext_ln14_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 50 'getelementptr' 'B_0_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 51 [2/2] (2.32ns)   --->   "%A_0_load = load float* %A_0_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 51 'load' 'A_0_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 52 [2/2] (2.32ns)   --->   "%B_0_load = load float* %B_0_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 52 'load' 'B_0_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_2 : Operation 53 [1/1] (1.65ns)   --->   "%j = add i3 %select_ln14, 1" [MatrixMult_HLS/mmult.cpp:9]   --->   Operation 53 'add' 'j' <Predicate = (!icmp_ln7)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.02>
ST_3 : Operation 54 [1/2] (2.32ns)   --->   "%A_0_load = load float* %A_0_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 54 'load' 'A_0_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 55 [1/2] (2.32ns)   --->   "%B_0_load = load float* %B_0_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 55 'load' 'B_0_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 56 [4/4] (5.70ns)   --->   "%tmp1 = fmul float %A_0_load, %B_0_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 56 'fmul' 'tmp1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.70>
ST_4 : Operation 57 [3/4] (5.70ns)   --->   "%tmp1 = fmul float %A_0_load, %B_0_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 57 'fmul' 'tmp1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 58 [2/4] (5.70ns)   --->   "%tmp1 = fmul float %A_0_load, %B_0_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 58 'fmul' 'tmp1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 59 [1/4] (5.70ns)   --->   "%tmp1 = fmul float %A_0_load, %B_0_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 59 'fmul' 'tmp1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.25>
ST_7 : Operation 60 [1/1] (0.00ns)   --->   "%or_ln14 = or i4 %tmp_4, 1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 60 'or' 'or_ln14' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_5 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 0, i4 %or_ln14)" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 61 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (0.00ns)   --->   "%A_0_addr_1 = getelementptr [8 x float]* %A_0, i64 0, i64 %tmp_5" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 62 'getelementptr' 'A_0_addr_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln14_3 = zext i3 %select_ln14 to i4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 63 'zext' 'zext_ln14_3' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (1.73ns)   --->   "%add_ln14 = add i4 %zext_ln14_3, 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 64 'add' 'add_ln14' <Predicate = (!icmp_ln7)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln14_4 = zext i4 %add_ln14 to i64" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 65 'zext' 'zext_ln14_4' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%B_0_addr_1 = getelementptr [8 x float]* %B_0, i64 0, i64 %zext_ln14_4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 66 'getelementptr' 'B_0_addr_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 67 [5/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 67 'fadd' 'sum_s' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 68 [2/2] (2.32ns)   --->   "%A_0_load_1 = load float* %A_0_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 68 'load' 'A_0_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_7 : Operation 69 [2/2] (2.32ns)   --->   "%B_0_load_1 = load float* %B_0_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 69 'load' 'B_0_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 8 <SV = 7> <Delay = 8.02>
ST_8 : Operation 70 [4/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 70 'fadd' 'sum_s' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 71 [1/2] (2.32ns)   --->   "%A_0_load_1 = load float* %A_0_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 71 'load' 'A_0_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_8 : Operation 72 [1/2] (2.32ns)   --->   "%B_0_load_1 = load float* %B_0_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 72 'load' 'B_0_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_8 : Operation 73 [4/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_0_load_1, %B_0_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 73 'fmul' 'tmp_1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 74 [3/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 74 'fadd' 'sum_s' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 75 [3/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_0_load_1, %B_0_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 75 'fmul' 'tmp_1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 76 [2/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 76 'fadd' 'sum_s' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 77 [2/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_0_load_1, %B_0_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 77 'fmul' 'tmp_1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 78 [1/5] (7.25ns)   --->   "%sum_s = fadd float %tmp1, 0.000000e+00" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 78 'fadd' 'sum_s' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 79 [1/4] (5.70ns)   --->   "%tmp_1 = fmul float %A_0_load_1, %B_0_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 79 'fmul' 'tmp_1' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "%A_1_addr = getelementptr [8 x float]* %A_1, i64 0, i64 %zext_ln14" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 80 'getelementptr' 'A_1_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_12 : Operation 81 [1/1] (0.00ns)   --->   "%B_1_addr = getelementptr [8 x float]* %B_1, i64 0, i64 %zext_ln14_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 81 'getelementptr' 'B_1_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_12 : Operation 82 [5/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 82 'fadd' 'sum_1' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 83 [2/2] (2.32ns)   --->   "%A_1_load = load float* %A_1_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 83 'load' 'A_1_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 84 [2/2] (2.32ns)   --->   "%B_1_load = load float* %B_1_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 84 'load' 'B_1_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 13 <SV = 12> <Delay = 8.02>
ST_13 : Operation 85 [4/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 85 'fadd' 'sum_1' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 86 [1/2] (2.32ns)   --->   "%A_1_load = load float* %A_1_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 86 'load' 'A_1_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_13 : Operation 87 [1/2] (2.32ns)   --->   "%B_1_load = load float* %B_1_addr, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 87 'load' 'B_1_load' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_13 : Operation 88 [4/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_1_load, %B_1_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 88 'fmul' 'tmp_2' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.25>
ST_14 : Operation 89 [3/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 89 'fadd' 'sum_1' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 90 [3/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_1_load, %B_1_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 90 'fmul' 'tmp_2' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.25>
ST_15 : Operation 91 [2/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 91 'fadd' 'sum_1' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 92 [2/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_1_load, %B_1_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 92 'fmul' 'tmp_2' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.25>
ST_16 : Operation 93 [1/5] (7.25ns)   --->   "%sum_1 = fadd float %sum_s, %tmp_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 93 'fadd' 'sum_1' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 94 [1/4] (5.70ns)   --->   "%tmp_2 = fmul float %A_1_load, %B_1_load" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 94 'fmul' 'tmp_2' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.25>
ST_17 : Operation 95 [1/1] (0.00ns)   --->   "%A_1_addr_1 = getelementptr [8 x float]* %A_1, i64 0, i64 %tmp_5" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 95 'getelementptr' 'A_1_addr_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_17 : Operation 96 [1/1] (0.00ns)   --->   "%B_1_addr_1 = getelementptr [8 x float]* %B_1, i64 0, i64 %zext_ln14_4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 96 'getelementptr' 'B_1_addr_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_17 : Operation 97 [5/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 97 'fadd' 'sum_2' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 98 [2/2] (2.32ns)   --->   "%A_1_load_1 = load float* %A_1_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 98 'load' 'A_1_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_17 : Operation 99 [2/2] (2.32ns)   --->   "%B_1_load_1 = load float* %B_1_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 99 'load' 'B_1_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 18 <SV = 17> <Delay = 8.02>
ST_18 : Operation 100 [4/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 100 'fadd' 'sum_2' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 101 [1/2] (2.32ns)   --->   "%A_1_load_1 = load float* %A_1_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 101 'load' 'A_1_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_18 : Operation 102 [1/2] (2.32ns)   --->   "%B_1_load_1 = load float* %B_1_addr_1, align 4" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 102 'load' 'B_1_load_1' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_18 : Operation 103 [4/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_1_load_1, %B_1_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 103 'fmul' 'tmp_3' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.25>
ST_19 : Operation 104 [3/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 104 'fadd' 'sum_2' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 105 [3/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_1_load_1, %B_1_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 105 'fmul' 'tmp_3' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.25>
ST_20 : Operation 106 [2/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 106 'fadd' 'sum_2' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 107 [2/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_1_load_1, %B_1_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 107 'fmul' 'tmp_3' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.25>
ST_21 : Operation 108 [1/5] (7.25ns)   --->   "%sum_2 = fadd float %sum_1, %tmp_2" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 108 'fadd' 'sum_2' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 109 [1/4] (5.70ns)   --->   "%tmp_3 = fmul float %A_1_load_1, %B_1_load_1" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 109 'fmul' 'tmp_3' <Predicate = (!icmp_ln7)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 7.25>
ST_22 : Operation 110 [5/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 110 'fadd' 'sum_3' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 7.25>
ST_23 : Operation 111 [4/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 111 'fadd' 'sum_3' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 7.25>
ST_24 : Operation 112 [3/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 112 'fadd' 'sum_3' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 7.25>
ST_25 : Operation 113 [2/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 113 'fadd' 'sum_3' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.25>
ST_26 : Operation 114 [1/5] (7.25ns)   --->   "%sum_3 = fadd float %sum_2, %tmp_3" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 114 'fadd' 'sum_3' <Predicate = (!icmp_ln7)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.10>
ST_27 : Operation 115 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 115 'speclooptripcount' 'empty' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_6 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln14_1, i2 0)" [MatrixMult_HLS/mmult.cpp:16]   --->   Operation 116 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln10 = zext i5 %tmp_6 to i6" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 117 'zext' 'zext_ln10' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 118 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2) nounwind" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 118 'specregionbegin' 'tmp' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 119 'specpipeline' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln14_2 = zext i3 %select_ln14 to i6" [MatrixMult_HLS/mmult.cpp:14]   --->   Operation 120 'zext' 'zext_ln14_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 121 [1/1] (1.78ns)   --->   "%add_ln16 = add i6 %zext_ln14_2, %zext_ln10" [MatrixMult_HLS/mmult.cpp:16]   --->   Operation 121 'add' 'add_ln16' <Predicate = (!icmp_ln7)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i6 %add_ln16 to i64" [MatrixMult_HLS/mmult.cpp:16]   --->   Operation 122 'zext' 'zext_ln16' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 123 [1/1] (0.00ns)   --->   "%res_addr = getelementptr [16 x float]* %res, i64 0, i64 %zext_ln16" [MatrixMult_HLS/mmult.cpp:16]   --->   Operation 123 'getelementptr' 'res_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 124 [1/1] (2.32ns)   --->   "store float %sum_3, float* %res_addr, align 4" [MatrixMult_HLS/mmult.cpp:16]   --->   Operation 124 'store' <Predicate = (!icmp_ln7)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_27 : Operation 125 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp) nounwind" [MatrixMult_HLS/mmult.cpp:17]   --->   Operation 125 'specregionend' 'empty_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_27 : Operation 126 [1/1] (0.00ns)   --->   "br label %.preheader" [MatrixMult_HLS/mmult.cpp:9]   --->   Operation 126 'br' <Predicate = (!icmp_ln7)> <Delay = 0.00>

State 28 <SV = 2> <Delay = 0.00>
ST_28 : Operation 127 [1/1] (0.00ns)   --->   "ret void" [MatrixMult_HLS/mmult.cpp:19]   --->   Operation 127 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', MatrixMult_HLS/mmult.cpp:7) with incoming values : ('add_ln7', MatrixMult_HLS/mmult.cpp:7) [14]  (1.77 ns)

 <State 2>: 4.95ns
The critical path consists of the following:
	'phi' operation ('i_0', MatrixMult_HLS/mmult.cpp:14) with incoming values : ('select_ln14_1', MatrixMult_HLS/mmult.cpp:14) [15]  (0 ns)
	'add' operation ('i', MatrixMult_HLS/mmult.cpp:7) [21]  (1.65 ns)
	'select' operation ('select_ln14_1', MatrixMult_HLS/mmult.cpp:14) [25]  (0.98 ns)
	'getelementptr' operation ('A_0_addr', MatrixMult_HLS/mmult.cpp:14) [28]  (0 ns)
	'load' operation ('A_0_load', MatrixMult_HLS/mmult.cpp:14) on array 'A_0' [50]  (2.32 ns)

 <State 3>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_0_load', MatrixMult_HLS/mmult.cpp:14) on array 'A_0' [50]  (2.32 ns)
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:14) [52]  (5.7 ns)

 <State 4>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:14) [52]  (5.7 ns)

 <State 5>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:14) [52]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', MatrixMult_HLS/mmult.cpp:14) [52]  (5.7 ns)

 <State 7>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:14) [53]  (7.26 ns)

 <State 8>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_0_load_1', MatrixMult_HLS/mmult.cpp:14) on array 'A_0' [54]  (2.32 ns)
	'fmul' operation ('tmp_1', MatrixMult_HLS/mmult.cpp:14) [56]  (5.7 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:14) [53]  (7.26 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:14) [53]  (7.26 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_s', MatrixMult_HLS/mmult.cpp:14) [53]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:14) [57]  (7.26 ns)

 <State 13>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_1_load', MatrixMult_HLS/mmult.cpp:14) on array 'A_1' [58]  (2.32 ns)
	'fmul' operation ('tmp_2', MatrixMult_HLS/mmult.cpp:14) [60]  (5.7 ns)

 <State 14>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:14) [57]  (7.26 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:14) [57]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_1', MatrixMult_HLS/mmult.cpp:14) [57]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:14) [61]  (7.26 ns)

 <State 18>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_1_load_1', MatrixMult_HLS/mmult.cpp:14) on array 'A_1' [62]  (2.32 ns)
	'fmul' operation ('tmp_3', MatrixMult_HLS/mmult.cpp:14) [64]  (5.7 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:14) [61]  (7.26 ns)

 <State 20>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:14) [61]  (7.26 ns)

 <State 21>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_2', MatrixMult_HLS/mmult.cpp:14) [61]  (7.26 ns)

 <State 22>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:14) [65]  (7.26 ns)

 <State 23>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:14) [65]  (7.26 ns)

 <State 24>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:14) [65]  (7.26 ns)

 <State 25>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:14) [65]  (7.26 ns)

 <State 26>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum_3', MatrixMult_HLS/mmult.cpp:14) [65]  (7.26 ns)

 <State 27>: 4.1ns
The critical path consists of the following:
	'add' operation ('add_ln16', MatrixMult_HLS/mmult.cpp:16) [47]  (1.78 ns)
	'getelementptr' operation ('res_addr', MatrixMult_HLS/mmult.cpp:16) [49]  (0 ns)
	'store' operation ('store_ln16', MatrixMult_HLS/mmult.cpp:16) of variable 'sum_3', MatrixMult_HLS/mmult.cpp:14 on array 'res' [66]  (2.32 ns)

 <State 28>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
