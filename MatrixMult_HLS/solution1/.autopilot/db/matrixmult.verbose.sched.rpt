

================================================================
== Vivado HLS Report for 'matrixmult'
================================================================
* Date:           Fri Aug 14 23:34:29 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        MatrixMult_HLS
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.024|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  681|  681|  681|  681|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |  680|  680|       170|          -|          -|     4|    no    |
        | + Loop 1.1      |  168|  168|        42|          -|          -|     4|    no    |
        |  ++ Loop 1.1.1  |   40|   40|        10|          -|          -|     4|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %A) nounwind, !map !7"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %B) nounwind, !map !13"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x float]* %res) nounwind, !map !17"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @matrixmult_str) nounwind"   --->   Operation 17 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.76ns)   --->   "br label %.loopexit" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 18 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 19 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.13ns)   --->   "%icmp_ln5 = icmp eq i3 %i_0, -4" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 20 'icmp' 'icmp_ln5' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.65ns)   --->   "%i = add i3 %i_0, 1" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 22 'add' 'i' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln5, label %3, label %.preheader1.preheader" [MatrixMult_HLS/mmult.cpp:5]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i_0, i2 0)" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 24 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i5 %tmp_1 to i6" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 25 'zext' 'zext_ln7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "br label %.preheader1" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 26 'br' <Predicate = (!icmp_ln5)> <Delay = 1.76>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "ret void" [MatrixMult_HLS/mmult.cpp:16]   --->   Operation 27 'ret' <Predicate = (icmp_ln5)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.78>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ %j, %2 ], [ 0, %.preheader1.preheader ]"   --->   Operation 28 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (1.13ns)   --->   "%icmp_ln7 = icmp eq i3 %j_0, -4" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 29 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 30 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (1.65ns)   --->   "%j = add i3 %j_0, 1" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 31 'add' 'j' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %.loopexit.loopexit, label %.preheader.preheader" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i3 %j_0 to i6" [MatrixMult_HLS/mmult.cpp:13]   --->   Operation 33 'zext' 'zext_ln13' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (1.78ns)   --->   "%add_ln13 = add i6 %zext_ln7, %zext_ln13" [MatrixMult_HLS/mmult.cpp:13]   --->   Operation 34 'add' 'add_ln13' <Predicate = (!icmp_ln7)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i6 %add_ln13 to i64" [MatrixMult_HLS/mmult.cpp:13]   --->   Operation 35 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%res_addr = getelementptr [16 x float]* %res, i64 0, i64 %zext_ln13_1" [MatrixMult_HLS/mmult.cpp:13]   --->   Operation 36 'getelementptr' 'res_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.76ns)   --->   "br label %.preheader" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 37 'br' <Predicate = (!icmp_ln7)> <Delay = 1.76>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 38 'br' <Predicate = (icmp_ln7)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.10>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%sum_0 = phi float [ %sum, %1 ], [ 0.000000e+00, %.preheader.preheader ]"   --->   Operation 39 'phi' 'sum_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%k_0 = phi i3 [ %k, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 40 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (1.13ns)   --->   "%icmp_ln10 = icmp eq i3 %k_0, -4" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 41 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 42 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (1.65ns)   --->   "%k = add i3 %k_0, 1" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 43 'add' 'k' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %1" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 44 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i3 %k_0 to i6" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 45 'zext' 'zext_ln11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (1.78ns)   --->   "%add_ln11 = add i6 %zext_ln11, %zext_ln7" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 46 'add' 'add_ln11' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln11_1 = zext i6 %add_ln11 to i64" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 47 'zext' 'zext_ln11_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [16 x float]* %A, i64 0, i64 %zext_ln11_1" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 48 'getelementptr' 'A_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_2 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %k_0, i2 0)" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 49 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln11_2 = zext i5 %tmp_2 to i6" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 50 'zext' 'zext_ln11_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (1.78ns)   --->   "%add_ln11_1 = add i6 %zext_ln13, %zext_ln11_2" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 51 'add' 'add_ln11_1' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln11_3 = zext i6 %add_ln11_1 to i64" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 52 'zext' 'zext_ln11_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [16 x float]* %B, i64 0, i64 %zext_ln11_3" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 53 'getelementptr' 'B_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 54 [2/2] (2.32ns)   --->   "%A_load = load float* %A_addr, align 4" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 54 'load' 'A_load' <Predicate = (!icmp_ln10)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 55 [2/2] (2.32ns)   --->   "%B_load = load float* %B_addr, align 4" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 55 'load' 'B_load' <Predicate = (!icmp_ln10)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 56 [1/1] (2.32ns)   --->   "store float %sum_0, float* %res_addr, align 4" [MatrixMult_HLS/mmult.cpp:13]   --->   Operation 56 'store' <Predicate = (icmp_ln10)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "br label %.preheader1" [MatrixMult_HLS/mmult.cpp:7]   --->   Operation 57 'br' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.02>
ST_5 : Operation 58 [1/2] (2.32ns)   --->   "%A_load = load float* %A_addr, align 4" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 58 'load' 'A_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_5 : Operation 59 [1/2] (2.32ns)   --->   "%B_load = load float* %B_addr, align 4" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 59 'load' 'B_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_5 : Operation 60 [4/4] (5.70ns)   --->   "%tmp = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 60 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 61 [3/4] (5.70ns)   --->   "%tmp = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 61 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 62 [2/4] (5.70ns)   --->   "%tmp = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 62 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.70>
ST_8 : Operation 63 [1/4] (5.70ns)   --->   "%tmp = fmul float %A_load, %B_load" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 63 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 64 [5/5] (7.25ns)   --->   "%sum = fadd float %sum_0, %tmp" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 64 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 65 [4/5] (7.25ns)   --->   "%sum = fadd float %sum_0, %tmp" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 65 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 66 [3/5] (7.25ns)   --->   "%sum = fadd float %sum_0, %tmp" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 66 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 67 [2/5] (7.25ns)   --->   "%sum = fadd float %sum_0, %tmp" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 67 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.25>
ST_13 : Operation 68 [1/5] (7.25ns)   --->   "%sum = fadd float %sum_0, %tmp" [MatrixMult_HLS/mmult.cpp:11]   --->   Operation 68 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 69 [1/1] (0.00ns)   --->   "br label %.preheader" [MatrixMult_HLS/mmult.cpp:10]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', MatrixMult_HLS/mmult.cpp:5) [10]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', MatrixMult_HLS/mmult.cpp:7) [20]  (1.77 ns)

 <State 3>: 1.78ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', MatrixMult_HLS/mmult.cpp:7) [20]  (0 ns)
	'add' operation ('add_ln13', MatrixMult_HLS/mmult.cpp:13) [27]  (1.78 ns)

 <State 4>: 4.1ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', MatrixMult_HLS/mmult.cpp:10) [33]  (0 ns)
	'add' operation ('add_ln11', MatrixMult_HLS/mmult.cpp:11) [40]  (1.78 ns)
	'getelementptr' operation ('A_addr', MatrixMult_HLS/mmult.cpp:11) [42]  (0 ns)
	'load' operation ('A_load', MatrixMult_HLS/mmult.cpp:11) on array 'A' [48]  (2.32 ns)

 <State 5>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_load', MatrixMult_HLS/mmult.cpp:11) on array 'A' [48]  (2.32 ns)
	'fmul' operation ('tmp', MatrixMult_HLS/mmult.cpp:11) [50]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', MatrixMult_HLS/mmult.cpp:11) [50]  (5.7 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', MatrixMult_HLS/mmult.cpp:11) [50]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', MatrixMult_HLS/mmult.cpp:11) [50]  (5.7 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', MatrixMult_HLS/mmult.cpp:11) [51]  (7.26 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', MatrixMult_HLS/mmult.cpp:11) [51]  (7.26 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', MatrixMult_HLS/mmult.cpp:11) [51]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', MatrixMult_HLS/mmult.cpp:11) [51]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', MatrixMult_HLS/mmult.cpp:11) [51]  (7.26 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
