// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _inverse_top_HH_
#define _inverse_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lup.h"
#include "Upper_inv.h"
#include "Lower_inv.h"
#include "matrix_mult.h"
#include "final_perm.h"
#include "inverse_top_L.h"

namespace ap_rtl {

struct inverse_top : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<4> > A_address1;
    sc_out< sc_logic > A_ce1;
    sc_out< sc_logic > A_we1;
    sc_out< sc_lv<32> > A_d1;
    sc_in< sc_lv<32> > A_q1;
    sc_out< sc_lv<4> > A_inv_address0;
    sc_out< sc_logic > A_inv_ce0;
    sc_out< sc_logic > A_inv_we0;
    sc_out< sc_lv<32> > A_inv_d0;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    inverse_top(sc_module_name name);
    SC_HAS_PROCESS(inverse_top);

    ~inverse_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    inverse_top_L* L_U;
    inverse_top_L* U_U;
    inverse_top_L* L_inv_U;
    inverse_top_L* U_inv_U;
    inverse_top_L* UL_inv_U;
    lup* grp_lup_fu_110;
    Upper_inv* grp_Upper_inv_fu_120;
    Lower_inv* grp_Lower_inv_fu_126;
    matrix_mult* grp_matrix_mult_fu_132;
    final_perm* grp_final_perm_fu_139;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > singular_fu_149_p1;
    sc_signal< sc_lv<1> > singular_reg_225;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_lup_fu_110_ap_ready;
    sc_signal< sc_logic > grp_lup_fu_110_ap_done;
    sc_signal< sc_lv<32> > P_0_reg_229;
    sc_signal< sc_lv<32> > P_1_reg_234;
    sc_signal< sc_lv<32> > P_2_reg_239;
    sc_signal< sc_lv<2> > i_fu_171_p2;
    sc_signal< sc_lv<2> > i_reg_247;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > sub_ln247_fu_193_p2;
    sc_signal< sc_lv<5> > sub_ln247_reg_252;
    sc_signal< sc_lv<1> > icmp_ln244_fu_165_p2;
    sc_signal< sc_lv<2> > j_fu_205_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<4> > L_address0;
    sc_signal< sc_logic > L_ce0;
    sc_signal< sc_logic > L_we0;
    sc_signal< sc_lv<32> > L_q0;
    sc_signal< sc_lv<4> > U_address0;
    sc_signal< sc_logic > U_ce0;
    sc_signal< sc_logic > U_we0;
    sc_signal< sc_lv<32> > U_q0;
    sc_signal< sc_lv<4> > L_inv_address0;
    sc_signal< sc_logic > L_inv_ce0;
    sc_signal< sc_logic > L_inv_we0;
    sc_signal< sc_lv<32> > L_inv_q0;
    sc_signal< sc_lv<4> > U_inv_address0;
    sc_signal< sc_logic > U_inv_ce0;
    sc_signal< sc_logic > U_inv_we0;
    sc_signal< sc_lv<32> > U_inv_q0;
    sc_signal< sc_lv<4> > UL_inv_address0;
    sc_signal< sc_logic > UL_inv_ce0;
    sc_signal< sc_logic > UL_inv_we0;
    sc_signal< sc_lv<32> > UL_inv_q0;
    sc_signal< sc_logic > grp_lup_fu_110_ap_start;
    sc_signal< sc_logic > grp_lup_fu_110_ap_idle;
    sc_signal< sc_lv<4> > grp_lup_fu_110_A_address0;
    sc_signal< sc_logic > grp_lup_fu_110_A_ce0;
    sc_signal< sc_lv<4> > grp_lup_fu_110_A_address1;
    sc_signal< sc_logic > grp_lup_fu_110_A_ce1;
    sc_signal< sc_logic > grp_lup_fu_110_A_we1;
    sc_signal< sc_lv<32> > grp_lup_fu_110_A_d1;
    sc_signal< sc_lv<4> > grp_lup_fu_110_L_address0;
    sc_signal< sc_logic > grp_lup_fu_110_L_ce0;
    sc_signal< sc_logic > grp_lup_fu_110_L_we0;
    sc_signal< sc_lv<32> > grp_lup_fu_110_L_d0;
    sc_signal< sc_lv<4> > grp_lup_fu_110_U_address0;
    sc_signal< sc_logic > grp_lup_fu_110_U_ce0;
    sc_signal< sc_logic > grp_lup_fu_110_U_we0;
    sc_signal< sc_lv<32> > grp_lup_fu_110_U_d0;
    sc_signal< sc_lv<1> > grp_lup_fu_110_ap_return_0;
    sc_signal< sc_lv<32> > grp_lup_fu_110_ap_return_1;
    sc_signal< sc_lv<32> > grp_lup_fu_110_ap_return_2;
    sc_signal< sc_lv<32> > grp_lup_fu_110_ap_return_3;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_ap_start;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_ap_done;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_ap_idle;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_ap_ready;
    sc_signal< sc_lv<4> > grp_Upper_inv_fu_120_U_address0;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_U_ce0;
    sc_signal< sc_lv<4> > grp_Upper_inv_fu_120_U_inv_address0;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_U_inv_ce0;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_U_inv_we0;
    sc_signal< sc_lv<32> > grp_Upper_inv_fu_120_U_inv_d0;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_ap_start;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_ap_done;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_ap_idle;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_ap_ready;
    sc_signal< sc_lv<4> > grp_Lower_inv_fu_126_L_address0;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_L_ce0;
    sc_signal< sc_lv<4> > grp_Lower_inv_fu_126_L_inv_address0;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_L_inv_ce0;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_L_inv_we0;
    sc_signal< sc_lv<32> > grp_Lower_inv_fu_126_L_inv_d0;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_ap_start;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_ap_done;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_ap_idle;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_ap_ready;
    sc_signal< sc_lv<4> > grp_matrix_mult_fu_132_U_inv_address0;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_U_inv_ce0;
    sc_signal< sc_lv<4> > grp_matrix_mult_fu_132_L_inv_address0;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_L_inv_ce0;
    sc_signal< sc_lv<4> > grp_matrix_mult_fu_132_A_inv_address0;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_A_inv_ce0;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_A_inv_we0;
    sc_signal< sc_lv<32> > grp_matrix_mult_fu_132_A_inv_d0;
    sc_signal< sc_logic > grp_final_perm_fu_139_ap_start;
    sc_signal< sc_logic > grp_final_perm_fu_139_ap_done;
    sc_signal< sc_logic > grp_final_perm_fu_139_ap_idle;
    sc_signal< sc_logic > grp_final_perm_fu_139_ap_ready;
    sc_signal< sc_lv<4> > grp_final_perm_fu_139_UL_inv_address0;
    sc_signal< sc_logic > grp_final_perm_fu_139_UL_inv_ce0;
    sc_signal< sc_lv<4> > grp_final_perm_fu_139_A_inv_address0;
    sc_signal< sc_logic > grp_final_perm_fu_139_A_inv_ce0;
    sc_signal< sc_logic > grp_final_perm_fu_139_A_inv_we0;
    sc_signal< sc_lv<32> > grp_final_perm_fu_139_A_inv_d0;
    sc_signal< sc_lv<1> > ap_phi_mux_p_0_phi_fu_80_p4;
    sc_signal< sc_lv<1> > p_0_reg_76;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_state8_on_subcall_done;
    sc_signal< sc_lv<2> > i_0_reg_88;
    sc_signal< sc_lv<1> > icmp_ln246_fu_199_p2;
    sc_signal< sc_lv<2> > j_0_reg_99;
    sc_signal< sc_logic > grp_lup_fu_110_ap_start_reg;
    sc_signal< sc_logic > grp_Upper_inv_fu_120_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_Lower_inv_fu_126_ap_start_reg;
    sc_signal< sc_logic > grp_matrix_mult_fu_132_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_final_perm_fu_139_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > sext_ln247_fu_220_p1;
    sc_signal< sc_lv<4> > tmp_fu_181_p3;
    sc_signal< sc_lv<5> > zext_ln247_1_fu_189_p1;
    sc_signal< sc_lv<5> > zext_ln247_fu_177_p1;
    sc_signal< sc_lv<5> > zext_ln247_2_fu_211_p1;
    sc_signal< sc_lv<5> > add_ln247_fu_215_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_block_state4_on_subcall_done;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_7;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_address1();
    void thread_A_ce0();
    void thread_A_ce1();
    void thread_A_d1();
    void thread_A_inv_address0();
    void thread_A_inv_ce0();
    void thread_A_inv_d0();
    void thread_A_inv_we0();
    void thread_A_we1();
    void thread_L_address0();
    void thread_L_ce0();
    void thread_L_inv_address0();
    void thread_L_inv_ce0();
    void thread_L_inv_we0();
    void thread_L_we0();
    void thread_UL_inv_address0();
    void thread_UL_inv_ce0();
    void thread_UL_inv_we0();
    void thread_U_address0();
    void thread_U_ce0();
    void thread_U_inv_address0();
    void thread_U_inv_ce0();
    void thread_U_inv_we0();
    void thread_U_we0();
    void thread_add_ln247_fu_215_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state4_on_subcall_done();
    void thread_ap_block_state8_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_0_phi_fu_80_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_Lower_inv_fu_126_ap_start();
    void thread_grp_Upper_inv_fu_120_ap_start();
    void thread_grp_final_perm_fu_139_ap_start();
    void thread_grp_lup_fu_110_ap_start();
    void thread_grp_matrix_mult_fu_132_ap_start();
    void thread_i_fu_171_p2();
    void thread_icmp_ln244_fu_165_p2();
    void thread_icmp_ln246_fu_199_p2();
    void thread_j_fu_205_p2();
    void thread_sext_ln247_fu_220_p1();
    void thread_singular_fu_149_p1();
    void thread_sub_ln247_fu_193_p2();
    void thread_tmp_fu_181_p3();
    void thread_zext_ln247_1_fu_189_p1();
    void thread_zext_ln247_2_fu_211_p1();
    void thread_zext_ln247_fu_177_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
