// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "final_perm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic final_perm::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic final_perm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> final_perm::ap_ST_fsm_state1 = "1";
const sc_lv<6> final_perm::ap_ST_fsm_state2 = "10";
const sc_lv<6> final_perm::ap_ST_fsm_state3 = "100";
const sc_lv<6> final_perm::ap_ST_fsm_state4 = "1000";
const sc_lv<6> final_perm::ap_ST_fsm_state5 = "10000";
const sc_lv<6> final_perm::ap_ST_fsm_state6 = "100000";
const sc_lv<32> final_perm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> final_perm::ap_const_lv32_1 = "1";
const sc_lv<1> final_perm::ap_const_lv1_0 = "0";
const sc_lv<32> final_perm::ap_const_lv32_2 = "10";
const sc_lv<32> final_perm::ap_const_lv32_3 = "11";
const sc_lv<32> final_perm::ap_const_lv32_4 = "100";
const sc_lv<2> final_perm::ap_const_lv2_0 = "00";
const sc_lv<1> final_perm::ap_const_lv1_1 = "1";
const sc_lv<32> final_perm::ap_const_lv32_5 = "101";
const sc_lv<2> final_perm::ap_const_lv2_1 = "1";
const sc_lv<2> final_perm::ap_const_lv2_3 = "11";
const sc_lv<32> final_perm::ap_const_lv32_17 = "10111";
const sc_lv<32> final_perm::ap_const_lv32_1E = "11110";
const sc_lv<9> final_perm::ap_const_lv9_181 = "110000001";
const sc_lv<32> final_perm::ap_const_lv32_8 = "1000";
const sc_lv<8> final_perm::ap_const_lv8_7F = "1111111";
const sc_lv<32> final_perm::ap_const_lv32_1F = "11111";
const sc_lv<32> final_perm::ap_const_lv32_18 = "11000";
const sc_lv<32> final_perm::ap_const_lv32_37 = "110111";
const sc_lv<5> final_perm::ap_const_lv5_0 = "00000";
const bool final_perm::ap_const_boolean_1 = true;

final_perm::final_perm(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_inv_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln228_1_fu_362_p1 );

    SC_METHOD(thread_A_inv_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_A_inv_d0);
    sensitive << ( UL_inv_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_A_inv_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_UL_inv_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln228_fu_358_p1 );

    SC_METHOD(thread_UL_inv_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_add_ln228_1_fu_353_p2);
    sensitive << ( zext_ln226_reg_389 );
    sensitive << ( sub_ln228_fu_341_p2 );

    SC_METHOD(thread_add_ln228_fu_347_p2);
    sensitive << ( sub_ln228_fu_341_p2 );
    sensitive << ( select_ln59_fu_317_p3 );

    SC_METHOD(thread_add_ln339_fu_200_p2);
    sensitive << ( zext_ln339_fu_196_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln224_fu_150_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_phi_ln228_phi_fu_142_p6);
    sensitive << ( P_0_read );
    sensitive << ( P_1_read );
    sensitive << ( P_2_read );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln226_fu_166_p2 );
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln224_fu_150_p2 );

    SC_METHOD(thread_i_fu_156_p2);
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_icmp_ln224_fu_150_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_icmp_ln226_fu_166_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_127 );

    SC_METHOD(thread_isNeg_fu_206_p3);
    sensitive << ( add_ln339_fu_200_p2 );

    SC_METHOD(thread_j_fu_172_p2);
    sensitive << ( j_0_reg_127 );

    SC_METHOD(thread_mantissa_V_fu_239_p4);
    sensitive << ( tmp_V_1_reg_407 );

    SC_METHOD(thread_p_Result_s_fu_232_p3);
    sensitive << ( p_Val2_s_reg_402 );

    SC_METHOD(thread_p_Val2_4_fu_296_p3);
    sensitive << ( isNeg_reg_412 );
    sensitive << ( zext_ln662_fu_282_p1 );
    sensitive << ( tmp_31_fu_286_p4 );

    SC_METHOD(thread_p_Val2_s_fu_178_p1);
    sensitive << ( ap_phi_mux_phi_ln228_phi_fu_142_p6 );

    SC_METHOD(thread_r_V_1_fu_268_p2);
    sensitive << ( zext_ln682_fu_248_p1 );
    sensitive << ( zext_ln1287_fu_258_p1 );

    SC_METHOD(thread_r_V_fu_262_p2);
    sensitive << ( mantissa_V_fu_239_p4 );
    sensitive << ( sext_ln1311_2_fu_255_p1 );

    SC_METHOD(thread_select_ln59_fu_317_p3);
    sensitive << ( p_Result_s_fu_232_p3 );
    sensitive << ( sub_ln228_1_fu_307_p2 );
    sensitive << ( trunc_ln228_fu_313_p1 );

    SC_METHOD(thread_sext_ln1311_1_fu_252_p1);
    sensitive << ( ush_reg_417 );

    SC_METHOD(thread_sext_ln1311_2_fu_255_p1);
    sensitive << ( ush_reg_417 );

    SC_METHOD(thread_sext_ln1311_fu_220_p1);
    sensitive << ( sub_ln1311_fu_214_p2 );

    SC_METHOD(thread_sext_ln228_1_fu_362_p1);
    sensitive << ( add_ln228_1_reg_428 );

    SC_METHOD(thread_sext_ln228_fu_358_p1);
    sensitive << ( add_ln228_reg_423 );

    SC_METHOD(thread_sub_ln1311_fu_214_p2);
    sensitive << ( tmp_V_fu_182_p4 );

    SC_METHOD(thread_sub_ln228_1_fu_307_p2);
    sensitive << ( trunc_ln657_fu_303_p1 );

    SC_METHOD(thread_sub_ln228_fu_341_p2);
    sensitive << ( zext_ln228_1_fu_337_p1 );
    sensitive << ( zext_ln228_fu_325_p1 );

    SC_METHOD(thread_tmp_31_fu_286_p4);
    sensitive << ( r_V_1_fu_268_p2 );

    SC_METHOD(thread_tmp_32_fu_329_p3);
    sensitive << ( j_0_reg_127 );

    SC_METHOD(thread_tmp_V_1_fu_192_p1);
    sensitive << ( p_Val2_s_fu_178_p1 );

    SC_METHOD(thread_tmp_V_fu_182_p4);
    sensitive << ( p_Val2_s_fu_178_p1 );

    SC_METHOD(thread_tmp_fu_274_p3);
    sensitive << ( r_V_fu_262_p2 );

    SC_METHOD(thread_trunc_ln228_fu_313_p1);
    sensitive << ( p_Val2_4_fu_296_p3 );

    SC_METHOD(thread_trunc_ln657_fu_303_p1);
    sensitive << ( p_Val2_4_fu_296_p3 );

    SC_METHOD(thread_ush_fu_224_p3);
    sensitive << ( isNeg_fu_206_p3 );
    sensitive << ( add_ln339_fu_200_p2 );
    sensitive << ( sext_ln1311_fu_220_p1 );

    SC_METHOD(thread_zext_ln1287_fu_258_p1);
    sensitive << ( sext_ln1311_1_fu_252_p1 );

    SC_METHOD(thread_zext_ln226_fu_162_p1);
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_zext_ln228_1_fu_337_p1);
    sensitive << ( tmp_32_fu_329_p3 );

    SC_METHOD(thread_zext_ln228_fu_325_p1);
    sensitive << ( j_0_reg_127 );

    SC_METHOD(thread_zext_ln339_fu_196_p1);
    sensitive << ( tmp_V_fu_182_p4 );

    SC_METHOD(thread_zext_ln662_fu_282_p1);
    sensitive << ( tmp_fu_274_p3 );

    SC_METHOD(thread_zext_ln682_fu_248_p1);
    sensitive << ( mantissa_V_fu_239_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln224_fu_150_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln226_fu_166_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "final_perm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, UL_inv_address0, "(port)UL_inv_address0");
    sc_trace(mVcdFile, UL_inv_ce0, "(port)UL_inv_ce0");
    sc_trace(mVcdFile, UL_inv_q0, "(port)UL_inv_q0");
    sc_trace(mVcdFile, P_0_read, "(port)P_0_read");
    sc_trace(mVcdFile, P_1_read, "(port)P_1_read");
    sc_trace(mVcdFile, P_2_read, "(port)P_2_read");
    sc_trace(mVcdFile, A_inv_address0, "(port)A_inv_address0");
    sc_trace(mVcdFile, A_inv_ce0, "(port)A_inv_ce0");
    sc_trace(mVcdFile, A_inv_we0, "(port)A_inv_we0");
    sc_trace(mVcdFile, A_inv_d0, "(port)A_inv_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_156_p2, "i_fu_156_p2");
    sc_trace(mVcdFile, i_reg_384, "i_reg_384");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln226_fu_162_p1, "zext_ln226_fu_162_p1");
    sc_trace(mVcdFile, zext_ln226_reg_389, "zext_ln226_reg_389");
    sc_trace(mVcdFile, icmp_ln224_fu_150_p2, "icmp_ln224_fu_150_p2");
    sc_trace(mVcdFile, j_fu_172_p2, "j_fu_172_p2");
    sc_trace(mVcdFile, j_reg_397, "j_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, p_Val2_s_fu_178_p1, "p_Val2_s_fu_178_p1");
    sc_trace(mVcdFile, p_Val2_s_reg_402, "p_Val2_s_reg_402");
    sc_trace(mVcdFile, icmp_ln226_fu_166_p2, "icmp_ln226_fu_166_p2");
    sc_trace(mVcdFile, tmp_V_1_fu_192_p1, "tmp_V_1_fu_192_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_407, "tmp_V_1_reg_407");
    sc_trace(mVcdFile, isNeg_fu_206_p3, "isNeg_fu_206_p3");
    sc_trace(mVcdFile, isNeg_reg_412, "isNeg_reg_412");
    sc_trace(mVcdFile, ush_fu_224_p3, "ush_fu_224_p3");
    sc_trace(mVcdFile, ush_reg_417, "ush_reg_417");
    sc_trace(mVcdFile, add_ln228_fu_347_p2, "add_ln228_fu_347_p2");
    sc_trace(mVcdFile, add_ln228_reg_423, "add_ln228_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln228_1_fu_353_p2, "add_ln228_1_fu_353_p2");
    sc_trace(mVcdFile, add_ln228_1_reg_428, "add_ln228_1_reg_428");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_0_reg_115, "i_0_reg_115");
    sc_trace(mVcdFile, j_0_reg_127, "j_0_reg_127");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln228_phi_fu_142_p6, "ap_phi_mux_phi_ln228_phi_fu_142_p6");
    sc_trace(mVcdFile, sext_ln228_fu_358_p1, "sext_ln228_fu_358_p1");
    sc_trace(mVcdFile, sext_ln228_1_fu_362_p1, "sext_ln228_1_fu_362_p1");
    sc_trace(mVcdFile, tmp_V_fu_182_p4, "tmp_V_fu_182_p4");
    sc_trace(mVcdFile, zext_ln339_fu_196_p1, "zext_ln339_fu_196_p1");
    sc_trace(mVcdFile, add_ln339_fu_200_p2, "add_ln339_fu_200_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_214_p2, "sub_ln1311_fu_214_p2");
    sc_trace(mVcdFile, sext_ln1311_fu_220_p1, "sext_ln1311_fu_220_p1");
    sc_trace(mVcdFile, mantissa_V_fu_239_p4, "mantissa_V_fu_239_p4");
    sc_trace(mVcdFile, sext_ln1311_1_fu_252_p1, "sext_ln1311_1_fu_252_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_255_p1, "sext_ln1311_2_fu_255_p1");
    sc_trace(mVcdFile, zext_ln682_fu_248_p1, "zext_ln682_fu_248_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_258_p1, "zext_ln1287_fu_258_p1");
    sc_trace(mVcdFile, r_V_fu_262_p2, "r_V_fu_262_p2");
    sc_trace(mVcdFile, tmp_fu_274_p3, "tmp_fu_274_p3");
    sc_trace(mVcdFile, r_V_1_fu_268_p2, "r_V_1_fu_268_p2");
    sc_trace(mVcdFile, zext_ln662_fu_282_p1, "zext_ln662_fu_282_p1");
    sc_trace(mVcdFile, tmp_31_fu_286_p4, "tmp_31_fu_286_p4");
    sc_trace(mVcdFile, p_Val2_4_fu_296_p3, "p_Val2_4_fu_296_p3");
    sc_trace(mVcdFile, trunc_ln657_fu_303_p1, "trunc_ln657_fu_303_p1");
    sc_trace(mVcdFile, p_Result_s_fu_232_p3, "p_Result_s_fu_232_p3");
    sc_trace(mVcdFile, sub_ln228_1_fu_307_p2, "sub_ln228_1_fu_307_p2");
    sc_trace(mVcdFile, trunc_ln228_fu_313_p1, "trunc_ln228_fu_313_p1");
    sc_trace(mVcdFile, tmp_32_fu_329_p3, "tmp_32_fu_329_p3");
    sc_trace(mVcdFile, zext_ln228_1_fu_337_p1, "zext_ln228_1_fu_337_p1");
    sc_trace(mVcdFile, zext_ln228_fu_325_p1, "zext_ln228_fu_325_p1");
    sc_trace(mVcdFile, sub_ln228_fu_341_p2, "sub_ln228_fu_341_p2");
    sc_trace(mVcdFile, select_ln59_fu_317_p3, "select_ln59_fu_317_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

final_perm::~final_perm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void final_perm::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln226_fu_166_p2.read(), ap_const_lv1_1))) {
        i_0_reg_115 = i_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_115 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_0_reg_127 = j_reg_397.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln224_fu_150_p2.read(), ap_const_lv1_0))) {
        j_0_reg_127 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln228_1_reg_428 = add_ln228_1_fu_353_p2.read();
        add_ln228_reg_423 = add_ln228_fu_347_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_384 = i_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln226_fu_166_p2.read()))) {
        isNeg_reg_412 = add_ln339_fu_200_p2.read().range(8, 8);
        p_Val2_s_reg_402 = p_Val2_s_fu_178_p1.read();
        tmp_V_1_reg_407 = tmp_V_1_fu_192_p1.read();
        ush_reg_417 = ush_fu_224_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_397 = j_fu_172_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln224_fu_150_p2.read(), ap_const_lv1_0))) {
        zext_ln226_reg_389 = zext_ln226_fu_162_p1.read();
    }
}

void final_perm::thread_A_inv_address0() {
    A_inv_address0 =  (sc_lv<4>) (sext_ln228_1_fu_362_p1.read());
}

void final_perm::thread_A_inv_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        A_inv_ce0 = ap_const_logic_1;
    } else {
        A_inv_ce0 = ap_const_logic_0;
    }
}

void final_perm::thread_A_inv_d0() {
    A_inv_d0 = UL_inv_q0.read();
}

void final_perm::thread_A_inv_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        A_inv_we0 = ap_const_logic_1;
    } else {
        A_inv_we0 = ap_const_logic_0;
    }
}

void final_perm::thread_UL_inv_address0() {
    UL_inv_address0 =  (sc_lv<4>) (sext_ln228_fu_358_p1.read());
}

void final_perm::thread_UL_inv_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        UL_inv_ce0 = ap_const_logic_1;
    } else {
        UL_inv_ce0 = ap_const_logic_0;
    }
}

void final_perm::thread_add_ln228_1_fu_353_p2() {
    add_ln228_1_fu_353_p2 = (!sub_ln228_fu_341_p2.read().is_01() || !zext_ln226_reg_389.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln228_fu_341_p2.read()) + sc_biguint<5>(zext_ln226_reg_389.read()));
}

void final_perm::thread_add_ln228_fu_347_p2() {
    add_ln228_fu_347_p2 = (!sub_ln228_fu_341_p2.read().is_01() || !select_ln59_fu_317_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln228_fu_341_p2.read()) + sc_biguint<5>(select_ln59_fu_317_p3.read()));
}

void final_perm::thread_add_ln339_fu_200_p2() {
    add_ln339_fu_200_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_196_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_196_p1.read()));
}

void final_perm::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void final_perm::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void final_perm::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void final_perm::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void final_perm::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void final_perm::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void final_perm::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln224_fu_150_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void final_perm::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void final_perm::thread_ap_phi_mux_phi_ln228_phi_fu_142_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln226_fu_166_p2.read()))) {
        if (esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_115.read())) {
            ap_phi_mux_phi_ln228_phi_fu_142_p6 = P_0_read.read();
        } else if ((!esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_115.read()) && 
                    !esl_seteq<1,2,2>(i_0_reg_115.read(), ap_const_lv2_1))) {
            ap_phi_mux_phi_ln228_phi_fu_142_p6 = P_2_read.read();
        } else if (esl_seteq<1,2,2>(i_0_reg_115.read(), ap_const_lv2_1)) {
            ap_phi_mux_phi_ln228_phi_fu_142_p6 = P_1_read.read();
        } else {
            ap_phi_mux_phi_ln228_phi_fu_142_p6 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_phi_ln228_phi_fu_142_p6 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void final_perm::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln224_fu_150_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void final_perm::thread_i_fu_156_p2() {
    i_fu_156_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_115.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void final_perm::thread_icmp_ln224_fu_150_p2() {
    icmp_ln224_fu_150_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_115.read() == ap_const_lv2_3);
}

void final_perm::thread_icmp_ln226_fu_166_p2() {
    icmp_ln226_fu_166_p2 = (!j_0_reg_127.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_127.read() == ap_const_lv2_3);
}

void final_perm::thread_isNeg_fu_206_p3() {
    isNeg_fu_206_p3 = add_ln339_fu_200_p2.read().range(8, 8);
}

void final_perm::thread_j_fu_172_p2() {
    j_fu_172_p2 = (!j_0_reg_127.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_127.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void final_perm::thread_mantissa_V_fu_239_p4() {
    mantissa_V_fu_239_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_reg_407.read()), ap_const_lv1_0);
}

void final_perm::thread_p_Result_s_fu_232_p3() {
    p_Result_s_fu_232_p3 = p_Val2_s_reg_402.read().range(31, 31);
}

void final_perm::thread_p_Val2_4_fu_296_p3() {
    p_Val2_4_fu_296_p3 = (!isNeg_reg_412.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_412.read()[0].to_bool())? zext_ln662_fu_282_p1.read(): tmp_31_fu_286_p4.read());
}

void final_perm::thread_p_Val2_s_fu_178_p1() {
    p_Val2_s_fu_178_p1 = ap_phi_mux_phi_ln228_phi_fu_142_p6.read();
}

void final_perm::thread_r_V_1_fu_268_p2() {
    r_V_1_fu_268_p2 = (!zext_ln1287_fu_258_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_248_p1.read() << (unsigned short)zext_ln1287_fu_258_p1.read().to_uint();
}

void final_perm::thread_r_V_fu_262_p2() {
    r_V_fu_262_p2 = (!sext_ln1311_2_fu_255_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_239_p4.read() >> (unsigned short)sext_ln1311_2_fu_255_p1.read().to_uint();
}

void final_perm::thread_select_ln59_fu_317_p3() {
    select_ln59_fu_317_p3 = (!p_Result_s_fu_232_p3.read()[0].is_01())? sc_lv<5>(): ((p_Result_s_fu_232_p3.read()[0].to_bool())? sub_ln228_1_fu_307_p2.read(): trunc_ln228_fu_313_p1.read());
}

void final_perm::thread_sext_ln1311_1_fu_252_p1() {
    sext_ln1311_1_fu_252_p1 = esl_sext<32,9>(ush_reg_417.read());
}

void final_perm::thread_sext_ln1311_2_fu_255_p1() {
    sext_ln1311_2_fu_255_p1 = esl_sext<25,9>(ush_reg_417.read());
}

void final_perm::thread_sext_ln1311_fu_220_p1() {
    sext_ln1311_fu_220_p1 = esl_sext<9,8>(sub_ln1311_fu_214_p2.read());
}

void final_perm::thread_sext_ln228_1_fu_362_p1() {
    sext_ln228_1_fu_362_p1 = esl_sext<64,5>(add_ln228_1_reg_428.read());
}

void final_perm::thread_sext_ln228_fu_358_p1() {
    sext_ln228_fu_358_p1 = esl_sext<64,5>(add_ln228_reg_423.read());
}

void final_perm::thread_sub_ln1311_fu_214_p2() {
    sub_ln1311_fu_214_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_182_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_182_p4.read()));
}

void final_perm::thread_sub_ln228_1_fu_307_p2() {
    sub_ln228_1_fu_307_p2 = (!ap_const_lv5_0.is_01() || !trunc_ln657_fu_303_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_0) - sc_biguint<5>(trunc_ln657_fu_303_p1.read()));
}

void final_perm::thread_sub_ln228_fu_341_p2() {
    sub_ln228_fu_341_p2 = (!zext_ln228_1_fu_337_p1.read().is_01() || !zext_ln228_fu_325_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln228_1_fu_337_p1.read()) - sc_biguint<5>(zext_ln228_fu_325_p1.read()));
}

void final_perm::thread_tmp_31_fu_286_p4() {
    tmp_31_fu_286_p4 = r_V_1_fu_268_p2.read().range(55, 24);
}

void final_perm::thread_tmp_32_fu_329_p3() {
    tmp_32_fu_329_p3 = esl_concat<2,2>(j_0_reg_127.read(), ap_const_lv2_0);
}

void final_perm::thread_tmp_V_1_fu_192_p1() {
    tmp_V_1_fu_192_p1 = p_Val2_s_fu_178_p1.read().range(23-1, 0);
}

void final_perm::thread_tmp_V_fu_182_p4() {
    tmp_V_fu_182_p4 = p_Val2_s_fu_178_p1.read().range(30, 23);
}

void final_perm::thread_tmp_fu_274_p3() {
    tmp_fu_274_p3 = r_V_fu_262_p2.read().range(24, 24);
}

void final_perm::thread_trunc_ln228_fu_313_p1() {
    trunc_ln228_fu_313_p1 = p_Val2_4_fu_296_p3.read().range(5-1, 0);
}

void final_perm::thread_trunc_ln657_fu_303_p1() {
    trunc_ln657_fu_303_p1 = p_Val2_4_fu_296_p3.read().range(5-1, 0);
}

void final_perm::thread_ush_fu_224_p3() {
    ush_fu_224_p3 = (!isNeg_fu_206_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_206_p3.read()[0].to_bool())? sext_ln1311_fu_220_p1.read(): add_ln339_fu_200_p2.read());
}

void final_perm::thread_zext_ln1287_fu_258_p1() {
    zext_ln1287_fu_258_p1 = esl_zext<79,32>(sext_ln1311_1_fu_252_p1.read());
}

void final_perm::thread_zext_ln226_fu_162_p1() {
    zext_ln226_fu_162_p1 = esl_zext<5,2>(i_0_reg_115.read());
}

void final_perm::thread_zext_ln228_1_fu_337_p1() {
    zext_ln228_1_fu_337_p1 = esl_zext<5,4>(tmp_32_fu_329_p3.read());
}

void final_perm::thread_zext_ln228_fu_325_p1() {
    zext_ln228_fu_325_p1 = esl_zext<5,2>(j_0_reg_127.read());
}

void final_perm::thread_zext_ln339_fu_196_p1() {
    zext_ln339_fu_196_p1 = esl_zext<9,8>(tmp_V_fu_182_p4.read());
}

void final_perm::thread_zext_ln662_fu_282_p1() {
    zext_ln662_fu_282_p1 = esl_zext<32,1>(tmp_fu_274_p3.read());
}

void final_perm::thread_zext_ln682_fu_248_p1() {
    zext_ln682_fu_248_p1 = esl_zext<79,25>(mantissa_V_fu_239_p4.read());
}

void final_perm::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln224_fu_150_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln226_fu_166_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

