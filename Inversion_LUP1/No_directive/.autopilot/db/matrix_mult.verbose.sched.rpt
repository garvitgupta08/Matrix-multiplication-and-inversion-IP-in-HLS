

================================================================
== Vivado HLS Report for 'matrix_mult'
================================================================
* Date:           Sat Aug 15 11:40:42 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        Inversion_LUP1
* Solution:       No_directive
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.024|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  295|  295|  295|  295|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------+-----+-----+----------+-----------+-----------+------+----------+
        |            |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------+-----+-----+----------+-----------+-----------+------+----------+
        |- MM_L1     |  294|  294|        98|          -|          -|     3|    no    |
        | + MM_L2    |   96|   96|        32|          -|          -|     3|    no    |
        |  ++ MM_L3  |   30|   30|        10|          -|          -|     3|    no    |
        +------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 14 [1/1] (1.76ns)   --->   "br label %1" [Inversion_LUP1/inverse.cpp:206]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %0 ], [ %i, %MM_L1_end ]"   --->   Operation 15 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.95ns)   --->   "%icmp_ln206 = icmp eq i2 %i_0, -1" [Inversion_LUP1/inverse.cpp:206]   --->   Operation 16 'icmp' 'icmp_ln206' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 17 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.56ns)   --->   "%i = add i2 %i_0, 1" [Inversion_LUP1/inverse.cpp:206]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln206, label %5, label %MM_L1_begin" [Inversion_LUP1/inverse.cpp:206]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str20) nounwind" [Inversion_LUP1/inverse.cpp:207]   --->   Operation 20 'specloopname' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str20)" [Inversion_LUP1/inverse.cpp:207]   --->   Operation 21 'specregionbegin' 'tmp' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln213 = zext i2 %i_0 to i5" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 22 'zext' 'zext_ln213' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_2 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i_0, i2 0)" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 23 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln213_1 = zext i4 %tmp_2 to i5" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 24 'zext' 'zext_ln213_1' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.73ns)   --->   "%sub_ln213 = sub i5 %zext_ln213_1, %zext_ln213" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 25 'sub' 'sub_ln213' <Predicate = (!icmp_ln206)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "br label %2" [Inversion_LUP1/inverse.cpp:208]   --->   Operation 26 'br' <Predicate = (!icmp_ln206)> <Delay = 1.76>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "ret void" [Inversion_LUP1/inverse.cpp:219]   --->   Operation 27 'ret' <Predicate = (icmp_ln206)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.78>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ 0, %MM_L1_begin ], [ %j, %MM_L2_end ]"   --->   Operation 28 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.95ns)   --->   "%icmp_ln208 = icmp eq i2 %j_0, -1" [Inversion_LUP1/inverse.cpp:208]   --->   Operation 29 'icmp' 'icmp_ln208' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 30 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (1.56ns)   --->   "%j = add i2 %j_0, 1" [Inversion_LUP1/inverse.cpp:208]   --->   Operation 31 'add' 'j' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln208, label %MM_L1_end, label %MM_L2_begin" [Inversion_LUP1/inverse.cpp:208]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str21) nounwind" [Inversion_LUP1/inverse.cpp:209]   --->   Operation 33 'specloopname' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str21)" [Inversion_LUP1/inverse.cpp:209]   --->   Operation 34 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln216 = zext i2 %j_0 to i5" [Inversion_LUP1/inverse.cpp:216]   --->   Operation 35 'zext' 'zext_ln216' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.78ns)   --->   "%add_ln216 = add i5 %sub_ln213, %zext_ln216" [Inversion_LUP1/inverse.cpp:216]   --->   Operation 36 'add' 'add_ln216' <Predicate = (!icmp_ln208)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%sext_ln216 = sext i5 %add_ln216 to i64" [Inversion_LUP1/inverse.cpp:216]   --->   Operation 37 'sext' 'sext_ln216' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%A_inv_addr = getelementptr [9 x float]* %A_inv, i64 0, i64 %sext_ln216" [Inversion_LUP1/inverse.cpp:216]   --->   Operation 38 'getelementptr' 'A_inv_addr' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.76ns)   --->   "br label %3" [Inversion_LUP1/inverse.cpp:211]   --->   Operation 39 'br' <Predicate = (!icmp_ln208)> <Delay = 1.76>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str20, i32 %tmp)" [Inversion_LUP1/inverse.cpp:218]   --->   Operation 40 'specregionend' 'empty_7' <Predicate = (icmp_ln208)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "br label %1" [Inversion_LUP1/inverse.cpp:206]   --->   Operation 41 'br' <Predicate = (icmp_ln208)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.72>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%sumFinal_0 = phi float [ 0.000000e+00, %MM_L2_begin ], [ %sumFinal, %4 ]"   --->   Operation 42 'phi' 'sumFinal_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%k_0 = phi i2 [ 0, %MM_L2_begin ], [ %k, %4 ]"   --->   Operation 43 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.95ns)   --->   "%icmp_ln211 = icmp eq i2 %k_0, -1" [Inversion_LUP1/inverse.cpp:211]   --->   Operation 44 'icmp' 'icmp_ln211' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 45 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (1.56ns)   --->   "%k = add i2 %k_0, 1" [Inversion_LUP1/inverse.cpp:211]   --->   Operation 46 'add' 'k' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %icmp_ln211, label %MM_L2_end, label %4" [Inversion_LUP1/inverse.cpp:211]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln213_2 = zext i2 %k_0 to i5" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 48 'zext' 'zext_ln213_2' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (1.78ns)   --->   "%add_ln213 = add i5 %sub_ln213, %zext_ln213_2" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 49 'add' 'add_ln213' <Predicate = (!icmp_ln211)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%sext_ln213 = sext i5 %add_ln213 to i64" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 50 'sext' 'sext_ln213' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%U_inv_addr = getelementptr [9 x float]* %U_inv, i64 0, i64 %sext_ln213" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 51 'getelementptr' 'U_inv_addr' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_3 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %k_0, i2 0)" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 52 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln213_3 = zext i4 %tmp_3 to i5" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 53 'zext' 'zext_ln213_3' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_1 = sub i5 %zext_ln213_3, %zext_ln213_2" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 54 'sub' 'sub_ln213_1' <Predicate = (!icmp_ln211)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 55 [1/1] (3.40ns) (root node of TernaryAdder)   --->   "%add_ln213_1 = add i5 %sub_ln213_1, %zext_ln216" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 55 'add' 'add_ln213_1' <Predicate = (!icmp_ln211)> <Delay = 3.40> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%sext_ln213_1 = sext i5 %add_ln213_1 to i64" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 56 'sext' 'sext_ln213_1' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%L_inv_addr = getelementptr [9 x float]* %L_inv, i64 0, i64 %sext_ln213_1" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 57 'getelementptr' 'L_inv_addr' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 58 [2/2] (2.32ns)   --->   "%U_inv_load = load float* %U_inv_addr, align 4" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 58 'load' 'U_inv_load' <Predicate = (!icmp_ln211)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 59 [2/2] (2.32ns)   --->   "%L_inv_load = load float* %L_inv_addr, align 4" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 59 'load' 'L_inv_load' <Predicate = (!icmp_ln211)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 60 [1/1] (2.32ns)   --->   "store float %sumFinal_0, float* %A_inv_addr, align 4" [Inversion_LUP1/inverse.cpp:216]   --->   Operation 60 'store' <Predicate = (icmp_ln211)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str21, i32 %tmp_1)" [Inversion_LUP1/inverse.cpp:217]   --->   Operation 61 'specregionend' 'empty' <Predicate = (icmp_ln211)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "br label %2" [Inversion_LUP1/inverse.cpp:208]   --->   Operation 62 'br' <Predicate = (icmp_ln211)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.02>
ST_5 : Operation 63 [1/2] (2.32ns)   --->   "%U_inv_load = load float* %U_inv_addr, align 4" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 63 'load' 'U_inv_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 64 [1/2] (2.32ns)   --->   "%L_inv_load = load float* %L_inv_addr, align 4" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 64 'load' 'L_inv_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 65 [4/4] (5.70ns)   --->   "%sumTemp = fmul float %U_inv_load, %L_inv_load" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 65 'fmul' 'sumTemp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 66 [3/4] (5.70ns)   --->   "%sumTemp = fmul float %U_inv_load, %L_inv_load" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 66 'fmul' 'sumTemp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 67 [2/4] (5.70ns)   --->   "%sumTemp = fmul float %U_inv_load, %L_inv_load" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 67 'fmul' 'sumTemp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.70>
ST_8 : Operation 68 [1/4] (5.70ns)   --->   "%sumTemp = fmul float %U_inv_load, %L_inv_load" [Inversion_LUP1/inverse.cpp:213]   --->   Operation 68 'fmul' 'sumTemp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 69 [5/5] (7.25ns)   --->   "%sumFinal = fadd float %sumFinal_0, %sumTemp" [Inversion_LUP1/inverse.cpp:214]   --->   Operation 69 'fadd' 'sumFinal' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 70 [4/5] (7.25ns)   --->   "%sumFinal = fadd float %sumFinal_0, %sumTemp" [Inversion_LUP1/inverse.cpp:214]   --->   Operation 70 'fadd' 'sumFinal' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 71 [3/5] (7.25ns)   --->   "%sumFinal = fadd float %sumFinal_0, %sumTemp" [Inversion_LUP1/inverse.cpp:214]   --->   Operation 71 'fadd' 'sumFinal' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 72 [2/5] (7.25ns)   --->   "%sumFinal = fadd float %sumFinal_0, %sumTemp" [Inversion_LUP1/inverse.cpp:214]   --->   Operation 72 'fadd' 'sumFinal' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.25>
ST_13 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str22) nounwind" [Inversion_LUP1/inverse.cpp:212]   --->   Operation 73 'specloopname' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 74 [1/5] (7.25ns)   --->   "%sumFinal = fadd float %sumFinal_0, %sumTemp" [Inversion_LUP1/inverse.cpp:214]   --->   Operation 74 'fadd' 'sumFinal' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 75 [1/1] (0.00ns)   --->   "br label %3" [Inversion_LUP1/inverse.cpp:211]   --->   Operation 75 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', Inversion_LUP1/inverse.cpp:206) [6]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Inversion_LUP1/inverse.cpp:208) [20]  (1.77 ns)

 <State 3>: 1.78ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', Inversion_LUP1/inverse.cpp:208) [20]  (0 ns)
	'add' operation ('add_ln216', Inversion_LUP1/inverse.cpp:216) [29]  (1.78 ns)

 <State 4>: 5.73ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', Inversion_LUP1/inverse.cpp:211) [35]  (0 ns)
	'sub' operation ('sub_ln213_1', Inversion_LUP1/inverse.cpp:213) [48]  (0 ns)
	'add' operation ('add_ln213_1', Inversion_LUP1/inverse.cpp:213) [49]  (3.4 ns)
	'getelementptr' operation ('L_inv_addr', Inversion_LUP1/inverse.cpp:213) [51]  (0 ns)
	'load' operation ('L_inv_load', Inversion_LUP1/inverse.cpp:213) on array 'L_inv' [53]  (2.32 ns)

 <State 5>: 8.02ns
The critical path consists of the following:
	'load' operation ('U_inv_load', Inversion_LUP1/inverse.cpp:213) on array 'U_inv' [52]  (2.32 ns)
	'fmul' operation ('sumTemp', Inversion_LUP1/inverse.cpp:213) [54]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('sumTemp', Inversion_LUP1/inverse.cpp:213) [54]  (5.7 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('sumTemp', Inversion_LUP1/inverse.cpp:213) [54]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('sumTemp', Inversion_LUP1/inverse.cpp:213) [54]  (5.7 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sumFinal', Inversion_LUP1/inverse.cpp:214) [55]  (7.26 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sumFinal', Inversion_LUP1/inverse.cpp:214) [55]  (7.26 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sumFinal', Inversion_LUP1/inverse.cpp:214) [55]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sumFinal', Inversion_LUP1/inverse.cpp:214) [55]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sumFinal', Inversion_LUP1/inverse.cpp:214) [55]  (7.26 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
