

================================================================
== Vivado HLS Report for 'lup'
================================================================
* Date:           Sat Aug 15 11:40:40 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        Inversion_LUP1
* Solution:       No_directive
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.434|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   60|  657|   60|  657|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+-----+-----+----------+-----------+-----------+-------+----------+
        |                        |  Latency  | Iteration|  Initiation Interval  |  Trip |          |
        |        Loop Name       | min | max |  Latency |  achieved |   target  | Count | Pipelined|
        +------------------------+-----+-----+----------+-----------+-----------+-------+----------+
        |- PermutMat_Initialize  |   18|   18|         6|          -|          -|      3|    no    |
        |- lup_label0            |   39|  586| 39 ~ 194 |          -|          -| 1 ~ 3 |    no    |
        | + find_max             |    3|    9|         3|          -|          -| 1 ~ 3 |    no    |
        | + swap_row             |    9|    9|         3|          -|          -|      3|    no    |
        | + lup_label0.3         |    9|    9|         3|          -|          -|      3|    no    |
        | + lup_label1           |   29|  153|  29 ~ 51 |          -|          -| 1 ~ 3 |    no    |
        |  ++ lup_label2         |   11|   33|        11|          -|          -| 1 ~ 3 |    no    |
        |- Assign_L0             |   12|   24|   4 ~ 8  |          -|          -|      3|    no    |
        | + Assign_L1            |    2|    6|         2|          -|          -| 1 ~ 3 |    no    |
        |- Assign_U0             |   12|   24|   4 ~ 8  |          -|          -|      3|    no    |
        | + Assign_U1            |    2|    6|         2|          -|          -| 1 ~ 3 |    no    |
        +------------------------+-----+-----+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 61
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 8 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 
8 --> 9 55 
9 --> 10 
10 --> 11 13 
11 --> 12 
12 --> 10 
13 --> 14 
14 --> 24 15 61 
15 --> 16 18 
16 --> 17 
17 --> 15 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 27 
25 --> 26 
26 --> 24 
27 --> 28 8 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 27 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 44 
55 --> 56 58 
56 --> 57 55 
57 --> 56 
58 --> 59 61 
59 --> 60 58 
60 --> 59 
61 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%P_2_0 = alloca float"   --->   Operation 62 'alloca' 'P_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%P_1_0 = alloca float"   --->   Operation 63 'alloca' 'P_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%P_0_0 = alloca float"   --->   Operation 64 'alloca' 'P_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (1.76ns)   --->   "br label %1" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 65 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.41>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %0 ], [ %i, %branch12 ]"   --->   Operation 66 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i2 %i_0 to i32" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 67 'zext' 'zext_ln17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.95ns)   --->   "%icmp_ln17 = icmp eq i2 %i_0, -1" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 68 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 69 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (1.56ns)   --->   "%i = add i2 %i_0, 1" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 70 'add' 'i' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "br i1 %icmp_ln17, label %.preheader10.preheader, label %branch12" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [6/6] (6.41ns)   --->   "%tmp = sitofp i32 %zext_ln17 to float" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 72 'sitofp' 'tmp' <Predicate = (!icmp_ln17)> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%P_2_0_load = load float* %P_2_0" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 73 'load' 'P_2_0_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%P_1_0_load = load float* %P_1_0" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 74 'load' 'P_1_0_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%P_0_0_load = load float* %P_0_0" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 75 'load' 'P_0_0_load' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%ind2_1 = alloca i32"   --->   Operation 76 'alloca' 'ind2_1' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%ind2_2 = alloca i32"   --->   Operation 77 'alloca' 'ind2_2' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%P_2_2 = alloca float"   --->   Operation 78 'alloca' 'P_2_2' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%P_1_2 = alloca float"   --->   Operation 79 'alloca' 'P_1_2' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%P_0_2 = alloca float"   --->   Operation 80 'alloca' 'P_0_2' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%P_3_0 = alloca float"   --->   Operation 81 'alloca' 'P_3_0' <Predicate = (icmp_ln17)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (1.76ns)   --->   "store float %P_0_0_load, float* %P_0_2" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 82 'store' <Predicate = (icmp_ln17)> <Delay = 1.76>
ST_2 : Operation 83 [1/1] (1.76ns)   --->   "store float %P_1_0_load, float* %P_1_2" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 83 'store' <Predicate = (icmp_ln17)> <Delay = 1.76>
ST_2 : Operation 84 [1/1] (1.76ns)   --->   "store float %P_2_0_load, float* %P_2_2" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 84 'store' <Predicate = (icmp_ln17)> <Delay = 1.76>
ST_2 : Operation 85 [1/1] (1.76ns)   --->   "br label %.preheader10" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 85 'br' <Predicate = (icmp_ln17)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 6.41>
ST_3 : Operation 86 [5/6] (6.41ns)   --->   "%tmp = sitofp i32 %zext_ln17 to float" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 86 'sitofp' 'tmp' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.41>
ST_4 : Operation 87 [4/6] (6.41ns)   --->   "%tmp = sitofp i32 %zext_ln17 to float" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 87 'sitofp' 'tmp' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.41>
ST_5 : Operation 88 [3/6] (6.41ns)   --->   "%tmp = sitofp i32 %zext_ln17 to float" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 88 'sitofp' 'tmp' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.41>
ST_6 : Operation 89 [2/6] (6.41ns)   --->   "%tmp = sitofp i32 %zext_ln17 to float" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 89 'sitofp' 'tmp' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.11>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%P_2_0_load_1 = load float* %P_2_0"   --->   Operation 90 'load' 'P_2_0_load_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%P_1_0_load_1 = load float* %P_1_0"   --->   Operation 91 'load' 'P_1_0_load_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%P_0_0_load_1 = load float* %P_0_0"   --->   Operation 92 'load' 'P_0_0_load_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @p_str) nounwind" [Inversion_LUP1/inverse.cpp:18]   --->   Operation 93 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/6] (6.41ns)   --->   "%tmp = sitofp i32 %zext_ln17 to float" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 94 'sitofp' 'tmp' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.95ns)   --->   "%icmp_ln19 = icmp eq i2 %i_0, 0" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 95 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node P_2_1)   --->   "%select_ln19 = select i1 %icmp_ln19, float %P_2_0_load_1, float %tmp" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 96 'select' 'select_ln19' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.95ns)   --->   "%icmp_ln19_1 = icmp eq i2 %i_0, 1" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 97 'icmp' 'icmp_ln19_1' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 98 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_2_1 = select i1 %icmp_ln19_1, float %P_2_0_load_1, float %select_ln19" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 98 'select' 'P_2_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 99 [1/1] (0.69ns)   --->   "%P_1_1 = select i1 %icmp_ln19_1, float %tmp, float %P_1_0_load_1" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 99 'select' 'P_1_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node P_0_1)   --->   "%select_ln19_1 = select i1 %icmp_ln19, float %tmp, float %P_0_0_load_1" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 100 'select' 'select_ln19_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_0_1 = select i1 %icmp_ln19_1, float %P_0_0_load_1, float %select_ln19_1" [Inversion_LUP1/inverse.cpp:19]   --->   Operation 101 'select' 'P_0_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "store float %P_0_1, float* %P_0_0" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 102 'store' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "store float %P_1_1, float* %P_1_0" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 103 'store' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "store float %P_2_1, float* %P_2_0" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 104 'store' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "br label %1" [Inversion_LUP1/inverse.cpp:17]   --->   Operation 105 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 2> <Delay = 2.32>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%pos = phi i2 [ %i_3, %lup_label0_end ], [ 0, %.preheader10.preheader ]"   --->   Operation 106 'phi' 'pos' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%P_2_2_load = load float* %P_2_2"   --->   Operation 107 'load' 'P_2_2_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%P_1_2_load = load float* %P_1_2"   --->   Operation 108 'load' 'P_1_2_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "%P_0_2_load = load float* %P_0_2"   --->   Operation 109 'load' 'P_0_2_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i2 %pos to i32" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 110 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (0.95ns)   --->   "%icmp_ln34 = icmp eq i2 %pos, -1" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 111 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 2)"   --->   Operation 112 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (1.56ns)   --->   "%i_3 = add i2 %pos, 1" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 113 'add' 'i_3' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "br i1 %icmp_ln34, label %.preheader7.preheader, label %lup_label0_begin" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 114 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_9 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %pos, i2 0)" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 115 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln40_1 = zext i4 %tmp_9 to i64" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 116 'zext' 'zext_ln40_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [9 x float]* %A, i64 0, i64 %zext_ln40_1" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 117 'getelementptr' 'A_addr' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_8 : Operation 118 [2/2] (2.32ns)   --->   "%max = load float* %A_addr, align 4" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 118 'load' 'max' <Predicate = (!icmp_ln34)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_8 : Operation 119 [1/1] (1.76ns)   --->   "br label %.preheader7" [Inversion_LUP1/inverse.cpp:104]   --->   Operation 119 'br' <Predicate = (icmp_ln34)> <Delay = 1.76>

State 9 <SV = 3> <Delay = 4.77>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1) nounwind" [Inversion_LUP1/inverse.cpp:35]   --->   Operation 120 'specloopname' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1)" [Inversion_LUP1/inverse.cpp:35]   --->   Operation 121 'specregionbegin' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i2 %pos to i5" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 122 'zext' 'zext_ln40' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln40_2 = zext i4 %tmp_9 to i5" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 123 'zext' 'zext_ln40_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (1.73ns)   --->   "%sub_ln40 = sub i5 %zext_ln40_2, %zext_ln40" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 124 'sub' 'sub_ln40' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/2] (2.32ns)   --->   "%max = load float* %A_addr, align 4" [Inversion_LUP1/inverse.cpp:40]   --->   Operation 125 'load' 'max' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_9 : Operation 126 [1/1] (0.00ns)   --->   "%bitcast_ln50_1 = bitcast float %max to i32" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 126 'bitcast' 'bitcast_ln50_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 127 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i32 %bitcast_ln50_1 to i23" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 127 'trunc' 'trunc_ln50' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 128 [1/1] (2.44ns)   --->   "%icmp_ln50_3 = icmp eq i23 %trunc_ln50, 0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 128 'icmp' 'icmp_ln50_3' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (1.76ns)   --->   "br label %2" [Inversion_LUP1/inverse.cpp:46]   --->   Operation 129 'br' <Predicate = true> <Delay = 1.76>

State 10 <SV = 4> <Delay = 8.27>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%max_0 = phi float [ %max, %lup_label0_begin ], [ %select_ln50, %find_max ]"   --->   Operation 130 'phi' 'max_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%pos_0 = phi i32 [ %zext_ln34, %lup_label0_begin ], [ %select_ln50_1, %find_max ]" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 131 'phi' 'pos_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (0.00ns)   --->   "%k_0_in = phi i32 [ %zext_ln34, %lup_label0_begin ], [ %pos_2, %find_max ]"   --->   Operation 132 'phi' 'k_0_in' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 133 [1/1] (2.55ns)   --->   "%pos_2 = add nsw i32 %k_0_in, 1" [Inversion_LUP1/inverse.cpp:46]   --->   Operation 133 'add' 'pos_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 134 [1/1] (2.47ns)   --->   "%icmp_ln46 = icmp eq i32 %k_0_in, 2" [Inversion_LUP1/inverse.cpp:46]   --->   Operation 134 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "br i1 %icmp_ln46, label %3, label %find_max" [Inversion_LUP1/inverse.cpp:46]   --->   Operation 135 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i32 %pos_2 to i5" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 136 'trunc' 'trunc_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln49_1 = trunc i32 %pos_2 to i3" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 137 'trunc' 'trunc_ln49_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%sext_ln49_1_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %trunc_ln49_1, i2 0)" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 138 'bitconcatenate' 'sext_ln49_1_cast' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln49 = sub i5 %sext_ln49_1_cast, %trunc_ln49" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 139 'sub' 'sub_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 140 [1/1] (3.40ns) (root node of TernaryAdder)   --->   "%add_ln49 = add i5 %zext_ln40, %sub_ln49" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 140 'add' 'add_ln49' <Predicate = (!icmp_ln46)> <Delay = 3.40> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%sext_ln49 = sext i5 %add_ln49 to i64" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 141 'sext' 'sext_ln49' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln49" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 142 'getelementptr' 'A_addr_2' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 143 [2/2] (2.32ns)   --->   "%max_2 = load float* %A_addr_2, align 4" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 143 'load' 'max_2' <Predicate = (!icmp_ln46)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_10 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln50_1, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 144 'partselect' 'tmp_12' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 145 [1/1] (1.55ns)   --->   "%icmp_ln50_2 = icmp ne i8 %tmp_12, -1" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 145 'icmp' 'icmp_ln50_2' <Predicate = (!icmp_ln46)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln58 = trunc i32 %pos_0 to i5" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 146 'trunc' 'trunc_ln58' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 147 [1/1] (0.00ns)   --->   "%trunc_ln58_1 = trunc i32 %pos_0 to i3" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 147 'trunc' 'trunc_ln58_1' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 148 [1/1] (0.00ns)   --->   "%sext_ln58_1_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %trunc_ln58_1, i2 0)" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 148 'bitconcatenate' 'sext_ln58_1_cast' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (1.78ns)   --->   "%sub_ln58 = sub i5 %sext_ln58_1_cast, %trunc_ln58" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 149 'sub' 'sub_ln58' <Predicate = (icmp_ln46)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 150 [1/1] (1.78ns)   --->   "%add_ln58 = add i5 %zext_ln40, %sub_ln58" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 150 'add' 'add_ln58' <Predicate = (icmp_ln46)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%sext_ln58 = sext i5 %add_ln58 to i64" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 151 'sext' 'sext_ln58' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln58" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 152 'getelementptr' 'A_addr_1' <Predicate = (icmp_ln46)> <Delay = 0.00>
ST_10 : Operation 153 [2/2] (2.32ns)   --->   "%A_load = load float* %A_addr_1, align 4" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 153 'load' 'A_load' <Predicate = (icmp_ln46)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 11 <SV = 5> <Delay = 7.75>
ST_11 : Operation 154 [1/2] (2.32ns)   --->   "%max_2 = load float* %A_addr_2, align 4" [Inversion_LUP1/inverse.cpp:49]   --->   Operation 154 'load' 'max_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_11 : Operation 155 [2/2] (5.43ns)   --->   "%tmp_13 = fcmp ogt float %max_2, %max" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 155 'fcmp' 'tmp_13' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 156 [2/2] (5.43ns)   --->   "%tmp_22 = fcmp ogt float %max_2, %max_0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 156 'fcmp' 'tmp_22' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 6> <Delay = 8.08>
ST_12 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str2) nounwind" [Inversion_LUP1/inverse.cpp:47]   --->   Operation 157 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2)" [Inversion_LUP1/inverse.cpp:47]   --->   Operation 158 'specregionbegin' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 3, i32 2, [1 x i8]* @p_str3) nounwind" [Inversion_LUP1/inverse.cpp:48]   --->   Operation 159 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 160 [1/1] (0.00ns)   --->   "%bitcast_ln50 = bitcast float %max_2 to i32" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 160 'bitcast' 'bitcast_ln50' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln50, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 161 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln50_1 = trunc i32 %bitcast_ln50 to i23" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 162 'trunc' 'trunc_ln50_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 163 [1/1] (1.55ns)   --->   "%icmp_ln50 = icmp ne i8 %tmp_11, -1" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 163 'icmp' 'icmp_ln50' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 164 [1/1] (2.44ns)   --->   "%icmp_ln50_1 = icmp eq i23 %trunc_ln50_1, 0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 164 'icmp' 'icmp_ln50_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 165 [1/1] (0.97ns)   --->   "%or_ln50 = or i1 %icmp_ln50_1, %icmp_ln50" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 165 'or' 'or_ln50' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node and_ln50)   --->   "%or_ln50_1 = or i1 %icmp_ln50_3, %icmp_ln50_2" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 166 'or' 'or_ln50_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node and_ln50)   --->   "%and_ln50_1 = and i1 %or_ln50, %or_ln50_1" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 167 'and' 'and_ln50_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 168 [1/2] (5.43ns)   --->   "%tmp_13 = fcmp ogt float %max_2, %max" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 168 'fcmp' 'tmp_13' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node and_ln50)   --->   "%and_ln50_2 = and i1 %and_ln50_1, %tmp_13" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 169 'and' 'and_ln50_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 170 [1/1] (0.00ns)   --->   "%bitcast_ln50_2 = bitcast float %max_0 to i32" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 170 'bitcast' 'bitcast_ln50_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 171 [1/1] (0.00ns)   --->   "%tmp_21 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln50_2, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 171 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 172 [1/1] (0.00ns)   --->   "%trunc_ln50_2 = trunc i32 %bitcast_ln50_2 to i23" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 172 'trunc' 'trunc_ln50_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 173 [1/1] (1.55ns)   --->   "%icmp_ln50_4 = icmp ne i8 %tmp_21, -1" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 173 'icmp' 'icmp_ln50_4' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 174 [1/1] (2.44ns)   --->   "%icmp_ln50_5 = icmp eq i23 %trunc_ln50_2, 0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 174 'icmp' 'icmp_ln50_5' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node and_ln50_4)   --->   "%or_ln50_2 = or i1 %icmp_ln50_5, %icmp_ln50_4" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 175 'or' 'or_ln50_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node and_ln50_4)   --->   "%and_ln50_3 = and i1 %or_ln50, %or_ln50_2" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 176 'and' 'and_ln50_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 177 [1/2] (5.43ns)   --->   "%tmp_22 = fcmp ogt float %max_2, %max_0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 177 'fcmp' 'tmp_22' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 178 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln50_4 = and i1 %and_ln50_3, %tmp_22" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 178 'and' 'and_ln50_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 179 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln50 = and i1 %and_ln50_2, %and_ln50_4" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 179 'and' 'and_ln50' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 180 [1/1] (0.69ns)   --->   "%select_ln50 = select i1 %and_ln50, float %max_2, float %max_0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 180 'select' 'select_ln50' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 181 [1/1] (0.69ns)   --->   "%select_ln50_1 = select i1 %and_ln50, i32 %pos_2, i32 %pos_0" [Inversion_LUP1/inverse.cpp:50]   --->   Operation 181 'select' 'select_ln50_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 182 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_8)" [Inversion_LUP1/inverse.cpp:55]   --->   Operation 182 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 183 [1/1] (0.00ns)   --->   "br label %2" [Inversion_LUP1/inverse.cpp:46]   --->   Operation 183 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 5> <Delay = 7.75>
ST_13 : Operation 184 [1/2] (2.32ns)   --->   "%A_load = load float* %A_addr_1, align 4" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 184 'load' 'A_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_13 : Operation 185 [1/1] (0.00ns)   --->   "%bitcast_ln58 = bitcast float %A_load to i32" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 185 'bitcast' 'bitcast_ln58' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln58, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 186 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 187 [1/1] (0.00ns)   --->   "%trunc_ln58_2 = trunc i32 %bitcast_ln58 to i23" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 187 'trunc' 'trunc_ln58_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 188 [1/1] (1.55ns)   --->   "%icmp_ln58 = icmp ne i8 %tmp_3, -1" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 188 'icmp' 'icmp_ln58' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 189 [1/1] (2.44ns)   --->   "%icmp_ln58_1 = icmp eq i23 %trunc_ln58_2, 0" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 189 'icmp' 'icmp_ln58_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 190 [2/2] (5.43ns)   --->   "%tmp_4 = fcmp oeq float %A_load, 0.000000e+00" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 190 'fcmp' 'tmp_4' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 6> <Delay = 6.40>
ST_14 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node and_ln58)   --->   "%or_ln58 = or i1 %icmp_ln58_1, %icmp_ln58" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 191 'or' 'or_ln58' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 192 [1/2] (5.43ns)   --->   "%tmp_4 = fcmp oeq float %A_load, 0.000000e+00" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 192 'fcmp' 'tmp_4' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 193 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln58 = and i1 %or_ln58, %tmp_4" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 193 'and' 'and_ln58' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 194 [1/1] (0.00ns)   --->   "br i1 %and_ln58, label %.loopexit.loopexit7, label %4" [Inversion_LUP1/inverse.cpp:58]   --->   Operation 194 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 195 [1/1] (2.47ns)   --->   "%icmp_ln65 = icmp eq i32 %pos_0, %zext_ln34" [Inversion_LUP1/inverse.cpp:65]   --->   Operation 195 'icmp' 'icmp_ln65' <Predicate = (!and_ln58)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 196 [1/1] (0.00ns)   --->   "br i1 %icmp_ln65, label %._crit_edge, label %.preheader9.preheader" [Inversion_LUP1/inverse.cpp:65]   --->   Operation 196 'br' <Predicate = (!and_ln58)> <Delay = 0.00>
ST_14 : Operation 197 [1/1] (1.76ns)   --->   "br label %.preheader9" [Inversion_LUP1/inverse.cpp:67]   --->   Operation 197 'br' <Predicate = (!and_ln58 & !icmp_ln65)> <Delay = 1.76>
ST_14 : Operation 198 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 198 'br' <Predicate = (and_ln58)> <Delay = 1.76>

State 15 <SV = 7> <Delay = 6.41>
ST_15 : Operation 199 [1/1] (0.00ns)   --->   "%k_1 = phi i2 [ %k_2, %5 ], [ 0, %.preheader9.preheader ]"   --->   Operation 199 'phi' 'k_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 200 [1/1] (0.95ns)   --->   "%icmp_ln67 = icmp eq i2 %k_1, -1" [Inversion_LUP1/inverse.cpp:67]   --->   Operation 200 'icmp' 'icmp_ln67' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 201 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 201 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 202 [1/1] (1.56ns)   --->   "%k_2 = add i2 %k_1, 1" [Inversion_LUP1/inverse.cpp:67]   --->   Operation 202 'add' 'k_2' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 203 [1/1] (0.00ns)   --->   "br i1 %icmp_ln67, label %.preheader8.preheader, label %5" [Inversion_LUP1/inverse.cpp:67]   --->   Operation 203 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i2 %k_1 to i5" [Inversion_LUP1/inverse.cpp:70]   --->   Operation 204 'zext' 'zext_ln70' <Predicate = (!icmp_ln67)> <Delay = 0.00>
ST_15 : Operation 205 [1/1] (1.78ns)   --->   "%add_ln70 = add i5 %sub_ln58, %zext_ln70" [Inversion_LUP1/inverse.cpp:70]   --->   Operation 205 'add' 'add_ln70' <Predicate = (!icmp_ln67)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 206 [1/1] (0.00ns)   --->   "%sext_ln70 = sext i5 %add_ln70 to i64" [Inversion_LUP1/inverse.cpp:70]   --->   Operation 206 'sext' 'sext_ln70' <Predicate = (!icmp_ln67)> <Delay = 0.00>
ST_15 : Operation 207 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln70" [Inversion_LUP1/inverse.cpp:70]   --->   Operation 207 'getelementptr' 'A_addr_5' <Predicate = (!icmp_ln67)> <Delay = 0.00>
ST_15 : Operation 208 [1/1] (1.78ns)   --->   "%add_ln71 = add i5 %sub_ln40, %zext_ln70" [Inversion_LUP1/inverse.cpp:71]   --->   Operation 208 'add' 'add_ln71' <Predicate = (!icmp_ln67)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 209 [1/1] (0.00ns)   --->   "%sext_ln71 = sext i5 %add_ln71 to i64" [Inversion_LUP1/inverse.cpp:71]   --->   Operation 209 'sext' 'sext_ln71' <Predicate = (!icmp_ln67)> <Delay = 0.00>
ST_15 : Operation 210 [1/1] (0.00ns)   --->   "%A_addr_6 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln71" [Inversion_LUP1/inverse.cpp:71]   --->   Operation 210 'getelementptr' 'A_addr_6' <Predicate = (!icmp_ln67)> <Delay = 0.00>
ST_15 : Operation 211 [2/2] (2.32ns)   --->   "%tmp_29 = load float* %A_addr_5, align 4" [Inversion_LUP1/inverse.cpp:70]   --->   Operation 211 'load' 'tmp_29' <Predicate = (!icmp_ln67)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_15 : Operation 212 [2/2] (2.32ns)   --->   "%A_load_4 = load float* %A_addr_6, align 4" [Inversion_LUP1/inverse.cpp:71]   --->   Operation 212 'load' 'A_load_4' <Predicate = (!icmp_ln67)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_15 : Operation 213 [6/6] (6.41ns)   --->   "%tmp_5 = sitofp i32 %pos_0 to float" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 213 'sitofp' 'tmp_5' <Predicate = (icmp_ln67)> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_15 : Operation 214 [6/6] (6.41ns)   --->   "%tmp_6 = sitofp i32 %zext_ln34 to float" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 214 'sitofp' 'tmp_6' <Predicate = (icmp_ln67)> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 16 <SV = 8> <Delay = 4.64>
ST_16 : Operation 215 [1/2] (2.32ns)   --->   "%tmp_29 = load float* %A_addr_5, align 4" [Inversion_LUP1/inverse.cpp:70]   --->   Operation 215 'load' 'tmp_29' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_16 : Operation 216 [1/2] (2.32ns)   --->   "%A_load_4 = load float* %A_addr_6, align 4" [Inversion_LUP1/inverse.cpp:71]   --->   Operation 216 'load' 'A_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_16 : Operation 217 [1/1] (2.32ns)   --->   "store float %A_load_4, float* %A_addr_5, align 4" [Inversion_LUP1/inverse.cpp:71]   --->   Operation 217 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 17 <SV = 9> <Delay = 2.32>
ST_17 : Operation 218 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str4) nounwind" [Inversion_LUP1/inverse.cpp:68]   --->   Operation 218 'specloopname' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 219 [1/1] (2.32ns)   --->   "store float %tmp_29, float* %A_addr_6, align 4" [Inversion_LUP1/inverse.cpp:72]   --->   Operation 219 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_17 : Operation 220 [1/1] (0.00ns)   --->   "br label %.preheader9" [Inversion_LUP1/inverse.cpp:67]   --->   Operation 220 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 8> <Delay = 6.41>
ST_18 : Operation 221 [5/6] (6.41ns)   --->   "%tmp_5 = sitofp i32 %pos_0 to float" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 221 'sitofp' 'tmp_5' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_18 : Operation 222 [5/6] (6.41ns)   --->   "%tmp_6 = sitofp i32 %zext_ln34 to float" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 222 'sitofp' 'tmp_6' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 19 <SV = 9> <Delay = 6.41>
ST_19 : Operation 223 [4/6] (6.41ns)   --->   "%tmp_5 = sitofp i32 %pos_0 to float" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 223 'sitofp' 'tmp_5' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_19 : Operation 224 [4/6] (6.41ns)   --->   "%tmp_6 = sitofp i32 %zext_ln34 to float" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 224 'sitofp' 'tmp_6' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 20 <SV = 10> <Delay = 6.41>
ST_20 : Operation 225 [3/6] (6.41ns)   --->   "%tmp_5 = sitofp i32 %pos_0 to float" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 225 'sitofp' 'tmp_5' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_20 : Operation 226 [3/6] (6.41ns)   --->   "%tmp_6 = sitofp i32 %zext_ln34 to float" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 226 'sitofp' 'tmp_6' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 11> <Delay = 6.41>
ST_21 : Operation 227 [2/6] (6.41ns)   --->   "%tmp_5 = sitofp i32 %pos_0 to float" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 227 'sitofp' 'tmp_5' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_21 : Operation 228 [2/6] (6.41ns)   --->   "%tmp_6 = sitofp i32 %zext_ln34 to float" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 228 'sitofp' 'tmp_6' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 22 <SV = 12> <Delay = 6.41>
ST_22 : Operation 229 [1/6] (6.41ns)   --->   "%tmp_5 = sitofp i32 %pos_0 to float" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 229 'sitofp' 'tmp_5' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_22 : Operation 230 [1/6] (6.41ns)   --->   "%tmp_6 = sitofp i32 %zext_ln34 to float" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 230 'sitofp' 'tmp_6' <Predicate = true> <Delay = 6.41> <Core = "Int2Float">   --->   Core 112 'Int2Float' <Latency = 5> <II = 1> <Delay = 6.41> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>

State 23 <SV = 13> <Delay = 2.44>
ST_23 : Operation 231 [1/1] (0.00ns)   --->   "%bitcast_ln79_1 = bitcast float %tmp_5 to i32" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 231 'bitcast' 'bitcast_ln79_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 232 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i32 %bitcast_ln79_1 to i23" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 232 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 233 [1/1] (2.44ns)   --->   "%icmp_ln79_3 = icmp eq i23 %trunc_ln79, 0" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 233 'icmp' 'icmp_ln79_3' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 234 [1/1] (0.00ns)   --->   "%bitcast_ln81 = bitcast float %tmp_6 to i32" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 234 'bitcast' 'bitcast_ln81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln81 = trunc i32 %bitcast_ln81 to i23" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 235 'trunc' 'trunc_ln81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 236 [1/1] (2.44ns)   --->   "%icmp_ln81 = icmp eq i23 %trunc_ln81, 0" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 236 'icmp' 'icmp_ln81' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 237 [1/1] (1.76ns)   --->   "br label %.preheader8" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 237 'br' <Predicate = true> <Delay = 1.76>

State 24 <SV = 14> <Delay = 6.51>
ST_24 : Operation 238 [1/1] (0.00ns)   --->   "%ind1 = phi i2 [ %i1, %branch8 ], [ 0, %.preheader8.preheader ]"   --->   Operation 238 'phi' 'ind1' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_24 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i2 %ind1 to i32" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 239 'zext' 'zext_ln77' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_24 : Operation 240 [1/1] (0.95ns)   --->   "%icmp_ln77 = icmp eq i2 %ind1, -1" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 240 'icmp' 'icmp_ln77' <Predicate = (!icmp_ln65)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 241 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 241 'speclooptripcount' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_24 : Operation 242 [1/1] (1.56ns)   --->   "%i1 = add i2 %ind1, 1" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 242 'add' 'i1' <Predicate = (!icmp_ln65)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 243 [1/1] (0.00ns)   --->   "br i1 %icmp_ln77, label %branch4, label %6" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 243 'br' <Predicate = (!icmp_ln65)> <Delay = 0.00>
ST_24 : Operation 244 [1/1] (1.81ns)   --->   "switch i2 %ind1, label %branch10 [
    i2 0, label %branch8
    i2 1, label %branch9
  ]" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 244 'switch' <Predicate = (!icmp_ln65 & !icmp_ln77)> <Delay = 1.81>
ST_24 : Operation 245 [1/1] (1.81ns)   --->   "br label %branch8" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 245 'br' <Predicate = (!icmp_ln65 & !icmp_ln77 & ind1 == 1)> <Delay = 1.81>
ST_24 : Operation 246 [1/1] (1.81ns)   --->   "br label %branch8" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 246 'br' <Predicate = (!icmp_ln65 & !icmp_ln77 & ind1 != 0 & ind1 != 1)> <Delay = 1.81>
ST_24 : Operation 247 [1/1] (0.00ns)   --->   "%tmp_26 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln79_1, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 247 'partselect' 'tmp_26' <Predicate = (!icmp_ln65 & !icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 248 [1/1] (1.55ns)   --->   "%icmp_ln79_2 = icmp ne i8 %tmp_26, -1" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 248 'icmp' 'icmp_ln79_2' <Predicate = (!icmp_ln65 & !icmp_ln77)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 249 [1/1] (0.00ns)   --->   "%tmp_28 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln81, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 249 'partselect' 'tmp_28' <Predicate = (!icmp_ln65 & !icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 250 [1/1] (1.55ns)   --->   "%icmp_ln81_1 = icmp ne i8 %tmp_28, -1" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 250 'icmp' 'icmp_ln81_1' <Predicate = (!icmp_ln65 & !icmp_ln77)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 251 [1/1] (0.00ns)   --->   "%ind2_1_load = load i32* %ind2_1" [Inversion_LUP1/inverse.cpp:84]   --->   Operation 251 'load' 'ind2_1_load' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 252 [1/1] (0.00ns)   --->   "%ind2_2_load = load i32* %ind2_2" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 252 'load' 'ind2_2_load' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 253 [1/1] (0.00ns)   --->   "%P_3_0_load = load float* %P_3_0"   --->   Operation 253 'load' 'P_3_0_load' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 254 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i32 %ind2_1_load to i2" [Inversion_LUP1/inverse.cpp:84]   --->   Operation 254 'trunc' 'trunc_ln84' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 255 [1/1] (1.95ns)   --->   "%temp = call float @_ssdm_op_Mux.ap_auto.4float.i2(float %P_0_2_load, float %P_1_2_load, float %P_2_2_load, float %P_3_0_load, i2 %trunc_ln84)" [Inversion_LUP1/inverse.cpp:84]   --->   Operation 255 'mux' 'temp' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 256 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i32 %ind2_2_load to i2" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 256 'trunc' 'trunc_ln85' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 257 [1/1] (1.95ns)   --->   "%tmp_23 = call float @_ssdm_op_Mux.ap_auto.4float.i2(float %P_0_2_load, float %P_1_2_load, float %P_2_2_load, float %P_3_0_load, i2 %trunc_ln85)" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 257 'mux' 'tmp_23' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 258 [1/1] (0.95ns)   --->   "%icmp_ln85 = icmp eq i2 %trunc_ln84, 0" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 258 'icmp' 'icmp_ln85' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 259 [1/1] (0.00ns) (grouped into LUT with out node select_ln85_1)   --->   "%select_ln85 = select i1 %icmp_ln85, float %P_3_0_load, float %tmp_23" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 259 'select' 'select_ln85' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 260 [1/1] (0.95ns)   --->   "%icmp_ln85_1 = icmp eq i2 %trunc_ln84, 1" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 260 'icmp' 'icmp_ln85_1' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 261 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln85_1 = select i1 %icmp_ln85_1, float %P_3_0_load, float %select_ln85" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 261 'select' 'select_ln85_1' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 262 [1/1] (0.95ns)   --->   "%icmp_ln85_2 = icmp eq i2 %trunc_ln84, -2" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 262 'icmp' 'icmp_ln85_2' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 263 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_3_1 = select i1 %icmp_ln85_2, float %P_3_0_load, float %select_ln85_1" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 263 'select' 'P_3_1' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node P_2_4)   --->   "%P_2_3 = select i1 %icmp_ln85_2, float %tmp_23, float %P_2_2_load" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 264 'select' 'P_2_3' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node P_1_3)   --->   "%select_ln85_2 = select i1 %icmp_ln85_1, float %tmp_23, float %P_1_2_load" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 265 'select' 'select_ln85_2' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 266 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_1_3 = select i1 %icmp_ln85_2, float %P_1_2_load, float %select_ln85_2" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 266 'select' 'P_1_3' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node select_ln85_4)   --->   "%select_ln85_3 = select i1 %icmp_ln85, float %tmp_23, float %P_0_2_load" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 267 'select' 'select_ln85_3' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 268 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln85_4 = select i1 %icmp_ln85_1, float %P_0_2_load, float %select_ln85_3" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 268 'select' 'select_ln85_4' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 269 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_0_3 = select i1 %icmp_ln85_2, float %P_0_2_load, float %select_ln85_4" [Inversion_LUP1/inverse.cpp:85]   --->   Operation 269 'select' 'P_0_3' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 270 [1/1] (0.95ns)   --->   "%icmp_ln86 = icmp eq i2 %trunc_ln85, 0" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 270 'icmp' 'icmp_ln86' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_1)   --->   "%select_ln86 = select i1 %icmp_ln86, float %P_3_1, float %temp" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 271 'select' 'select_ln86' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 272 [1/1] (0.95ns)   --->   "%icmp_ln86_1 = icmp eq i2 %trunc_ln85, 1" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 272 'icmp' 'icmp_ln86_1' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 273 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln86_1 = select i1 %icmp_ln86_1, float %P_3_1, float %select_ln86" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 273 'select' 'select_ln86_1' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 274 [1/1] (0.95ns)   --->   "%icmp_ln86_2 = icmp eq i2 %trunc_ln85, -2" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 274 'icmp' 'icmp_ln86_2' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 275 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_3_2 = select i1 %icmp_ln86_2, float %P_3_1, float %select_ln86_1" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 275 'select' 'P_3_2' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 276 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_2_4 = select i1 %icmp_ln86_2, float %temp, float %P_2_3" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 276 'select' 'P_2_4' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node P_1_4)   --->   "%select_ln86_2 = select i1 %icmp_ln86_1, float %temp, float %P_1_3" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 277 'select' 'select_ln86_2' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 278 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_1_4 = select i1 %icmp_ln86_2, float %P_1_3, float %select_ln86_2" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 278 'select' 'P_1_4' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node select_ln86_4)   --->   "%select_ln86_3 = select i1 %icmp_ln86, float %temp, float %P_0_3" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 279 'select' 'select_ln86_3' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 280 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln86_4 = select i1 %icmp_ln86_1, float %P_0_3, float %select_ln86_3" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 280 'select' 'select_ln86_4' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 281 [1/1] (0.69ns) (out node of the LUT)   --->   "%P_0_4 = select i1 %icmp_ln86_2, float %P_0_3, float %select_ln86_4" [Inversion_LUP1/inverse.cpp:86]   --->   Operation 281 'select' 'P_0_4' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 282 [1/1] (0.00ns)   --->   "store float %P_3_2, float* %P_3_0" [Inversion_LUP1/inverse.cpp:87]   --->   Operation 282 'store' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 283 [1/1] (1.76ns)   --->   "store float %P_0_4, float* %P_0_2" [Inversion_LUP1/inverse.cpp:87]   --->   Operation 283 'store' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 1.76>
ST_24 : Operation 284 [1/1] (1.76ns)   --->   "store float %P_1_4, float* %P_1_2" [Inversion_LUP1/inverse.cpp:87]   --->   Operation 284 'store' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 1.76>
ST_24 : Operation 285 [1/1] (1.76ns)   --->   "store float %P_2_4, float* %P_2_2" [Inversion_LUP1/inverse.cpp:87]   --->   Operation 285 'store' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 1.76>
ST_24 : Operation 286 [1/1] (0.00ns)   --->   "br label %._crit_edge" [Inversion_LUP1/inverse.cpp:87]   --->   Operation 286 'br' <Predicate = (!icmp_ln65 & icmp_ln77)> <Delay = 0.00>
ST_24 : Operation 287 [1/1] (1.76ns)   --->   "br label %7" [Inversion_LUP1/inverse.cpp:92]   --->   Operation 287 'br' <Predicate = (icmp_ln77) | (icmp_ln65)> <Delay = 1.76>

State 25 <SV = 15> <Delay = 5.43>
ST_25 : Operation 288 [1/1] (0.00ns)   --->   "%phi_ln79 = phi float [ %P_1_2_load, %branch9 ], [ %P_2_2_load, %branch10 ], [ %P_0_2_load, %6 ]" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 288 'phi' 'phi_ln79' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 289 [1/1] (0.00ns)   --->   "%bitcast_ln79 = bitcast float %phi_ln79 to i32" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 289 'bitcast' 'bitcast_ln79' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 290 [1/1] (0.00ns)   --->   "%tmp_25 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln79, i32 23, i32 30)" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 290 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 291 [1/1] (0.00ns)   --->   "%trunc_ln79_1 = trunc i32 %bitcast_ln79 to i23" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 291 'trunc' 'trunc_ln79_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 292 [1/1] (1.55ns)   --->   "%icmp_ln79 = icmp ne i8 %tmp_25, -1" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 292 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 293 [1/1] (2.44ns)   --->   "%icmp_ln79_1 = icmp eq i23 %trunc_ln79_1, 0" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 293 'icmp' 'icmp_ln79_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 294 [1/1] (0.97ns)   --->   "%or_ln79 = or i1 %icmp_ln79_1, %icmp_ln79" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 294 'or' 'or_ln79' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 295 [2/2] (5.43ns)   --->   "%tmp_27 = fcmp oeq float %phi_ln79, %tmp_5" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 295 'fcmp' 'tmp_27' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 296 [2/2] (5.43ns)   --->   "%tmp_30 = fcmp oeq float %phi_ln79, %tmp_6" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 296 'fcmp' 'tmp_30' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 16> <Delay = 6.40>
ST_26 : Operation 297 [1/1] (0.00ns)   --->   "%ind2_1_load_1 = load i32* %ind2_1" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 297 'load' 'ind2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 298 [1/1] (0.00ns)   --->   "%ind2_2_load_1 = load i32* %ind2_2" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 298 'load' 'ind2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node ind2)   --->   "%or_ln79_1 = or i1 %icmp_ln79_3, %icmp_ln79_2" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 299 'or' 'or_ln79_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node ind2)   --->   "%and_ln79 = and i1 %or_ln79, %or_ln79_1" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 300 'and' 'and_ln79' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 301 [1/2] (5.43ns)   --->   "%tmp_27 = fcmp oeq float %phi_ln79, %tmp_5" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 301 'fcmp' 'tmp_27' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 302 [1/1] (0.00ns) (grouped into LUT with out node ind2)   --->   "%and_ln79_1 = and i1 %and_ln79, %tmp_27" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 302 'and' 'and_ln79_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 303 [1/1] (0.97ns) (out node of the LUT)   --->   "%ind2 = select i1 %and_ln79_1, i32 %zext_ln77, i32 %ind2_2_load_1" [Inversion_LUP1/inverse.cpp:79]   --->   Operation 303 'select' 'ind2' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 304 [1/1] (0.00ns) (grouped into LUT with out node ind2_4)   --->   "%or_ln81 = or i1 %icmp_ln81, %icmp_ln81_1" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 304 'or' 'or_ln81' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node ind2_4)   --->   "%and_ln81 = and i1 %or_ln79, %or_ln81" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 305 'and' 'and_ln81' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 306 [1/2] (5.43ns)   --->   "%tmp_30 = fcmp oeq float %phi_ln79, %tmp_6" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 306 'fcmp' 'tmp_30' <Predicate = true> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node ind2_4)   --->   "%and_ln81_1 = and i1 %and_ln81, %tmp_30" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 307 'and' 'and_ln81_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 308 [1/1] (0.97ns) (out node of the LUT)   --->   "%ind2_4 = select i1 %and_ln81_1, i32 %zext_ln77, i32 %ind2_1_load_1" [Inversion_LUP1/inverse.cpp:81]   --->   Operation 308 'select' 'ind2_4' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 309 [1/1] (0.00ns)   --->   "store i32 %ind2, i32* %ind2_2" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 309 'store' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 310 [1/1] (0.00ns)   --->   "store i32 %ind2_4, i32* %ind2_1" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 310 'store' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 311 [1/1] (0.00ns)   --->   "br label %.preheader8" [Inversion_LUP1/inverse.cpp:77]   --->   Operation 311 'br' <Predicate = true> <Delay = 0.00>

State 27 <SV = 15> <Delay = 8.43>
ST_27 : Operation 312 [1/1] (0.00ns)   --->   "%k_2_in = phi i32 [ %zext_ln34, %._crit_edge ], [ %k_3, %lup_label1_end ]"   --->   Operation 312 'phi' 'k_2_in' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 313 [1/1] (2.55ns)   --->   "%k_3 = add nsw i32 %k_2_in, 1" [Inversion_LUP1/inverse.cpp:92]   --->   Operation 313 'add' 'k_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 314 [1/1] (2.47ns)   --->   "%icmp_ln92 = icmp slt i32 %k_3, 3" [Inversion_LUP1/inverse.cpp:92]   --->   Operation 314 'icmp' 'icmp_ln92' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 315 [1/1] (0.00ns)   --->   "br i1 %icmp_ln92, label %lup_label1_begin, label %lup_label0_end" [Inversion_LUP1/inverse.cpp:92]   --->   Operation 315 'br' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 316 [1/1] (0.00ns)   --->   "%trunc_ln95 = trunc i32 %k_3 to i5" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 316 'trunc' 'trunc_ln95' <Predicate = (icmp_ln92)> <Delay = 0.00>
ST_27 : Operation 317 [1/1] (0.00ns)   --->   "%trunc_ln95_1 = trunc i32 %k_3 to i3" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 317 'trunc' 'trunc_ln95_1' <Predicate = (icmp_ln92)> <Delay = 0.00>
ST_27 : Operation 318 [1/1] (0.00ns)   --->   "%sext_ln95_1_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %trunc_ln95_1, i2 0)" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 318 'bitconcatenate' 'sext_ln95_1_cast' <Predicate = (icmp_ln92)> <Delay = 0.00>
ST_27 : Operation 319 [1/1] (1.78ns)   --->   "%sub_ln95 = sub i5 %sext_ln95_1_cast, %trunc_ln95" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 319 'sub' 'sub_ln95' <Predicate = (icmp_ln92)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 320 [1/1] (1.78ns)   --->   "%add_ln95 = add i5 %zext_ln40, %sub_ln95" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 320 'add' 'add_ln95' <Predicate = (icmp_ln92)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 321 [1/1] (0.00ns)   --->   "%sext_ln95 = sext i5 %add_ln95 to i64" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 321 'sext' 'sext_ln95' <Predicate = (icmp_ln92)> <Delay = 0.00>
ST_27 : Operation 322 [1/1] (0.00ns)   --->   "%A_addr_7 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln95" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 322 'getelementptr' 'A_addr_7' <Predicate = (icmp_ln92)> <Delay = 0.00>
ST_27 : Operation 323 [2/2] (2.32ns)   --->   "%A_load_6 = load float* %A_addr_7, align 4" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 323 'load' 'A_load_6' <Predicate = (icmp_ln92)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_27 : Operation 324 [2/2] (2.32ns)   --->   "%A_load_7 = load float* %A_addr, align 4" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 324 'load' 'A_load_7' <Predicate = (icmp_ln92)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_27 : Operation 325 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1, i32 %tmp_2)" [Inversion_LUP1/inverse.cpp:102]   --->   Operation 325 'specregionend' 'empty_10' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_27 : Operation 326 [1/1] (0.00ns)   --->   "br label %.preheader10" [Inversion_LUP1/inverse.cpp:34]   --->   Operation 326 'br' <Predicate = (!icmp_ln92)> <Delay = 0.00>

State 28 <SV = 16> <Delay = 8.39>
ST_28 : Operation 327 [1/2] (2.32ns)   --->   "%A_load_6 = load float* %A_addr_7, align 4" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 327 'load' 'A_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_28 : Operation 328 [1/2] (2.32ns)   --->   "%A_load_7 = load float* %A_addr, align 4" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 328 'load' 'A_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_28 : Operation 329 [16/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 329 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 17> <Delay = 6.07>
ST_29 : Operation 330 [15/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 330 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 18> <Delay = 6.07>
ST_30 : Operation 331 [14/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 331 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 19> <Delay = 6.07>
ST_31 : Operation 332 [13/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 332 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 20> <Delay = 6.07>
ST_32 : Operation 333 [12/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 333 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 21> <Delay = 6.07>
ST_33 : Operation 334 [11/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 334 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 22> <Delay = 6.07>
ST_34 : Operation 335 [10/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 335 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 23> <Delay = 6.07>
ST_35 : Operation 336 [9/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 336 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 24> <Delay = 6.07>
ST_36 : Operation 337 [8/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 337 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 25> <Delay = 6.07>
ST_37 : Operation 338 [7/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 338 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 26> <Delay = 6.07>
ST_38 : Operation 339 [6/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 339 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 27> <Delay = 6.07>
ST_39 : Operation 340 [5/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 340 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 28> <Delay = 6.07>
ST_40 : Operation 341 [4/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 341 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 29> <Delay = 6.07>
ST_41 : Operation 342 [3/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 342 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 30> <Delay = 6.07>
ST_42 : Operation 343 [2/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 343 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 31> <Delay = 8.39>
ST_43 : Operation 344 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind" [Inversion_LUP1/inverse.cpp:93]   --->   Operation 344 'specloopname' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 345 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str5)" [Inversion_LUP1/inverse.cpp:93]   --->   Operation 345 'specregionbegin' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 346 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 3, i32 2, [1 x i8]* @p_str3) nounwind" [Inversion_LUP1/inverse.cpp:94]   --->   Operation 346 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 347 [1/16] (6.07ns)   --->   "%tmp_s = fdiv float %A_load_6, %A_load_7" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 347 'fdiv' 'tmp_s' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 348 [1/1] (2.32ns)   --->   "store float %tmp_s, float* %A_addr_7, align 4" [Inversion_LUP1/inverse.cpp:95]   --->   Operation 348 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_43 : Operation 349 [1/1] (1.76ns)   --->   "br label %8" [Inversion_LUP1/inverse.cpp:96]   --->   Operation 349 'br' <Predicate = true> <Delay = 1.76>

State 44 <SV = 32> <Delay = 6.65>
ST_44 : Operation 350 [1/1] (0.00ns)   --->   "%j_0_in = phi i32 [ %zext_ln34, %lup_label1_begin ], [ %j_4, %lup_label2 ]"   --->   Operation 350 'phi' 'j_0_in' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 351 [1/1] (2.55ns)   --->   "%j_4 = add nsw i32 %j_0_in, 1" [Inversion_LUP1/inverse.cpp:96]   --->   Operation 351 'add' 'j_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 352 [1/1] (2.47ns)   --->   "%icmp_ln96 = icmp slt i32 %j_4, 3" [Inversion_LUP1/inverse.cpp:96]   --->   Operation 352 'icmp' 'icmp_ln96' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 353 [1/1] (0.00ns)   --->   "br i1 %icmp_ln96, label %lup_label2, label %lup_label1_end" [Inversion_LUP1/inverse.cpp:96]   --->   Operation 353 'br' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 354 [1/1] (0.00ns)   --->   "%trunc_ln99 = trunc i32 %j_4 to i5" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 354 'trunc' 'trunc_ln99' <Predicate = (icmp_ln96)> <Delay = 0.00>
ST_44 : Operation 355 [1/1] (1.78ns)   --->   "%add_ln99 = add i5 %sub_ln95, %trunc_ln99" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 355 'add' 'add_ln99' <Predicate = (icmp_ln96)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 356 [1/1] (0.00ns)   --->   "%sext_ln99 = sext i5 %add_ln99 to i64" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 356 'sext' 'sext_ln99' <Predicate = (icmp_ln96)> <Delay = 0.00>
ST_44 : Operation 357 [1/1] (0.00ns)   --->   "%A_addr_8 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln99" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 357 'getelementptr' 'A_addr_8' <Predicate = (icmp_ln96)> <Delay = 0.00>
ST_44 : Operation 358 [1/1] (1.78ns)   --->   "%add_ln99_1 = add i5 %sub_ln40, %trunc_ln99" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 358 'add' 'add_ln99_1' <Predicate = (icmp_ln96)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 359 [1/1] (0.00ns)   --->   "%sext_ln99_1 = sext i5 %add_ln99_1 to i64" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 359 'sext' 'sext_ln99_1' <Predicate = (icmp_ln96)> <Delay = 0.00>
ST_44 : Operation 360 [1/1] (0.00ns)   --->   "%A_addr_9 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln99_1" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 360 'getelementptr' 'A_addr_9' <Predicate = (icmp_ln96)> <Delay = 0.00>
ST_44 : Operation 361 [2/2] (2.32ns)   --->   "%A_load_9 = load float* %A_addr_9, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 361 'load' 'A_load_9' <Predicate = (icmp_ln96)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_44 : Operation 362 [2/2] (2.32ns)   --->   "%A_load_10 = load float* %A_addr_7, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 362 'load' 'A_load_10' <Predicate = (icmp_ln96)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_44 : Operation 363 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str5, i32 %tmp_19)" [Inversion_LUP1/inverse.cpp:101]   --->   Operation 363 'specregionend' 'empty_9' <Predicate = (!icmp_ln96)> <Delay = 0.00>
ST_44 : Operation 364 [1/1] (0.00ns)   --->   "br label %7" [Inversion_LUP1/inverse.cpp:92]   --->   Operation 364 'br' <Predicate = (!icmp_ln96)> <Delay = 0.00>

State 45 <SV = 33> <Delay = 8.02>
ST_45 : Operation 365 [1/2] (2.32ns)   --->   "%A_load_9 = load float* %A_addr_9, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 365 'load' 'A_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_45 : Operation 366 [1/2] (2.32ns)   --->   "%A_load_10 = load float* %A_addr_7, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 366 'load' 'A_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_45 : Operation 367 [4/4] (5.70ns)   --->   "%tmp_7 = fmul float %A_load_9, %A_load_10" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 367 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 34> <Delay = 5.70>
ST_46 : Operation 368 [3/4] (5.70ns)   --->   "%tmp_7 = fmul float %A_load_9, %A_load_10" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 368 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 35> <Delay = 5.70>
ST_47 : Operation 369 [2/2] (2.32ns)   --->   "%A_load_8 = load float* %A_addr_8, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 369 'load' 'A_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_47 : Operation 370 [2/4] (5.70ns)   --->   "%tmp_7 = fmul float %A_load_9, %A_load_10" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 370 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 36> <Delay = 5.70>
ST_48 : Operation 371 [1/2] (2.32ns)   --->   "%A_load_8 = load float* %A_addr_8, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 371 'load' 'A_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_48 : Operation 372 [1/4] (5.70ns)   --->   "%tmp_7 = fmul float %A_load_9, %A_load_10" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 372 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 37> <Delay = 7.25>
ST_49 : Operation 373 [5/5] (7.25ns)   --->   "%tmp_10 = fsub float %A_load_8, %tmp_7" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 373 'fsub' 'tmp_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 38> <Delay = 7.25>
ST_50 : Operation 374 [4/5] (7.25ns)   --->   "%tmp_10 = fsub float %A_load_8, %tmp_7" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 374 'fsub' 'tmp_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 39> <Delay = 7.25>
ST_51 : Operation 375 [3/5] (7.25ns)   --->   "%tmp_10 = fsub float %A_load_8, %tmp_7" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 375 'fsub' 'tmp_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 40> <Delay = 7.25>
ST_52 : Operation 376 [2/5] (7.25ns)   --->   "%tmp_10 = fsub float %A_load_8, %tmp_7" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 376 'fsub' 'tmp_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 41> <Delay = 7.25>
ST_53 : Operation 377 [1/5] (7.25ns)   --->   "%tmp_10 = fsub float %A_load_8, %tmp_7" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 377 'fsub' 'tmp_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 42> <Delay = 2.32>
ST_54 : Operation 378 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str6) nounwind" [Inversion_LUP1/inverse.cpp:97]   --->   Operation 378 'specloopname' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 379 [1/1] (0.00ns)   --->   "%tmp_20 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str6)" [Inversion_LUP1/inverse.cpp:97]   --->   Operation 379 'specregionbegin' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 380 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 3, i32 2, [1 x i8]* @p_str3) nounwind" [Inversion_LUP1/inverse.cpp:98]   --->   Operation 380 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 381 [1/1] (2.32ns)   --->   "store float %tmp_10, float* %A_addr_8, align 4" [Inversion_LUP1/inverse.cpp:99]   --->   Operation 381 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_54 : Operation 382 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str6, i32 %tmp_20)" [Inversion_LUP1/inverse.cpp:100]   --->   Operation 382 'specregionend' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 383 [1/1] (0.00ns)   --->   "br label %8" [Inversion_LUP1/inverse.cpp:96]   --->   Operation 383 'br' <Predicate = true> <Delay = 0.00>

State 55 <SV = 3> <Delay = 1.76>
ST_55 : Operation 384 [1/1] (0.00ns)   --->   "%j = phi i2 [ %i_1, %Assign_L0_end ], [ 0, %.preheader7.preheader ]"   --->   Operation 384 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 385 [1/1] (0.00ns)   --->   "%zext_ln104 = zext i2 %j to i32" [Inversion_LUP1/inverse.cpp:104]   --->   Operation 385 'zext' 'zext_ln104' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 386 [1/1] (0.95ns)   --->   "%icmp_ln104 = icmp eq i2 %j, -1" [Inversion_LUP1/inverse.cpp:104]   --->   Operation 386 'icmp' 'icmp_ln104' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 387 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 387 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 388 [1/1] (1.56ns)   --->   "%i_1 = add i2 %j, 1" [Inversion_LUP1/inverse.cpp:104]   --->   Operation 388 'add' 'i_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 389 [1/1] (0.00ns)   --->   "br i1 %icmp_ln104, label %.preheader.preheader, label %Assign_L0_begin" [Inversion_LUP1/inverse.cpp:104]   --->   Operation 389 'br' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 390 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str7) nounwind" [Inversion_LUP1/inverse.cpp:105]   --->   Operation 390 'specloopname' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_55 : Operation 391 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str7)" [Inversion_LUP1/inverse.cpp:105]   --->   Operation 391 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_55 : Operation 392 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i2 %j to i5" [Inversion_LUP1/inverse.cpp:110]   --->   Operation 392 'zext' 'zext_ln110' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_55 : Operation 393 [1/1] (0.00ns)   --->   "%tmp_16 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %j, i2 0)" [Inversion_LUP1/inverse.cpp:110]   --->   Operation 393 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_55 : Operation 394 [1/1] (0.00ns)   --->   "%zext_ln110_1 = zext i4 %tmp_16 to i64" [Inversion_LUP1/inverse.cpp:110]   --->   Operation 394 'zext' 'zext_ln110_1' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_55 : Operation 395 [1/1] (0.00ns)   --->   "%L_addr = getelementptr [9 x float]* %L, i64 0, i64 %zext_ln110_1" [Inversion_LUP1/inverse.cpp:110]   --->   Operation 395 'getelementptr' 'L_addr' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_55 : Operation 396 [1/1] (1.76ns)   --->   "br label %9" [Inversion_LUP1/inverse.cpp:106]   --->   Operation 396 'br' <Predicate = (!icmp_ln104)> <Delay = 1.76>
ST_55 : Operation 397 [1/1] (1.76ns)   --->   "br label %.preheader" [Inversion_LUP1/inverse.cpp:117]   --->   Operation 397 'br' <Predicate = (icmp_ln104)> <Delay = 1.76>

State 56 <SV = 4> <Delay = 5.72>
ST_56 : Operation 398 [1/1] (0.00ns)   --->   "%j5_0 = phi i32 [ %zext_ln104, %Assign_L0_begin ], [ %j_3, %Assign_L1_end ]"   --->   Operation 398 'phi' 'j5_0' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 399 [1/1] (2.47ns)   --->   "%icmp_ln106 = icmp eq i32 %j5_0, 3" [Inversion_LUP1/inverse.cpp:106]   --->   Operation 399 'icmp' 'icmp_ln106' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 400 [1/1] (0.00ns)   --->   "br i1 %icmp_ln106, label %Assign_L0_end, label %Assign_L1_begin" [Inversion_LUP1/inverse.cpp:106]   --->   Operation 400 'br' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 401 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str8) nounwind" [Inversion_LUP1/inverse.cpp:107]   --->   Operation 401 'specloopname' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_56 : Operation 402 [1/1] (0.00ns)   --->   "%tmp_15 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str8)" [Inversion_LUP1/inverse.cpp:107]   --->   Operation 402 'specregionbegin' 'tmp_15' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_56 : Operation 403 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 3, i32 2, [1 x i8]* @p_str3) nounwind" [Inversion_LUP1/inverse.cpp:108]   --->   Operation 403 'speclooptripcount' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_56 : Operation 404 [1/1] (2.47ns)   --->   "%icmp_ln109 = icmp eq i32 %zext_ln104, %j5_0" [Inversion_LUP1/inverse.cpp:109]   --->   Operation 404 'icmp' 'icmp_ln109' <Predicate = (!icmp_ln106)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 405 [1/1] (0.00ns)   --->   "br i1 %icmp_ln109, label %10, label %11" [Inversion_LUP1/inverse.cpp:109]   --->   Operation 405 'br' <Predicate = (!icmp_ln106)> <Delay = 0.00>
ST_56 : Operation 406 [1/1] (0.00ns)   --->   "%trunc_ln112 = trunc i32 %j5_0 to i5" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 406 'trunc' 'trunc_ln112' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 0.00>
ST_56 : Operation 407 [1/1] (0.00ns)   --->   "%trunc_ln112_1 = trunc i32 %j5_0 to i3" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 407 'trunc' 'trunc_ln112_1' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 0.00>
ST_56 : Operation 408 [1/1] (0.00ns)   --->   "%sext_ln112_1_cast = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %trunc_ln112_1, i2 0)" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 408 'bitconcatenate' 'sext_ln112_1_cast' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 0.00>
ST_56 : Operation 409 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln112 = sub i5 %sext_ln112_1_cast, %trunc_ln112" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 409 'sub' 'sub_ln112' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 410 [1/1] (3.40ns) (root node of TernaryAdder)   --->   "%add_ln112 = add i5 %zext_ln110, %sub_ln112" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 410 'add' 'add_ln112' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 3.40> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 411 [1/1] (0.00ns)   --->   "%sext_ln112 = sext i5 %add_ln112 to i64" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 411 'sext' 'sext_ln112' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 0.00>
ST_56 : Operation 412 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln112" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 412 'getelementptr' 'A_addr_4' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 0.00>
ST_56 : Operation 413 [2/2] (2.32ns)   --->   "%A_load_2 = load float* %A_addr_4, align 4" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 413 'load' 'A_load_2' <Predicate = (!icmp_ln106 & !icmp_ln109)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_56 : Operation 414 [1/1] (2.32ns)   --->   "store float 1.000000e+00, float* %L_addr, align 4" [Inversion_LUP1/inverse.cpp:110]   --->   Operation 414 'store' <Predicate = (!icmp_ln106 & icmp_ln109)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_56 : Operation 415 [1/1] (0.00ns)   --->   "br label %Assign_L1_end" [Inversion_LUP1/inverse.cpp:110]   --->   Operation 415 'br' <Predicate = (!icmp_ln106 & icmp_ln109)> <Delay = 0.00>
ST_56 : Operation 416 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str7, i32 %tmp_1)" [Inversion_LUP1/inverse.cpp:114]   --->   Operation 416 'specregionend' 'empty_12' <Predicate = (icmp_ln106)> <Delay = 0.00>
ST_56 : Operation 417 [1/1] (0.00ns)   --->   "br label %.preheader7" [Inversion_LUP1/inverse.cpp:104]   --->   Operation 417 'br' <Predicate = (icmp_ln106)> <Delay = 0.00>

State 57 <SV = 5> <Delay = 4.64>
ST_57 : Operation 418 [1/1] (0.00ns)   --->   "%L_addr_1 = getelementptr [9 x float]* %L, i64 0, i64 %sext_ln112" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 418 'getelementptr' 'L_addr_1' <Predicate = (!icmp_ln109)> <Delay = 0.00>
ST_57 : Operation 419 [1/2] (2.32ns)   --->   "%A_load_2 = load float* %A_addr_4, align 4" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 419 'load' 'A_load_2' <Predicate = (!icmp_ln109)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_57 : Operation 420 [1/1] (2.32ns)   --->   "store float %A_load_2, float* %L_addr_1, align 4" [Inversion_LUP1/inverse.cpp:112]   --->   Operation 420 'store' <Predicate = (!icmp_ln109)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_57 : Operation 421 [1/1] (0.00ns)   --->   "br label %Assign_L1_end"   --->   Operation 421 'br' <Predicate = (!icmp_ln109)> <Delay = 0.00>
ST_57 : Operation 422 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str8, i32 %tmp_15)" [Inversion_LUP1/inverse.cpp:113]   --->   Operation 422 'specregionend' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 423 [1/1] (2.55ns)   --->   "%j_3 = add nsw i32 %j5_0, 1" [Inversion_LUP1/inverse.cpp:106]   --->   Operation 423 'add' 'j_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 424 [1/1] (0.00ns)   --->   "br label %9" [Inversion_LUP1/inverse.cpp:106]   --->   Operation 424 'br' <Predicate = true> <Delay = 0.00>

State 58 <SV = 4> <Delay = 1.76>
ST_58 : Operation 425 [1/1] (0.00ns)   --->   "%j_1 = phi i2 [ %i_2, %Assign_U0_end ], [ 0, %.preheader.preheader ]"   --->   Operation 425 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 426 [1/1] (0.00ns)   --->   "%zext_ln117 = zext i2 %j_1 to i32" [Inversion_LUP1/inverse.cpp:117]   --->   Operation 426 'zext' 'zext_ln117' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 427 [1/1] (0.95ns)   --->   "%icmp_ln117 = icmp eq i2 %j_1, -1" [Inversion_LUP1/inverse.cpp:117]   --->   Operation 427 'icmp' 'icmp_ln117' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 428 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 428 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 429 [1/1] (1.56ns)   --->   "%i_2 = add i2 %j_1, 1" [Inversion_LUP1/inverse.cpp:117]   --->   Operation 429 'add' 'i_2' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 430 [1/1] (0.00ns)   --->   "br i1 %icmp_ln117, label %.loopexit.loopexit, label %Assign_U0_begin" [Inversion_LUP1/inverse.cpp:117]   --->   Operation 430 'br' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 431 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str9) nounwind" [Inversion_LUP1/inverse.cpp:118]   --->   Operation 431 'specloopname' <Predicate = (!icmp_ln117)> <Delay = 0.00>
ST_58 : Operation 432 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str9)" [Inversion_LUP1/inverse.cpp:118]   --->   Operation 432 'specregionbegin' 'tmp_14' <Predicate = (!icmp_ln117)> <Delay = 0.00>
ST_58 : Operation 433 [1/1] (0.00ns)   --->   "%zext_ln122 = zext i2 %j_1 to i5" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 433 'zext' 'zext_ln122' <Predicate = (!icmp_ln117)> <Delay = 0.00>
ST_58 : Operation 434 [1/1] (0.00ns)   --->   "%tmp_24 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %j_1, i2 0)" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 434 'bitconcatenate' 'tmp_24' <Predicate = (!icmp_ln117)> <Delay = 0.00>
ST_58 : Operation 435 [1/1] (0.00ns)   --->   "%zext_ln122_1 = zext i4 %tmp_24 to i5" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 435 'zext' 'zext_ln122_1' <Predicate = (!icmp_ln117)> <Delay = 0.00>
ST_58 : Operation 436 [1/1] (1.73ns)   --->   "%sub_ln122 = sub i5 %zext_ln122_1, %zext_ln122" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 436 'sub' 'sub_ln122' <Predicate = (!icmp_ln117)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 437 [1/1] (1.76ns)   --->   "br label %12" [Inversion_LUP1/inverse.cpp:119]   --->   Operation 437 'br' <Predicate = (!icmp_ln117)> <Delay = 1.76>
ST_58 : Operation 438 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 438 'br' <Predicate = (icmp_ln117)> <Delay = 1.76>

State 59 <SV = 5> <Delay = 4.10>
ST_59 : Operation 439 [1/1] (0.00ns)   --->   "%j7_0 = phi i32 [ %zext_ln117, %Assign_U0_begin ], [ %j_2, %Assign_U1 ]"   --->   Operation 439 'phi' 'j7_0' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 440 [1/1] (2.47ns)   --->   "%icmp_ln119 = icmp eq i32 %j7_0, 3" [Inversion_LUP1/inverse.cpp:119]   --->   Operation 440 'icmp' 'icmp_ln119' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 441 [1/1] (0.00ns)   --->   "br i1 %icmp_ln119, label %Assign_U0_end, label %Assign_U1" [Inversion_LUP1/inverse.cpp:119]   --->   Operation 441 'br' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 442 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i32 %j7_0 to i5" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 442 'trunc' 'trunc_ln122' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_59 : Operation 443 [1/1] (1.78ns)   --->   "%add_ln122 = add i5 %sub_ln122, %trunc_ln122" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 443 'add' 'add_ln122' <Predicate = (!icmp_ln119)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 444 [1/1] (0.00ns)   --->   "%sext_ln122 = sext i5 %add_ln122 to i64" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 444 'sext' 'sext_ln122' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_59 : Operation 445 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [9 x float]* %A, i64 0, i64 %sext_ln122" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 445 'getelementptr' 'A_addr_3' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_59 : Operation 446 [2/2] (2.32ns)   --->   "%A_load_5 = load float* %A_addr_3, align 4" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 446 'load' 'A_load_5' <Predicate = (!icmp_ln119)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_59 : Operation 447 [1/1] (2.55ns)   --->   "%j_2 = add nsw i32 1, %j7_0" [Inversion_LUP1/inverse.cpp:119]   --->   Operation 447 'add' 'j_2' <Predicate = (!icmp_ln119)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 448 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str9, i32 %tmp_14)" [Inversion_LUP1/inverse.cpp:124]   --->   Operation 448 'specregionend' 'empty_14' <Predicate = (icmp_ln119)> <Delay = 0.00>
ST_59 : Operation 449 [1/1] (0.00ns)   --->   "br label %.preheader" [Inversion_LUP1/inverse.cpp:117]   --->   Operation 449 'br' <Predicate = (icmp_ln119)> <Delay = 0.00>

State 60 <SV = 6> <Delay = 4.64>
ST_60 : Operation 450 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str10) nounwind" [Inversion_LUP1/inverse.cpp:120]   --->   Operation 450 'specloopname' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 451 [1/1] (0.00ns)   --->   "%tmp_17 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str10)" [Inversion_LUP1/inverse.cpp:120]   --->   Operation 451 'specregionbegin' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 452 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 3, i32 2, [1 x i8]* @p_str3) nounwind" [Inversion_LUP1/inverse.cpp:121]   --->   Operation 452 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 453 [1/1] (0.00ns)   --->   "%U_addr = getelementptr [9 x float]* %U, i64 0, i64 %sext_ln122" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 453 'getelementptr' 'U_addr' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 454 [1/2] (2.32ns)   --->   "%A_load_5 = load float* %A_addr_3, align 4" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 454 'load' 'A_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_60 : Operation 455 [1/1] (2.32ns)   --->   "store float %A_load_5, float* %U_addr, align 4" [Inversion_LUP1/inverse.cpp:122]   --->   Operation 455 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_60 : Operation 456 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str10, i32 %tmp_17)" [Inversion_LUP1/inverse.cpp:123]   --->   Operation 456 'specregionend' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 457 [1/1] (0.00ns)   --->   "br label %12" [Inversion_LUP1/inverse.cpp:119]   --->   Operation 457 'br' <Predicate = true> <Delay = 0.00>

State 61 <SV = 7> <Delay = 0.00>
ST_61 : Operation 458 [1/1] (0.00ns)   --->   "%p_0 = phi i1 [ false, %.loopexit.loopexit ], [ true, %.loopexit.loopexit7 ]"   --->   Operation 458 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 459 [1/1] (0.00ns)   --->   "%newret = insertvalue { i1, float, float, float } undef, i1 %p_0, 0"   --->   Operation 459 'insertvalue' 'newret' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 460 [1/1] (0.00ns)   --->   "%newret2 = insertvalue { i1, float, float, float } %newret, float %P_0_2_load, 1"   --->   Operation 460 'insertvalue' 'newret2' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 461 [1/1] (0.00ns)   --->   "%newret4 = insertvalue { i1, float, float, float } %newret2, float %P_1_2_load, 2"   --->   Operation 461 'insertvalue' 'newret4' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 462 [1/1] (0.00ns)   --->   "%newret6 = insertvalue { i1, float, float, float } %newret4, float %P_2_2_load, 3"   --->   Operation 462 'insertvalue' 'newret6' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 463 [1/1] (0.00ns)   --->   "ret { i1, float, float, float } %newret6"   --->   Operation 463 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', Inversion_LUP1/inverse.cpp:17) [9]  (1.77 ns)

 <State 2>: 6.41ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Inversion_LUP1/inverse.cpp:17) [9]  (0 ns)
	'sitofp' operation ('tmp', Inversion_LUP1/inverse.cpp:19) [20]  (6.41 ns)

 <State 3>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp', Inversion_LUP1/inverse.cpp:19) [20]  (6.41 ns)

 <State 4>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp', Inversion_LUP1/inverse.cpp:19) [20]  (6.41 ns)

 <State 5>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp', Inversion_LUP1/inverse.cpp:19) [20]  (6.41 ns)

 <State 6>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp', Inversion_LUP1/inverse.cpp:19) [20]  (6.41 ns)

 <State 7>: 7.11ns
The critical path consists of the following:
	'sitofp' operation ('tmp', Inversion_LUP1/inverse.cpp:19) [20]  (6.41 ns)
	'select' operation ('select_ln19', Inversion_LUP1/inverse.cpp:19) [22]  (0 ns)
	'select' operation ('P_2_1', Inversion_LUP1/inverse.cpp:19) [24]  (0.698 ns)

 <State 8>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Inversion_LUP1/inverse.cpp:34) [47]  (0 ns)
	'getelementptr' operation ('A_addr', Inversion_LUP1/inverse.cpp:40) [64]  (0 ns)
	'load' operation ('max', Inversion_LUP1/inverse.cpp:40) on array 'A' [65]  (2.32 ns)

 <State 9>: 4.77ns
The critical path consists of the following:
	'load' operation ('max', Inversion_LUP1/inverse.cpp:40) on array 'A' [65]  (2.32 ns)
	'icmp' operation ('icmp_ln50_3', Inversion_LUP1/inverse.cpp:50) [68]  (2.45 ns)

 <State 10>: 8.28ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('zext_ln34', Inversion_LUP1/inverse.cpp:34) ('pos', Inversion_LUP1/inverse.cpp:46) [73]  (0 ns)
	'add' operation ('pos', Inversion_LUP1/inverse.cpp:46) [74]  (2.55 ns)
	'sub' operation ('sub_ln49', Inversion_LUP1/inverse.cpp:49) [84]  (0 ns)
	'add' operation ('add_ln49', Inversion_LUP1/inverse.cpp:49) [85]  (3.4 ns)
	'getelementptr' operation ('A_addr_2', Inversion_LUP1/inverse.cpp:49) [87]  (0 ns)
	'load' operation ('max', Inversion_LUP1/inverse.cpp:49) on array 'A' [88]  (2.32 ns)

 <State 11>: 7.75ns
The critical path consists of the following:
	'load' operation ('max', Inversion_LUP1/inverse.cpp:49) on array 'A' [88]  (2.32 ns)
	'fcmp' operation ('tmp_13', Inversion_LUP1/inverse.cpp:50) [99]  (5.43 ns)

 <State 12>: 8.09ns
The critical path consists of the following:
	'fcmp' operation ('tmp_22', Inversion_LUP1/inverse.cpp:50) [108]  (5.43 ns)
	'and' operation ('and_ln50_4', Inversion_LUP1/inverse.cpp:50) [109]  (0.978 ns)
	'and' operation ('and_ln50', Inversion_LUP1/inverse.cpp:50) [110]  (0.978 ns)
	'select' operation ('select_ln50', Inversion_LUP1/inverse.cpp:50) [111]  (0.698 ns)

 <State 13>: 7.75ns
The critical path consists of the following:
	'load' operation ('A_load', Inversion_LUP1/inverse.cpp:58) on array 'A' [123]  (2.32 ns)
	'fcmp' operation ('tmp_4', Inversion_LUP1/inverse.cpp:58) [130]  (5.43 ns)

 <State 14>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', Inversion_LUP1/inverse.cpp:58) [130]  (5.43 ns)
	'and' operation ('and_ln58', Inversion_LUP1/inverse.cpp:58) [131]  (0.978 ns)

 <State 15>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp_5', Inversion_LUP1/inverse.cpp:79) [159]  (6.41 ns)

 <State 16>: 4.64ns
The critical path consists of the following:
	'load' operation ('A_load_4', Inversion_LUP1/inverse.cpp:71) on array 'A' [154]  (2.32 ns)
	'store' operation ('store_ln71', Inversion_LUP1/inverse.cpp:71) of variable 'A_load_4', Inversion_LUP1/inverse.cpp:71 on array 'A' [155]  (2.32 ns)

 <State 17>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln72', Inversion_LUP1/inverse.cpp:72) of variable 'tmp', Inversion_LUP1/inverse.cpp:70 on array 'A' [156]  (2.32 ns)

 <State 18>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp_5', Inversion_LUP1/inverse.cpp:79) [159]  (6.41 ns)

 <State 19>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp_5', Inversion_LUP1/inverse.cpp:79) [159]  (6.41 ns)

 <State 20>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp_5', Inversion_LUP1/inverse.cpp:79) [159]  (6.41 ns)

 <State 21>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp_5', Inversion_LUP1/inverse.cpp:79) [159]  (6.41 ns)

 <State 22>: 6.41ns
The critical path consists of the following:
	'sitofp' operation ('tmp_5', Inversion_LUP1/inverse.cpp:79) [159]  (6.41 ns)

 <State 23>: 2.45ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln79_3', Inversion_LUP1/inverse.cpp:79) [163]  (2.45 ns)

 <State 24>: 6.52ns
The critical path consists of the following:
	'load' operation ('ind2_2_load', Inversion_LUP1/inverse.cpp:85) on local variable 'ind2' [210]  (0 ns)
	'mux' operation ('tmp_23', Inversion_LUP1/inverse.cpp:85) [215]  (1.96 ns)
	'select' operation ('select_ln85_3', Inversion_LUP1/inverse.cpp:85) [225]  (0 ns)
	'select' operation ('select_ln85_4', Inversion_LUP1/inverse.cpp:85) [226]  (0.698 ns)
	'select' operation ('P_0_3', Inversion_LUP1/inverse.cpp:85) [227]  (0.698 ns)
	'select' operation ('select_ln86_4', Inversion_LUP1/inverse.cpp:86) [238]  (0.698 ns)
	'select' operation ('P_0_4', Inversion_LUP1/inverse.cpp:86) [239]  (0.698 ns)
	'store' operation ('store_ln87', Inversion_LUP1/inverse.cpp:87) of variable 'P_0_4', Inversion_LUP1/inverse.cpp:86 on local variable 'P_0_2' [241]  (1.77 ns)

 <State 25>: 5.43ns
The critical path consists of the following:
	'phi' operation ('phi_ln79', Inversion_LUP1/inverse.cpp:79) with incoming values : ('P_2_2_load') ('P_1_2_load') ('P_0_2_load') [182]  (0 ns)
	'fcmp' operation ('tmp_27', Inversion_LUP1/inverse.cpp:79) [195]  (5.43 ns)

 <State 26>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_27', Inversion_LUP1/inverse.cpp:79) [195]  (5.43 ns)
	'and' operation ('and_ln79_1', Inversion_LUP1/inverse.cpp:79) [196]  (0 ns)
	'select' operation ('ind2', Inversion_LUP1/inverse.cpp:79) [197]  (0.978 ns)

 <State 27>: 8.43ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('zext_ln34', Inversion_LUP1/inverse.cpp:34) ('k', Inversion_LUP1/inverse.cpp:92) [248]  (0 ns)
	'add' operation ('k', Inversion_LUP1/inverse.cpp:92) [249]  (2.55 ns)
	'sub' operation ('sub_ln95', Inversion_LUP1/inverse.cpp:95) [259]  (1.78 ns)
	'add' operation ('add_ln95', Inversion_LUP1/inverse.cpp:95) [260]  (1.78 ns)
	'getelementptr' operation ('A_addr_7', Inversion_LUP1/inverse.cpp:95) [262]  (0 ns)
	'load' operation ('A_load_6', Inversion_LUP1/inverse.cpp:95) on array 'A' [263]  (2.32 ns)

 <State 28>: 8.4ns
The critical path consists of the following:
	'load' operation ('A_load_6', Inversion_LUP1/inverse.cpp:95) on array 'A' [263]  (2.32 ns)
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 29>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 30>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 31>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 32>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 33>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 34>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 35>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 36>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 37>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 38>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 39>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 40>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 41>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 42>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)

 <State 43>: 8.4ns
The critical path consists of the following:
	'fdiv' operation ('tmp_s', Inversion_LUP1/inverse.cpp:95) [265]  (6.08 ns)
	'store' operation ('store_ln95', Inversion_LUP1/inverse.cpp:95) of variable 'tmp_s', Inversion_LUP1/inverse.cpp:95 on array 'A' [266]  (2.32 ns)

 <State 44>: 6.65ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('zext_ln34', Inversion_LUP1/inverse.cpp:34) ('j', Inversion_LUP1/inverse.cpp:96) [269]  (0 ns)
	'add' operation ('j', Inversion_LUP1/inverse.cpp:96) [270]  (2.55 ns)
	'add' operation ('add_ln99_1', Inversion_LUP1/inverse.cpp:99) [281]  (1.78 ns)
	'getelementptr' operation ('A_addr_9', Inversion_LUP1/inverse.cpp:99) [283]  (0 ns)
	'load' operation ('A_load_9', Inversion_LUP1/inverse.cpp:99) on array 'A' [285]  (2.32 ns)

 <State 45>: 8.02ns
The critical path consists of the following:
	'load' operation ('A_load_9', Inversion_LUP1/inverse.cpp:99) on array 'A' [285]  (2.32 ns)
	'fmul' operation ('tmp_7', Inversion_LUP1/inverse.cpp:99) [287]  (5.7 ns)

 <State 46>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_7', Inversion_LUP1/inverse.cpp:99) [287]  (5.7 ns)

 <State 47>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_7', Inversion_LUP1/inverse.cpp:99) [287]  (5.7 ns)

 <State 48>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_7', Inversion_LUP1/inverse.cpp:99) [287]  (5.7 ns)

 <State 49>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_10', Inversion_LUP1/inverse.cpp:99) [288]  (7.26 ns)

 <State 50>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_10', Inversion_LUP1/inverse.cpp:99) [288]  (7.26 ns)

 <State 51>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_10', Inversion_LUP1/inverse.cpp:99) [288]  (7.26 ns)

 <State 52>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_10', Inversion_LUP1/inverse.cpp:99) [288]  (7.26 ns)

 <State 53>: 7.26ns
The critical path consists of the following:
	'fsub' operation ('tmp_10', Inversion_LUP1/inverse.cpp:99) [288]  (7.26 ns)

 <State 54>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln99', Inversion_LUP1/inverse.cpp:99) of variable 'tmp_10', Inversion_LUP1/inverse.cpp:99 on array 'A' [289]  (2.32 ns)

 <State 55>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('zext_ln104', Inversion_LUP1/inverse.cpp:104) ('j', Inversion_LUP1/inverse.cpp:106) [318]  (1.77 ns)

 <State 56>: 5.73ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('zext_ln104', Inversion_LUP1/inverse.cpp:104) ('j', Inversion_LUP1/inverse.cpp:106) [318]  (0 ns)
	'sub' operation ('sub_ln112', Inversion_LUP1/inverse.cpp:112) [331]  (0 ns)
	'add' operation ('add_ln112', Inversion_LUP1/inverse.cpp:112) [332]  (3.4 ns)
	'getelementptr' operation ('A_addr_4', Inversion_LUP1/inverse.cpp:112) [334]  (0 ns)
	'load' operation ('A_load_2', Inversion_LUP1/inverse.cpp:112) on array 'A' [336]  (2.32 ns)

 <State 57>: 4.64ns
The critical path consists of the following:
	'load' operation ('A_load_2', Inversion_LUP1/inverse.cpp:112) on array 'A' [336]  (2.32 ns)
	'store' operation ('store_ln112', Inversion_LUP1/inverse.cpp:112) of variable 'A_load_2', Inversion_LUP1/inverse.cpp:112 on array 'L' [337]  (2.32 ns)

 <State 58>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('zext_ln117', Inversion_LUP1/inverse.cpp:117) ('j', Inversion_LUP1/inverse.cpp:119) [367]  (1.77 ns)

 <State 59>: 4.1ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('zext_ln117', Inversion_LUP1/inverse.cpp:117) ('j', Inversion_LUP1/inverse.cpp:119) [367]  (0 ns)
	'add' operation ('add_ln122', Inversion_LUP1/inverse.cpp:122) [375]  (1.78 ns)
	'getelementptr' operation ('A_addr_3', Inversion_LUP1/inverse.cpp:122) [377]  (0 ns)
	'load' operation ('A_load_5', Inversion_LUP1/inverse.cpp:122) on array 'A' [379]  (2.32 ns)

 <State 60>: 4.64ns
The critical path consists of the following:
	'load' operation ('A_load_5', Inversion_LUP1/inverse.cpp:122) on array 'A' [379]  (2.32 ns)
	'store' operation ('store_ln122', Inversion_LUP1/inverse.cpp:122) of variable 'A_load_5', Inversion_LUP1/inverse.cpp:122 on array 'U' [380]  (2.32 ns)

 <State 61>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
