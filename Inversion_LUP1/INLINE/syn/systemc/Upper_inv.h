// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Upper_inv_HH_
#define _Upper_inv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "inverse_top_fadd_bkb.h"
#include "inverse_top_fmul_cud.h"
#include "inverse_top_fdiv_dEe.h"

namespace ap_rtl {

struct Upper_inv : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > U_address0;
    sc_out< sc_logic > U_ce0;
    sc_in< sc_lv<32> > U_q0;
    sc_out< sc_lv<4> > U_inv_address0;
    sc_out< sc_logic > U_inv_ce0;
    sc_out< sc_logic > U_inv_we0;
    sc_out< sc_lv<32> > U_inv_d0;
    sc_in< sc_lv<32> > U_inv_q0;
    sc_out< sc_lv<4> > U_inv_address1;
    sc_out< sc_logic > U_inv_ce1;
    sc_out< sc_logic > U_inv_we1;
    sc_out< sc_lv<32> > U_inv_d1;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Upper_inv(sc_module_name name);
    SC_HAS_PROCESS(Upper_inv);

    ~Upper_inv();

    sc_trace_file* mVcdFile;

    inverse_top_fadd_bkb<1,5,32,32,32>* inverse_top_fadd_bkb_U11;
    inverse_top_fmul_cud<1,4,32,32,32>* inverse_top_fmul_cud_U12;
    inverse_top_fdiv_dEe<1,16,32,32,32>* inverse_top_fdiv_dEe_U13;
    sc_signal< sc_lv<30> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > i1_0_reg_161;
    sc_signal< sc_lv<32> > sum_0_reg_195;
    sc_signal< sc_lv<32> > k_0_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter5;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter6;
    sc_signal< bool > ap_block_state12_pp1_stage0_iter7;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter8;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter9;
    sc_signal< bool > ap_block_state15_pp1_stage0_iter10;
    sc_signal< bool > ap_block_state16_pp1_stage0_iter11;
    sc_signal< bool > ap_block_state17_pp1_stage0_iter12;
    sc_signal< bool > ap_block_state18_pp1_stage0_iter13;
    sc_signal< bool > ap_block_state19_pp1_stage0_iter14;
    sc_signal< bool > ap_block_state20_pp1_stage0_iter15;
    sc_signal< bool > ap_block_state21_pp1_stage0_iter16;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< bool > ap_block_state26_pp2_stage1_iter0;
    sc_signal< bool > ap_block_state31_pp2_stage1_iter1;
    sc_signal< bool > ap_block_pp2_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln205_reg_555;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<2> > i_7_fu_247_p2;
    sc_signal< sc_lv<2> > i_7_reg_478;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > sub_ln188_fu_269_p2;
    sc_signal< sc_lv<5> > sub_ln188_reg_483;
    sc_signal< sc_lv<1> > icmp_ln183_fu_241_p2;
    sc_signal< sc_lv<1> > icmp_ln192_fu_301_p2;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln192_reg_488_pp1_iter15_reg;
    sc_signal< sc_lv<2> > i_fu_307_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<64> > zext_ln195_fu_321_p1;
    sc_signal< sc_lv<64> > zext_ln195_reg_497;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter2_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter4_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter5_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter6_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter7_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter8_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter9_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter10_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter11_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter12_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter13_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter14_reg;
    sc_signal< sc_lv<64> > zext_ln195_reg_497_pp1_iter15_reg;
    sc_signal< sc_lv<2> > i_8_fu_332_p2;
    sc_signal< sc_lv<2> > i_8_reg_510;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > zext_ln198_fu_338_p1;
    sc_signal< sc_lv<32> > zext_ln198_reg_515;
    sc_signal< sc_lv<1> > icmp_ln198_fu_326_p2;
    sc_signal< sc_lv<5> > zext_ln211_1_fu_342_p1;
    sc_signal< sc_lv<5> > zext_ln211_1_reg_520;
    sc_signal< sc_lv<4> > U_addr_1_reg_526;
    sc_signal< sc_lv<1> > icmp_ln200_fu_359_p2;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<2> > j_fu_365_p2;
    sc_signal< sc_lv<2> > j_reg_535;
    sc_signal< sc_lv<32> > zext_ln200_fu_371_p1;
    sc_signal< sc_lv<5> > sub_ln209_fu_391_p2;
    sc_signal< sc_lv<5> > sub_ln209_reg_545;
    sc_signal< sc_lv<4> > U_inv_addr_6_reg_550;
    sc_signal< sc_lv<1> > icmp_ln205_fu_407_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state25_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state30_pp2_stage0_iter1;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln205_reg_555_pp2_iter1_reg;
    sc_signal< sc_lv<32> > grp_fu_222_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_574;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage4;
    sc_signal< bool > ap_block_state29_pp2_stage4_iter0;
    sc_signal< bool > ap_block_state34_pp2_stage4_iter1;
    sc_signal< bool > ap_block_pp2_stage4_11001;
    sc_signal< sc_lv<32> > k_2_fu_454_p2;
    sc_signal< sc_lv<32> > k_2_reg_579;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<32> > bitcast_ln211_1_fu_470_p1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter16;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state25;
    sc_signal< bool > ap_block_pp2_stage4_subdone;
    sc_signal< sc_lv<2> > i_0_reg_150;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > indvars_iv_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<2> > k_reg_184;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_lv<32> > ap_phi_mux_k_0_phi_fu_210_p4;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<64> > sext_ln188_fu_275_p1;
    sc_signal< sc_lv<64> > sext_ln188_1_fu_286_p1;
    sc_signal< sc_lv<64> > sext_ln188_2_fu_296_p1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > zext_ln211_fu_354_p1;
    sc_signal< sc_lv<64> > sext_ln211_fu_402_p1;
    sc_signal< sc_lv<64> > sext_ln209_fu_439_p1;
    sc_signal< sc_lv<64> > sext_ln209_1_fu_449_p1;
    sc_signal< sc_lv<32> > grp_fu_228_p2;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< bool > ap_block_pp2_stage1;
    sc_signal< sc_lv<32> > grp_fu_228_p0;
    sc_signal< sc_lv<4> > tmp_46_fu_257_p3;
    sc_signal< sc_lv<5> > zext_ln188_1_fu_265_p1;
    sc_signal< sc_lv<5> > zext_ln188_fu_253_p1;
    sc_signal< sc_lv<5> > add_ln188_fu_280_p2;
    sc_signal< sc_lv<5> > add_ln188_1_fu_291_p2;
    sc_signal< sc_lv<4> > tmp_47_fu_313_p3;
    sc_signal< sc_lv<4> > tmp_48_fu_346_p3;
    sc_signal< sc_lv<4> > tmp_49_fu_379_p3;
    sc_signal< sc_lv<5> > zext_ln209_1_fu_387_p1;
    sc_signal< sc_lv<5> > zext_ln209_fu_375_p1;
    sc_signal< sc_lv<5> > add_ln211_fu_397_p2;
    sc_signal< sc_lv<3> > trunc_ln209_1_fu_416_p1;
    sc_signal< sc_lv<5> > sext_ln209_1_cast_fu_420_p3;
    sc_signal< sc_lv<5> > trunc_ln209_fu_412_p1;
    sc_signal< sc_lv<5> > sub_ln209_1_fu_428_p2;
    sc_signal< sc_lv<5> > add_ln209_fu_434_p2;
    sc_signal< sc_lv<5> > add_ln209_1_fu_444_p2;
    sc_signal< bool > ap_block_pp2_stage4;
    sc_signal< sc_lv<32> > bitcast_ln211_fu_460_p1;
    sc_signal< sc_lv<32> > xor_ln211_fu_464_p2;
    sc_signal< sc_lv<30> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp2_stage1_subdone;
    sc_signal< bool > ap_block_state27_pp2_stage2_iter0;
    sc_signal< bool > ap_block_state32_pp2_stage2_iter1;
    sc_signal< bool > ap_block_pp2_stage2_subdone;
    sc_signal< bool > ap_block_state28_pp2_stage3_iter0;
    sc_signal< bool > ap_block_state33_pp2_stage3_iter1;
    sc_signal< bool > ap_block_pp2_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<30> ap_ST_fsm_state1;
    static const sc_lv<30> ap_ST_fsm_state2;
    static const sc_lv<30> ap_ST_fsm_state3;
    static const sc_lv<30> ap_ST_fsm_state4;
    static const sc_lv<30> ap_ST_fsm_pp1_stage0;
    static const sc_lv<30> ap_ST_fsm_state22;
    static const sc_lv<30> ap_ST_fsm_state23;
    static const sc_lv<30> ap_ST_fsm_state24;
    static const sc_lv<30> ap_ST_fsm_pp2_stage0;
    static const sc_lv<30> ap_ST_fsm_pp2_stage1;
    static const sc_lv<30> ap_ST_fsm_pp2_stage2;
    static const sc_lv<30> ap_ST_fsm_pp2_stage3;
    static const sc_lv<30> ap_ST_fsm_pp2_stage4;
    static const sc_lv<30> ap_ST_fsm_state35;
    static const sc_lv<30> ap_ST_fsm_state36;
    static const sc_lv<30> ap_ST_fsm_state37;
    static const sc_lv<30> ap_ST_fsm_state38;
    static const sc_lv<30> ap_ST_fsm_state39;
    static const sc_lv<30> ap_ST_fsm_state40;
    static const sc_lv<30> ap_ST_fsm_state41;
    static const sc_lv<30> ap_ST_fsm_state42;
    static const sc_lv<30> ap_ST_fsm_state43;
    static const sc_lv<30> ap_ST_fsm_state44;
    static const sc_lv<30> ap_ST_fsm_state45;
    static const sc_lv<30> ap_ST_fsm_state46;
    static const sc_lv<30> ap_ST_fsm_state47;
    static const sc_lv<30> ap_ST_fsm_state48;
    static const sc_lv<30> ap_ST_fsm_state49;
    static const sc_lv<30> ap_ST_fsm_state50;
    static const sc_lv<30> ap_ST_fsm_state51;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_80000000;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_U_address0();
    void thread_U_ce0();
    void thread_U_inv_address0();
    void thread_U_inv_address1();
    void thread_U_inv_ce0();
    void thread_U_inv_ce1();
    void thread_U_inv_d0();
    void thread_U_inv_d1();
    void thread_U_inv_we0();
    void thread_U_inv_we1();
    void thread_add_ln188_1_fu_291_p2();
    void thread_add_ln188_fu_280_p2();
    void thread_add_ln209_1_fu_444_p2();
    void thread_add_ln209_fu_434_p2();
    void thread_add_ln211_fu_397_p2();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp2_stage1();
    void thread_ap_CS_fsm_pp2_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state51();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_pp2_stage1();
    void thread_ap_block_pp2_stage1_11001();
    void thread_ap_block_pp2_stage1_subdone();
    void thread_ap_block_pp2_stage2_subdone();
    void thread_ap_block_pp2_stage3_subdone();
    void thread_ap_block_pp2_stage4();
    void thread_ap_block_pp2_stage4_11001();
    void thread_ap_block_pp2_stage4_subdone();
    void thread_ap_block_state10_pp1_stage0_iter5();
    void thread_ap_block_state11_pp1_stage0_iter6();
    void thread_ap_block_state12_pp1_stage0_iter7();
    void thread_ap_block_state13_pp1_stage0_iter8();
    void thread_ap_block_state14_pp1_stage0_iter9();
    void thread_ap_block_state15_pp1_stage0_iter10();
    void thread_ap_block_state16_pp1_stage0_iter11();
    void thread_ap_block_state17_pp1_stage0_iter12();
    void thread_ap_block_state18_pp1_stage0_iter13();
    void thread_ap_block_state19_pp1_stage0_iter14();
    void thread_ap_block_state20_pp1_stage0_iter15();
    void thread_ap_block_state21_pp1_stage0_iter16();
    void thread_ap_block_state25_pp2_stage0_iter0();
    void thread_ap_block_state26_pp2_stage1_iter0();
    void thread_ap_block_state27_pp2_stage2_iter0();
    void thread_ap_block_state28_pp2_stage3_iter0();
    void thread_ap_block_state29_pp2_stage4_iter0();
    void thread_ap_block_state30_pp2_stage0_iter1();
    void thread_ap_block_state31_pp2_stage1_iter1();
    void thread_ap_block_state32_pp2_stage2_iter1();
    void thread_ap_block_state33_pp2_stage3_iter1();
    void thread_ap_block_state34_pp2_stage4_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state7_pp1_stage0_iter2();
    void thread_ap_block_state8_pp1_stage0_iter3();
    void thread_ap_block_state9_pp1_stage0_iter4();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_condition_pp2_exit_iter0_state25();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_k_0_phi_fu_210_p4();
    void thread_ap_ready();
    void thread_bitcast_ln211_1_fu_470_p1();
    void thread_bitcast_ln211_fu_460_p1();
    void thread_grp_fu_228_p0();
    void thread_i_7_fu_247_p2();
    void thread_i_8_fu_332_p2();
    void thread_i_fu_307_p2();
    void thread_icmp_ln183_fu_241_p2();
    void thread_icmp_ln192_fu_301_p2();
    void thread_icmp_ln198_fu_326_p2();
    void thread_icmp_ln200_fu_359_p2();
    void thread_icmp_ln205_fu_407_p2();
    void thread_j_fu_365_p2();
    void thread_k_2_fu_454_p2();
    void thread_sext_ln188_1_fu_286_p1();
    void thread_sext_ln188_2_fu_296_p1();
    void thread_sext_ln188_fu_275_p1();
    void thread_sext_ln209_1_cast_fu_420_p3();
    void thread_sext_ln209_1_fu_449_p1();
    void thread_sext_ln209_fu_439_p1();
    void thread_sext_ln211_fu_402_p1();
    void thread_sub_ln188_fu_269_p2();
    void thread_sub_ln209_1_fu_428_p2();
    void thread_sub_ln209_fu_391_p2();
    void thread_tmp_46_fu_257_p3();
    void thread_tmp_47_fu_313_p3();
    void thread_tmp_48_fu_346_p3();
    void thread_tmp_49_fu_379_p3();
    void thread_trunc_ln209_1_fu_416_p1();
    void thread_trunc_ln209_fu_412_p1();
    void thread_xor_ln211_fu_464_p2();
    void thread_zext_ln188_1_fu_265_p1();
    void thread_zext_ln188_fu_253_p1();
    void thread_zext_ln195_fu_321_p1();
    void thread_zext_ln198_fu_338_p1();
    void thread_zext_ln200_fu_371_p1();
    void thread_zext_ln209_1_fu_387_p1();
    void thread_zext_ln209_fu_375_p1();
    void thread_zext_ln211_1_fu_342_p1();
    void thread_zext_ln211_fu_354_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
